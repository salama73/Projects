
Atmega32_Drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000de8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00000de8  00000e7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000022  00800072  00800072  00000e8e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e8e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ec0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a8  00000000  00000000  00000efc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000240a  00000000  00000000  000011a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010b0  00000000  00000000  000035ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018be  00000000  00000000  0000465e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000924  00000000  00000000  00005f1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d14  00000000  00000000  00006840  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000167b  00000000  00000000  00007554  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00008bcf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_1>
   8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__vector_2>
   c:	0c 94 97 00 	jmp	0x12e	; 0x12e <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 49 01 	jmp	0x292	; 0x292 <__vector_7>
  20:	0c 94 73 01 	jmp	0x2e6	; 0x2e6 <__vector_8>
  24:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__vector_9>
  28:	0c 94 c7 01 	jmp	0x38e	; 0x38e <__vector_10>
  2c:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__vector_11>
  30:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__vector_12>
  34:	0c 94 12 04 	jmp	0x824	; 0x824 <__vector_13>
  38:	0c 94 39 04 	jmp	0x872	; 0x872 <__vector_14>
  3c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__vector_15>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__vector_19>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ee       	ldi	r30, 0xE8	; 232
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 37       	cpi	r26, 0x72	; 114
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 e7       	ldi	r26, 0x72	; 114
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 39       	cpi	r26, 0x94	; 148
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 d5 04 	call	0x9aa	; 0x9aa <main>
  8a:	0c 94 f2 06 	jmp	0xde4	; 0xde4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_1>:
 */


void __vector_1 (void) __attribute__((signal));
void __vector_1 (void)
{
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	2f 93       	push	r18
  9e:	3f 93       	push	r19
  a0:	4f 93       	push	r20
  a2:	5f 93       	push	r21
  a4:	6f 93       	push	r22
  a6:	7f 93       	push	r23
  a8:	8f 93       	push	r24
  aa:	9f 93       	push	r25
  ac:	af 93       	push	r26
  ae:	bf 93       	push	r27
  b0:	ef 93       	push	r30
  b2:	ff 93       	push	r31
	//Call function
	GP_IRQ_CALL[0]();
  b4:	e0 91 87 00 	lds	r30, 0x0087	; 0x800087 <GP_IRQ_CALL>
  b8:	f0 91 88 00 	lds	r31, 0x0088	; 0x800088 <GP_IRQ_CALL+0x1>
  bc:	09 95       	icall
}
  be:	ff 91       	pop	r31
  c0:	ef 91       	pop	r30
  c2:	bf 91       	pop	r27
  c4:	af 91       	pop	r26
  c6:	9f 91       	pop	r25
  c8:	8f 91       	pop	r24
  ca:	7f 91       	pop	r23
  cc:	6f 91       	pop	r22
  ce:	5f 91       	pop	r21
  d0:	4f 91       	pop	r20
  d2:	3f 91       	pop	r19
  d4:	2f 91       	pop	r18
  d6:	0f 90       	pop	r0
  d8:	0f be       	out	0x3f, r0	; 63
  da:	0f 90       	pop	r0
  dc:	1f 90       	pop	r1
  de:	18 95       	reti

000000e0 <__vector_2>:


void __vector_2 (void) __attribute__((signal));
void __vector_2 (void)
{
  e0:	1f 92       	push	r1
  e2:	0f 92       	push	r0
  e4:	0f b6       	in	r0, 0x3f	; 63
  e6:	0f 92       	push	r0
  e8:	11 24       	eor	r1, r1
  ea:	2f 93       	push	r18
  ec:	3f 93       	push	r19
  ee:	4f 93       	push	r20
  f0:	5f 93       	push	r21
  f2:	6f 93       	push	r22
  f4:	7f 93       	push	r23
  f6:	8f 93       	push	r24
  f8:	9f 93       	push	r25
  fa:	af 93       	push	r26
  fc:	bf 93       	push	r27
  fe:	ef 93       	push	r30
 100:	ff 93       	push	r31
	//Call function
	GP_IRQ_CALL[1]();
 102:	e0 91 89 00 	lds	r30, 0x0089	; 0x800089 <GP_IRQ_CALL+0x2>
 106:	f0 91 8a 00 	lds	r31, 0x008A	; 0x80008a <GP_IRQ_CALL+0x3>
 10a:	09 95       	icall
}
 10c:	ff 91       	pop	r31
 10e:	ef 91       	pop	r30
 110:	bf 91       	pop	r27
 112:	af 91       	pop	r26
 114:	9f 91       	pop	r25
 116:	8f 91       	pop	r24
 118:	7f 91       	pop	r23
 11a:	6f 91       	pop	r22
 11c:	5f 91       	pop	r21
 11e:	4f 91       	pop	r20
 120:	3f 91       	pop	r19
 122:	2f 91       	pop	r18
 124:	0f 90       	pop	r0
 126:	0f be       	out	0x3f, r0	; 63
 128:	0f 90       	pop	r0
 12a:	1f 90       	pop	r1
 12c:	18 95       	reti

0000012e <__vector_3>:


void __vector_3 (void) __attribute__((signal));
void __vector_3 (void)
{
 12e:	1f 92       	push	r1
 130:	0f 92       	push	r0
 132:	0f b6       	in	r0, 0x3f	; 63
 134:	0f 92       	push	r0
 136:	11 24       	eor	r1, r1
 138:	2f 93       	push	r18
 13a:	3f 93       	push	r19
 13c:	4f 93       	push	r20
 13e:	5f 93       	push	r21
 140:	6f 93       	push	r22
 142:	7f 93       	push	r23
 144:	8f 93       	push	r24
 146:	9f 93       	push	r25
 148:	af 93       	push	r26
 14a:	bf 93       	push	r27
 14c:	ef 93       	push	r30
 14e:	ff 93       	push	r31
	//Call function
	GP_IRQ_CALL[2]();
 150:	e0 91 8b 00 	lds	r30, 0x008B	; 0x80008b <GP_IRQ_CALL+0x4>
 154:	f0 91 8c 00 	lds	r31, 0x008C	; 0x80008c <GP_IRQ_CALL+0x5>
 158:	09 95       	icall
}
 15a:	ff 91       	pop	r31
 15c:	ef 91       	pop	r30
 15e:	bf 91       	pop	r27
 160:	af 91       	pop	r26
 162:	9f 91       	pop	r25
 164:	8f 91       	pop	r24
 166:	7f 91       	pop	r23
 168:	6f 91       	pop	r22
 16a:	5f 91       	pop	r21
 16c:	4f 91       	pop	r20
 16e:	3f 91       	pop	r19
 170:	2f 91       	pop	r18
 172:	0f 90       	pop	r0
 174:	0f be       	out	0x3f, r0	; 63
 176:	0f 90       	pop	r0
 178:	1f 90       	pop	r1
 17a:	18 95       	reti

0000017c <MCAL_GPIO_Init>:
uint16_t MCAL_GPIO_ReadPort(GPIO_TypeDef *GPIOx )
{
	uint8_t port_value;
	port_value= (uint8_t) (GPIOx->PIN);
	return port_value;
}
 17c:	fc 01       	movw	r30, r24
 17e:	db 01       	movw	r26, r22
 180:	11 96       	adiw	r26, 0x01	; 1
 182:	8c 91       	ld	r24, X
 184:	11 97       	sbiw	r26, 0x01	; 1
 186:	81 30       	cpi	r24, 0x01	; 1
 188:	59 f4       	brne	.+22     	; 0x1a0 <MCAL_GPIO_Init+0x24>
 18a:	8c 91       	ld	r24, X
 18c:	80 95       	com	r24
 18e:	91 81       	ldd	r25, Z+1	; 0x01
 190:	89 23       	and	r24, r25
 192:	81 83       	std	Z+1, r24	; 0x01
 194:	8c 91       	ld	r24, X
 196:	80 95       	com	r24
 198:	92 81       	ldd	r25, Z+2	; 0x02
 19a:	89 23       	and	r24, r25
 19c:	82 83       	std	Z+2, r24	; 0x02
 19e:	08 95       	ret
 1a0:	82 30       	cpi	r24, 0x02	; 2
 1a2:	51 f4       	brne	.+20     	; 0x1b8 <MCAL_GPIO_Init+0x3c>
 1a4:	8c 91       	ld	r24, X
 1a6:	80 95       	com	r24
 1a8:	91 81       	ldd	r25, Z+1	; 0x01
 1aa:	89 23       	and	r24, r25
 1ac:	81 83       	std	Z+1, r24	; 0x01
 1ae:	8c 91       	ld	r24, X
 1b0:	92 81       	ldd	r25, Z+2	; 0x02
 1b2:	89 2b       	or	r24, r25
 1b4:	82 83       	std	Z+2, r24	; 0x02
 1b6:	08 95       	ret
 1b8:	8c 91       	ld	r24, X
 1ba:	91 81       	ldd	r25, Z+1	; 0x01
 1bc:	89 2b       	or	r24, r25
 1be:	81 83       	std	Z+1, r24	; 0x01
 1c0:	8c 91       	ld	r24, X
 1c2:	80 95       	com	r24
 1c4:	92 81       	ldd	r25, Z+2	; 0x02
 1c6:	89 23       	and	r24, r25
 1c8:	82 83       	std	Z+2, r24	; 0x02
 1ca:	08 95       	ret

000001cc <MCAL_GPIO_WritePin>:
* @retval 			-none
* Note				-none
*/
void MCAL_GPIO_WritePin(GPIO_TypeDef *GPIOx ,uint8_t pinNumber ,uint8_t value)
{
	if ( value == GPIO_PIN_SET )
 1cc:	41 30       	cpi	r20, 0x01	; 1
 1ce:	29 f4       	brne	.+10     	; 0x1da <MCAL_GPIO_WritePin+0xe>
	{
		GPIOx->PORT |= pinNumber ;
 1d0:	fc 01       	movw	r30, r24
 1d2:	22 81       	ldd	r18, Z+2	; 0x02
 1d4:	62 2b       	or	r22, r18
 1d6:	62 83       	std	Z+2, r22	; 0x02
 1d8:	08 95       	ret
	}
	else if(  value == GPIO_PIN_RESET)
 1da:	41 11       	cpse	r20, r1
 1dc:	05 c0       	rjmp	.+10     	; 0x1e8 <MCAL_GPIO_WritePin+0x1c>
	{
		GPIOx->PORT &= ~( pinNumber ) ;
 1de:	60 95       	com	r22
 1e0:	fc 01       	movw	r30, r24
 1e2:	22 81       	ldd	r18, Z+2	; 0x02
 1e4:	62 23       	and	r22, r18
 1e6:	62 83       	std	Z+2, r22	; 0x02
 1e8:	08 95       	ret

000001ea <__vector_19>:
 */


void __vector_19 (void) __attribute__((signal));
void __vector_19 (void)
{
 1ea:	1f 92       	push	r1
 1ec:	0f 92       	push	r0
 1ee:	0f b6       	in	r0, 0x3f	; 63
 1f0:	0f 92       	push	r0
 1f2:	11 24       	eor	r1, r1
 1f4:	2f 93       	push	r18
 1f6:	3f 93       	push	r19
 1f8:	4f 93       	push	r20
 1fa:	5f 93       	push	r21
 1fc:	6f 93       	push	r22
 1fe:	7f 93       	push	r23
 200:	8f 93       	push	r24
 202:	9f 93       	push	r25
 204:	af 93       	push	r26
 206:	bf 93       	push	r27
 208:	ef 93       	push	r30
 20a:	ff 93       	push	r31
	g_I2C_Config->P_IRQ_CALL() ;
 20c:	e0 91 72 00 	lds	r30, 0x0072	; 0x800072 <__data_end>
 210:	f0 91 73 00 	lds	r31, 0x0073	; 0x800073 <__data_end+0x1>
 214:	04 80       	ldd	r0, Z+4	; 0x04
 216:	f5 81       	ldd	r31, Z+5	; 0x05
 218:	e0 2d       	mov	r30, r0
 21a:	09 95       	icall
}
 21c:	ff 91       	pop	r31
 21e:	ef 91       	pop	r30
 220:	bf 91       	pop	r27
 222:	af 91       	pop	r26
 224:	9f 91       	pop	r25
 226:	8f 91       	pop	r24
 228:	7f 91       	pop	r23
 22a:	6f 91       	pop	r22
 22c:	5f 91       	pop	r21
 22e:	4f 91       	pop	r20
 230:	3f 91       	pop	r19
 232:	2f 91       	pop	r18
 234:	0f 90       	pop	r0
 236:	0f be       	out	0x3f, r0	; 63
 238:	0f 90       	pop	r0
 23a:	1f 90       	pop	r1
 23c:	18 95       	reti

0000023e <__vector_9>:
 * ===============================================================
 */

void __vector_9 (void) __attribute__((signal));
void __vector_9 (void)
{
 23e:	1f 92       	push	r1
 240:	0f 92       	push	r0
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	0f 92       	push	r0
 246:	11 24       	eor	r1, r1
 248:	2f 93       	push	r18
 24a:	3f 93       	push	r19
 24c:	4f 93       	push	r20
 24e:	5f 93       	push	r21
 250:	6f 93       	push	r22
 252:	7f 93       	push	r23
 254:	8f 93       	push	r24
 256:	9f 93       	push	r25
 258:	af 93       	push	r26
 25a:	bf 93       	push	r27
 25c:	ef 93       	push	r30
 25e:	ff 93       	push	r31
	g_PWM_Config->P_TOIE1_CALL();
 260:	e0 91 74 00 	lds	r30, 0x0074	; 0x800074 <g_PWM_Config>
 264:	f0 91 75 00 	lds	r31, 0x0075	; 0x800075 <g_PWM_Config+0x1>
 268:	04 84       	ldd	r0, Z+12	; 0x0c
 26a:	f5 85       	ldd	r31, Z+13	; 0x0d
 26c:	e0 2d       	mov	r30, r0
 26e:	09 95       	icall
}
 270:	ff 91       	pop	r31
 272:	ef 91       	pop	r30
 274:	bf 91       	pop	r27
 276:	af 91       	pop	r26
 278:	9f 91       	pop	r25
 27a:	8f 91       	pop	r24
 27c:	7f 91       	pop	r23
 27e:	6f 91       	pop	r22
 280:	5f 91       	pop	r21
 282:	4f 91       	pop	r20
 284:	3f 91       	pop	r19
 286:	2f 91       	pop	r18
 288:	0f 90       	pop	r0
 28a:	0f be       	out	0x3f, r0	; 63
 28c:	0f 90       	pop	r0
 28e:	1f 90       	pop	r1
 290:	18 95       	reti

00000292 <__vector_7>:

void __vector_7 (void) __attribute__((signal));
void __vector_7 (void)
{
 292:	1f 92       	push	r1
 294:	0f 92       	push	r0
 296:	0f b6       	in	r0, 0x3f	; 63
 298:	0f 92       	push	r0
 29a:	11 24       	eor	r1, r1
 29c:	2f 93       	push	r18
 29e:	3f 93       	push	r19
 2a0:	4f 93       	push	r20
 2a2:	5f 93       	push	r21
 2a4:	6f 93       	push	r22
 2a6:	7f 93       	push	r23
 2a8:	8f 93       	push	r24
 2aa:	9f 93       	push	r25
 2ac:	af 93       	push	r26
 2ae:	bf 93       	push	r27
 2b0:	ef 93       	push	r30
 2b2:	ff 93       	push	r31
	g_PWM_Config->P_OCIE1A_CALL();
 2b4:	e0 91 74 00 	lds	r30, 0x0074	; 0x800074 <g_PWM_Config>
 2b8:	f0 91 75 00 	lds	r31, 0x0075	; 0x800075 <g_PWM_Config+0x1>
 2bc:	06 84       	ldd	r0, Z+14	; 0x0e
 2be:	f7 85       	ldd	r31, Z+15	; 0x0f
 2c0:	e0 2d       	mov	r30, r0
 2c2:	09 95       	icall
}
 2c4:	ff 91       	pop	r31
 2c6:	ef 91       	pop	r30
 2c8:	bf 91       	pop	r27
 2ca:	af 91       	pop	r26
 2cc:	9f 91       	pop	r25
 2ce:	8f 91       	pop	r24
 2d0:	7f 91       	pop	r23
 2d2:	6f 91       	pop	r22
 2d4:	5f 91       	pop	r21
 2d6:	4f 91       	pop	r20
 2d8:	3f 91       	pop	r19
 2da:	2f 91       	pop	r18
 2dc:	0f 90       	pop	r0
 2de:	0f be       	out	0x3f, r0	; 63
 2e0:	0f 90       	pop	r0
 2e2:	1f 90       	pop	r1
 2e4:	18 95       	reti

000002e6 <__vector_8>:

void __vector_8 (void) __attribute__((signal));
void __vector_8 (void)
{
 2e6:	1f 92       	push	r1
 2e8:	0f 92       	push	r0
 2ea:	0f b6       	in	r0, 0x3f	; 63
 2ec:	0f 92       	push	r0
 2ee:	11 24       	eor	r1, r1
 2f0:	2f 93       	push	r18
 2f2:	3f 93       	push	r19
 2f4:	4f 93       	push	r20
 2f6:	5f 93       	push	r21
 2f8:	6f 93       	push	r22
 2fa:	7f 93       	push	r23
 2fc:	8f 93       	push	r24
 2fe:	9f 93       	push	r25
 300:	af 93       	push	r26
 302:	bf 93       	push	r27
 304:	ef 93       	push	r30
 306:	ff 93       	push	r31
	g_PWM_Config->P_OCIE1B_CALL();
 308:	e0 91 74 00 	lds	r30, 0x0074	; 0x800074 <g_PWM_Config>
 30c:	f0 91 75 00 	lds	r31, 0x0075	; 0x800075 <g_PWM_Config+0x1>
 310:	00 88       	ldd	r0, Z+16	; 0x10
 312:	f1 89       	ldd	r31, Z+17	; 0x11
 314:	e0 2d       	mov	r30, r0
 316:	09 95       	icall
}
 318:	ff 91       	pop	r31
 31a:	ef 91       	pop	r30
 31c:	bf 91       	pop	r27
 31e:	af 91       	pop	r26
 320:	9f 91       	pop	r25
 322:	8f 91       	pop	r24
 324:	7f 91       	pop	r23
 326:	6f 91       	pop	r22
 328:	5f 91       	pop	r21
 32a:	4f 91       	pop	r20
 32c:	3f 91       	pop	r19
 32e:	2f 91       	pop	r18
 330:	0f 90       	pop	r0
 332:	0f be       	out	0x3f, r0	; 63
 334:	0f 90       	pop	r0
 336:	1f 90       	pop	r1
 338:	18 95       	reti

0000033a <__vector_12>:
 */


void __vector_12 (void) __attribute__((signal));
void __vector_12 (void)
{
 33a:	1f 92       	push	r1
 33c:	0f 92       	push	r0
 33e:	0f b6       	in	r0, 0x3f	; 63
 340:	0f 92       	push	r0
 342:	11 24       	eor	r1, r1
 344:	2f 93       	push	r18
 346:	3f 93       	push	r19
 348:	4f 93       	push	r20
 34a:	5f 93       	push	r21
 34c:	6f 93       	push	r22
 34e:	7f 93       	push	r23
 350:	8f 93       	push	r24
 352:	9f 93       	push	r25
 354:	af 93       	push	r26
 356:	bf 93       	push	r27
 358:	ef 93       	push	r30
 35a:	ff 93       	push	r31
	g_SPI_Config->P_IRQ_CALL() ;
 35c:	e0 91 76 00 	lds	r30, 0x0076	; 0x800076 <g_SPI_Config>
 360:	f0 91 77 00 	lds	r31, 0x0077	; 0x800077 <g_SPI_Config+0x1>
 364:	07 80       	ldd	r0, Z+7	; 0x07
 366:	f0 85       	ldd	r31, Z+8	; 0x08
 368:	e0 2d       	mov	r30, r0
 36a:	09 95       	icall
}
 36c:	ff 91       	pop	r31
 36e:	ef 91       	pop	r30
 370:	bf 91       	pop	r27
 372:	af 91       	pop	r26
 374:	9f 91       	pop	r25
 376:	8f 91       	pop	r24
 378:	7f 91       	pop	r23
 37a:	6f 91       	pop	r22
 37c:	5f 91       	pop	r21
 37e:	4f 91       	pop	r20
 380:	3f 91       	pop	r19
 382:	2f 91       	pop	r18
 384:	0f 90       	pop	r0
 386:	0f be       	out	0x3f, r0	; 63
 388:	0f 90       	pop	r0
 38a:	1f 90       	pop	r1
 38c:	18 95       	reti

0000038e <__vector_10>:
 * ===============================================================
 */

void __vector_10 (void) __attribute__((signal));
void __vector_10 (void)
{
 38e:	1f 92       	push	r1
 390:	0f 92       	push	r0
 392:	0f b6       	in	r0, 0x3f	; 63
 394:	0f 92       	push	r0
 396:	11 24       	eor	r1, r1
 398:	2f 93       	push	r18
 39a:	3f 93       	push	r19
 39c:	4f 93       	push	r20
 39e:	5f 93       	push	r21
 3a0:	6f 93       	push	r22
 3a2:	7f 93       	push	r23
 3a4:	8f 93       	push	r24
 3a6:	9f 93       	push	r25
 3a8:	af 93       	push	r26
 3aa:	bf 93       	push	r27
 3ac:	ef 93       	push	r30
 3ae:	ff 93       	push	r31
	g_TIM0_Config->P_OCIE0_CALL();
 3b0:	e0 91 78 00 	lds	r30, 0x0078	; 0x800078 <g_TIM0_Config>
 3b4:	f0 91 79 00 	lds	r31, 0x0079	; 0x800079 <g_TIM0_Config+0x1>
 3b8:	00 84       	ldd	r0, Z+8	; 0x08
 3ba:	f1 85       	ldd	r31, Z+9	; 0x09
 3bc:	e0 2d       	mov	r30, r0
 3be:	09 95       	icall
}
 3c0:	ff 91       	pop	r31
 3c2:	ef 91       	pop	r30
 3c4:	bf 91       	pop	r27
 3c6:	af 91       	pop	r26
 3c8:	9f 91       	pop	r25
 3ca:	8f 91       	pop	r24
 3cc:	7f 91       	pop	r23
 3ce:	6f 91       	pop	r22
 3d0:	5f 91       	pop	r21
 3d2:	4f 91       	pop	r20
 3d4:	3f 91       	pop	r19
 3d6:	2f 91       	pop	r18
 3d8:	0f 90       	pop	r0
 3da:	0f be       	out	0x3f, r0	; 63
 3dc:	0f 90       	pop	r0
 3de:	1f 90       	pop	r1
 3e0:	18 95       	reti

000003e2 <__vector_11>:

void __vector_11 (void) __attribute__((signal));
void __vector_11 (void)
{
 3e2:	1f 92       	push	r1
 3e4:	0f 92       	push	r0
 3e6:	0f b6       	in	r0, 0x3f	; 63
 3e8:	0f 92       	push	r0
 3ea:	11 24       	eor	r1, r1
 3ec:	2f 93       	push	r18
 3ee:	3f 93       	push	r19
 3f0:	4f 93       	push	r20
 3f2:	5f 93       	push	r21
 3f4:	6f 93       	push	r22
 3f6:	7f 93       	push	r23
 3f8:	8f 93       	push	r24
 3fa:	9f 93       	push	r25
 3fc:	af 93       	push	r26
 3fe:	bf 93       	push	r27
 400:	ef 93       	push	r30
 402:	ff 93       	push	r31
	g_TIM0_Config->P_TOIE0_CALL();
 404:	e0 91 78 00 	lds	r30, 0x0078	; 0x800078 <g_TIM0_Config>
 408:	f0 91 79 00 	lds	r31, 0x0079	; 0x800079 <g_TIM0_Config+0x1>
 40c:	06 80       	ldd	r0, Z+6	; 0x06
 40e:	f7 81       	ldd	r31, Z+7	; 0x07
 410:	e0 2d       	mov	r30, r0
 412:	09 95       	icall
}
 414:	ff 91       	pop	r31
 416:	ef 91       	pop	r30
 418:	bf 91       	pop	r27
 41a:	af 91       	pop	r26
 41c:	9f 91       	pop	r25
 41e:	8f 91       	pop	r24
 420:	7f 91       	pop	r23
 422:	6f 91       	pop	r22
 424:	5f 91       	pop	r21
 426:	4f 91       	pop	r20
 428:	3f 91       	pop	r19
 42a:	2f 91       	pop	r18
 42c:	0f 90       	pop	r0
 42e:	0f be       	out	0x3f, r0	; 63
 430:	0f 90       	pop	r0
 432:	1f 90       	pop	r1
 434:	18 95       	reti

00000436 <MCAL_USART_Init>:
	EXTI_GLOBAL_Disable()  ;
	USART->UBRRL = 0 ;
	USART->UCSRB = 0 ;
	UCSRC = 0b10000110;
	UBRRH = 0;
	USART->UCSRA &=~(1<<1)	;
 436:	0f 93       	push	r16
 438:	1f 93       	push	r17
 43a:	cf 93       	push	r28
 43c:	df 93       	push	r29
 43e:	00 d0       	rcall	.+0      	; 0x440 <MCAL_USART_Init+0xa>
 440:	cd b7       	in	r28, 0x3d	; 61
 442:	de b7       	in	r29, 0x3e	; 62
 444:	8c 01       	movw	r16, r24
 446:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <g_USART_Config+0x1>
 44a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <g_USART_Config>
 44e:	fc 01       	movw	r30, r24
 450:	82 81       	ldd	r24, Z+2	; 0x02
 452:	9e ef       	ldi	r25, 0xFE	; 254
 454:	98 0f       	add	r25, r24
 456:	92 30       	cpi	r25, 0x02	; 2
 458:	b8 f5       	brcc	.+110    	; 0x4c8 <MCAL_USART_Init+0x92>
 45a:	80 b5       	in	r24, 0x20	; 32
 45c:	80 68       	ori	r24, 0x80	; 128
 45e:	80 bd       	out	0x20, r24	; 32
 460:	80 b5       	in	r24, 0x20	; 32
 462:	80 64       	ori	r24, 0x40	; 64
 464:	80 bd       	out	0x20, r24	; 32
 466:	81 81       	ldd	r24, Z+1	; 0x01
 468:	81 30       	cpi	r24, 0x01	; 1
 46a:	41 f4       	brne	.+16     	; 0x47c <MCAL_USART_Init+0x46>
 46c:	80 b5       	in	r24, 0x20	; 32
 46e:	80 68       	ori	r24, 0x80	; 128
 470:	80 bd       	out	0x20, r24	; 32
 472:	90 b5       	in	r25, 0x20	; 32
 474:	81 81       	ldd	r24, Z+1	; 0x01
 476:	89 2b       	or	r24, r25
 478:	80 bd       	out	0x20, r24	; 32
 47a:	0a c0       	rjmp	.+20     	; 0x490 <MCAL_USART_Init+0x5a>
 47c:	8e 3f       	cpi	r24, 0xFE	; 254
 47e:	41 f4       	brne	.+16     	; 0x490 <MCAL_USART_Init+0x5a>
 480:	80 b5       	in	r24, 0x20	; 32
 482:	80 68       	ori	r24, 0x80	; 128
 484:	80 bd       	out	0x20, r24	; 32
 486:	90 b5       	in	r25, 0x20	; 32
 488:	f8 01       	movw	r30, r16
 48a:	81 81       	ldd	r24, Z+1	; 0x01
 48c:	89 23       	and	r24, r25
 48e:	80 bd       	out	0x20, r24	; 32
 490:	f8 01       	movw	r30, r16
 492:	65 81       	ldd	r22, Z+5	; 0x05
 494:	76 81       	ldd	r23, Z+6	; 0x06
 496:	80 e0       	ldi	r24, 0x00	; 0
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	0e 94 f7 05 	call	0xbee	; 0xbee <__floatunsisf>
 49e:	9b 01       	movw	r18, r22
 4a0:	ac 01       	movw	r20, r24
 4a2:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__addsf3>
 4a6:	9b 01       	movw	r18, r22
 4a8:	ac 01       	movw	r20, r24
 4aa:	60 e0       	ldi	r22, 0x00	; 0
 4ac:	74 e2       	ldi	r23, 0x24	; 36
 4ae:	84 ef       	ldi	r24, 0xF4	; 244
 4b0:	9a e4       	ldi	r25, 0x4A	; 74
 4b2:	0e 94 56 05 	call	0xaac	; 0xaac <__divsf3>
 4b6:	20 e0       	ldi	r18, 0x00	; 0
 4b8:	30 e0       	ldi	r19, 0x00	; 0
 4ba:	40 e0       	ldi	r20, 0x00	; 0
 4bc:	5f e3       	ldi	r21, 0x3F	; 63
 4be:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__subsf3>
 4c2:	0e 94 c8 05 	call	0xb90	; 0xb90 <__fixunssfsi>
 4c6:	4f c0       	rjmp	.+158    	; 0x566 <MCAL_USART_Init+0x130>
 4c8:	81 11       	cpse	r24, r1
 4ca:	27 c0       	rjmp	.+78     	; 0x51a <MCAL_USART_Init+0xe4>
 4cc:	80 b5       	in	r24, 0x20	; 32
 4ce:	80 68       	ori	r24, 0x80	; 128
 4d0:	80 bd       	out	0x20, r24	; 32
 4d2:	80 b5       	in	r24, 0x20	; 32
 4d4:	8f 7b       	andi	r24, 0xBF	; 191
 4d6:	80 bd       	out	0x20, r24	; 32
 4d8:	8b b1       	in	r24, 0x0b	; 11
 4da:	82 60       	ori	r24, 0x02	; 2
 4dc:	8b b9       	out	0x0b, r24	; 11
 4de:	f8 01       	movw	r30, r16
 4e0:	65 81       	ldd	r22, Z+5	; 0x05
 4e2:	76 81       	ldd	r23, Z+6	; 0x06
 4e4:	80 e0       	ldi	r24, 0x00	; 0
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	0e 94 f7 05 	call	0xbee	; 0xbee <__floatunsisf>
 4ec:	20 e0       	ldi	r18, 0x00	; 0
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	40 e0       	ldi	r20, 0x00	; 0
 4f2:	51 e4       	ldi	r21, 0x41	; 65
 4f4:	0e 94 85 06 	call	0xd0a	; 0xd0a <__mulsf3>
 4f8:	9b 01       	movw	r18, r22
 4fa:	ac 01       	movw	r20, r24
 4fc:	60 e0       	ldi	r22, 0x00	; 0
 4fe:	74 e2       	ldi	r23, 0x24	; 36
 500:	84 ef       	ldi	r24, 0xF4	; 244
 502:	9a e4       	ldi	r25, 0x4A	; 74
 504:	0e 94 56 05 	call	0xaac	; 0xaac <__divsf3>
 508:	20 e0       	ldi	r18, 0x00	; 0
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	40 e0       	ldi	r20, 0x00	; 0
 50e:	5f e3       	ldi	r21, 0x3F	; 63
 510:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__subsf3>
 514:	0e 94 c8 05 	call	0xb90	; 0xb90 <__fixunssfsi>
 518:	26 c0       	rjmp	.+76     	; 0x566 <MCAL_USART_Init+0x130>
 51a:	80 b5       	in	r24, 0x20	; 32
 51c:	80 68       	ori	r24, 0x80	; 128
 51e:	80 bd       	out	0x20, r24	; 32
 520:	80 b5       	in	r24, 0x20	; 32
 522:	8f 7b       	andi	r24, 0xBF	; 191
 524:	80 bd       	out	0x20, r24	; 32
 526:	8b b1       	in	r24, 0x0b	; 11
 528:	8d 7f       	andi	r24, 0xFD	; 253
 52a:	8b b9       	out	0x0b, r24	; 11
 52c:	f8 01       	movw	r30, r16
 52e:	65 81       	ldd	r22, Z+5	; 0x05
 530:	76 81       	ldd	r23, Z+6	; 0x06
 532:	80 e0       	ldi	r24, 0x00	; 0
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	0e 94 f7 05 	call	0xbee	; 0xbee <__floatunsisf>
 53a:	20 e0       	ldi	r18, 0x00	; 0
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	40 e8       	ldi	r20, 0x80	; 128
 540:	51 e4       	ldi	r21, 0x41	; 65
 542:	0e 94 85 06 	call	0xd0a	; 0xd0a <__mulsf3>
 546:	9b 01       	movw	r18, r22
 548:	ac 01       	movw	r20, r24
 54a:	60 e0       	ldi	r22, 0x00	; 0
 54c:	74 e2       	ldi	r23, 0x24	; 36
 54e:	84 ef       	ldi	r24, 0xF4	; 244
 550:	9a e4       	ldi	r25, 0x4A	; 74
 552:	0e 94 56 05 	call	0xaac	; 0xaac <__divsf3>
 556:	20 e0       	ldi	r18, 0x00	; 0
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	40 e0       	ldi	r20, 0x00	; 0
 55c:	5f e3       	ldi	r21, 0x3F	; 63
 55e:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__subsf3>
 562:	0e 94 c8 05 	call	0xb90	; 0xb90 <__fixunssfsi>
 566:	f8 01       	movw	r30, r16
 568:	83 81       	ldd	r24, Z+3	; 0x03
 56a:	83 30       	cpi	r24, 0x03	; 3
 56c:	11 f1       	breq	.+68     	; 0x5b2 <MCAL_USART_Init+0x17c>
 56e:	28 f4       	brcc	.+10     	; 0x57a <MCAL_USART_Init+0x144>
 570:	81 30       	cpi	r24, 0x01	; 1
 572:	41 f0       	breq	.+16     	; 0x584 <MCAL_USART_Init+0x14e>
 574:	82 30       	cpi	r24, 0x02	; 2
 576:	81 f0       	breq	.+32     	; 0x598 <MCAL_USART_Init+0x162>
 578:	3c c0       	rjmp	.+120    	; 0x5f2 <MCAL_USART_Init+0x1bc>
 57a:	84 30       	cpi	r24, 0x04	; 4
 57c:	39 f1       	breq	.+78     	; 0x5cc <MCAL_USART_Init+0x196>
 57e:	85 30       	cpi	r24, 0x05	; 5
 580:	79 f1       	breq	.+94     	; 0x5e0 <MCAL_USART_Init+0x1aa>
 582:	37 c0       	rjmp	.+110    	; 0x5f2 <MCAL_USART_Init+0x1bc>
 584:	8a b1       	in	r24, 0x0a	; 10
 586:	8b 7f       	andi	r24, 0xFB	; 251
 588:	8a b9       	out	0x0a, r24	; 10
 58a:	80 b5       	in	r24, 0x20	; 32
 58c:	80 68       	ori	r24, 0x80	; 128
 58e:	80 bd       	out	0x20, r24	; 32
 590:	80 b5       	in	r24, 0x20	; 32
 592:	89 7f       	andi	r24, 0xF9	; 249
 594:	80 bd       	out	0x20, r24	; 32
 596:	2d c0       	rjmp	.+90     	; 0x5f2 <MCAL_USART_Init+0x1bc>
 598:	8a b1       	in	r24, 0x0a	; 10
 59a:	8b 7f       	andi	r24, 0xFB	; 251
 59c:	8a b9       	out	0x0a, r24	; 10
 59e:	80 b5       	in	r24, 0x20	; 32
 5a0:	80 68       	ori	r24, 0x80	; 128
 5a2:	80 bd       	out	0x20, r24	; 32
 5a4:	80 b5       	in	r24, 0x20	; 32
 5a6:	89 7f       	andi	r24, 0xF9	; 249
 5a8:	80 bd       	out	0x20, r24	; 32
 5aa:	80 b5       	in	r24, 0x20	; 32
 5ac:	82 60       	ori	r24, 0x02	; 2
 5ae:	80 bd       	out	0x20, r24	; 32
 5b0:	20 c0       	rjmp	.+64     	; 0x5f2 <MCAL_USART_Init+0x1bc>
 5b2:	8a b1       	in	r24, 0x0a	; 10
 5b4:	8b 7f       	andi	r24, 0xFB	; 251
 5b6:	8a b9       	out	0x0a, r24	; 10
 5b8:	80 b5       	in	r24, 0x20	; 32
 5ba:	80 68       	ori	r24, 0x80	; 128
 5bc:	80 bd       	out	0x20, r24	; 32
 5be:	80 b5       	in	r24, 0x20	; 32
 5c0:	89 7f       	andi	r24, 0xF9	; 249
 5c2:	80 bd       	out	0x20, r24	; 32
 5c4:	80 b5       	in	r24, 0x20	; 32
 5c6:	84 60       	ori	r24, 0x04	; 4
 5c8:	80 bd       	out	0x20, r24	; 32
 5ca:	13 c0       	rjmp	.+38     	; 0x5f2 <MCAL_USART_Init+0x1bc>
 5cc:	8a b1       	in	r24, 0x0a	; 10
 5ce:	8b 7f       	andi	r24, 0xFB	; 251
 5d0:	8a b9       	out	0x0a, r24	; 10
 5d2:	80 b5       	in	r24, 0x20	; 32
 5d4:	80 68       	ori	r24, 0x80	; 128
 5d6:	80 bd       	out	0x20, r24	; 32
 5d8:	80 b5       	in	r24, 0x20	; 32
 5da:	86 60       	ori	r24, 0x06	; 6
 5dc:	80 bd       	out	0x20, r24	; 32
 5de:	09 c0       	rjmp	.+18     	; 0x5f2 <MCAL_USART_Init+0x1bc>
 5e0:	8a b1       	in	r24, 0x0a	; 10
 5e2:	84 60       	ori	r24, 0x04	; 4
 5e4:	8a b9       	out	0x0a, r24	; 10
 5e6:	80 b5       	in	r24, 0x20	; 32
 5e8:	80 68       	ori	r24, 0x80	; 128
 5ea:	80 bd       	out	0x20, r24	; 32
 5ec:	80 b5       	in	r24, 0x20	; 32
 5ee:	86 60       	ori	r24, 0x06	; 6
 5f0:	80 bd       	out	0x20, r24	; 32
 5f2:	f8 01       	movw	r30, r16
 5f4:	84 81       	ldd	r24, Z+4	; 0x04
 5f6:	88 30       	cpi	r24, 0x08	; 8
 5f8:	51 f0       	breq	.+20     	; 0x60e <MCAL_USART_Init+0x1d8>
 5fa:	87 3f       	cpi	r24, 0xF7	; 247
 5fc:	81 f4       	brne	.+32     	; 0x61e <MCAL_USART_Init+0x1e8>
 5fe:	80 b5       	in	r24, 0x20	; 32
 600:	80 68       	ori	r24, 0x80	; 128
 602:	80 bd       	out	0x20, r24	; 32
 604:	90 b5       	in	r25, 0x20	; 32
 606:	84 81       	ldd	r24, Z+4	; 0x04
 608:	89 23       	and	r24, r25
 60a:	80 bd       	out	0x20, r24	; 32
 60c:	08 c0       	rjmp	.+16     	; 0x61e <MCAL_USART_Init+0x1e8>
 60e:	80 b5       	in	r24, 0x20	; 32
 610:	80 68       	ori	r24, 0x80	; 128
 612:	80 bd       	out	0x20, r24	; 32
 614:	90 b5       	in	r25, 0x20	; 32
 616:	f8 01       	movw	r30, r16
 618:	84 81       	ldd	r24, Z+4	; 0x04
 61a:	89 2b       	or	r24, r25
 61c:	80 bd       	out	0x20, r24	; 32
 61e:	f8 01       	movw	r30, r16
 620:	87 81       	ldd	r24, Z+7	; 0x07
 622:	80 33       	cpi	r24, 0x30	; 48
 624:	b9 f0       	breq	.+46     	; 0x654 <MCAL_USART_Init+0x21e>
 626:	8f 3c       	cpi	r24, 0xCF	; 207
 628:	19 f0       	breq	.+6      	; 0x630 <MCAL_USART_Init+0x1fa>
 62a:	80 32       	cpi	r24, 0x20	; 32
 62c:	d9 f4       	brne	.+54     	; 0x664 <MCAL_USART_Init+0x22e>
 62e:	09 c0       	rjmp	.+18     	; 0x642 <MCAL_USART_Init+0x20c>
 630:	80 b5       	in	r24, 0x20	; 32
 632:	80 68       	ori	r24, 0x80	; 128
 634:	80 bd       	out	0x20, r24	; 32
 636:	90 b5       	in	r25, 0x20	; 32
 638:	f8 01       	movw	r30, r16
 63a:	87 81       	ldd	r24, Z+7	; 0x07
 63c:	89 23       	and	r24, r25
 63e:	80 bd       	out	0x20, r24	; 32
 640:	11 c0       	rjmp	.+34     	; 0x664 <MCAL_USART_Init+0x22e>
 642:	80 b5       	in	r24, 0x20	; 32
 644:	80 68       	ori	r24, 0x80	; 128
 646:	80 bd       	out	0x20, r24	; 32
 648:	90 b5       	in	r25, 0x20	; 32
 64a:	f8 01       	movw	r30, r16
 64c:	87 81       	ldd	r24, Z+7	; 0x07
 64e:	89 2b       	or	r24, r25
 650:	80 bd       	out	0x20, r24	; 32
 652:	08 c0       	rjmp	.+16     	; 0x664 <MCAL_USART_Init+0x22e>
 654:	80 b5       	in	r24, 0x20	; 32
 656:	80 68       	ori	r24, 0x80	; 128
 658:	80 bd       	out	0x20, r24	; 32
 65a:	90 b5       	in	r25, 0x20	; 32
 65c:	f8 01       	movw	r30, r16
 65e:	87 81       	ldd	r24, Z+7	; 0x07
 660:	89 2b       	or	r24, r25
 662:	80 bd       	out	0x20, r24	; 32
 664:	80 b5       	in	r24, 0x20	; 32
 666:	8f 77       	andi	r24, 0x7F	; 127
 668:	80 bd       	out	0x20, r24	; 32
 66a:	70 bd       	out	0x20, r23	; 32
 66c:	69 b9       	out	0x09, r22	; 9
 66e:	f8 01       	movw	r30, r16
 670:	80 85       	ldd	r24, Z+8	; 0x08
 672:	81 30       	cpi	r24, 0x01	; 1
 674:	69 f0       	breq	.+26     	; 0x690 <MCAL_USART_Init+0x25a>
 676:	28 f0       	brcs	.+10     	; 0x682 <MCAL_USART_Init+0x24c>
 678:	82 30       	cpi	r24, 0x02	; 2
 67a:	c1 f0       	breq	.+48     	; 0x6ac <MCAL_USART_Init+0x276>
 67c:	83 30       	cpi	r24, 0x03	; 3
 67e:	21 f1       	breq	.+72     	; 0x6c8 <MCAL_USART_Init+0x292>
 680:	30 c0       	rjmp	.+96     	; 0x6e2 <MCAL_USART_Init+0x2ac>
 682:	8a b1       	in	r24, 0x0a	; 10
 684:	8f 71       	andi	r24, 0x1F	; 31
 686:	8a b9       	out	0x0a, r24	; 10
 688:	8f b7       	in	r24, 0x3f	; 63
 68a:	8f 77       	andi	r24, 0x7F	; 127
 68c:	8f bf       	out	0x3f, r24	; 63
 68e:	29 c0       	rjmp	.+82     	; 0x6e2 <MCAL_USART_Init+0x2ac>
 690:	f8 01       	movw	r30, r16
 692:	81 85       	ldd	r24, Z+9	; 0x09
 694:	92 85       	ldd	r25, Z+10	; 0x0a
 696:	90 93 8e 00 	sts	0x008E, r25	; 0x80008e <GPU_IRQ_CALL+0x1>
 69a:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <GPU_IRQ_CALL>
 69e:	8a b1       	in	r24, 0x0a	; 10
 6a0:	80 64       	ori	r24, 0x40	; 64
 6a2:	8a b9       	out	0x0a, r24	; 10
 6a4:	8f b7       	in	r24, 0x3f	; 63
 6a6:	80 68       	ori	r24, 0x80	; 128
 6a8:	8f bf       	out	0x3f, r24	; 63
 6aa:	1b c0       	rjmp	.+54     	; 0x6e2 <MCAL_USART_Init+0x2ac>
 6ac:	f8 01       	movw	r30, r16
 6ae:	81 85       	ldd	r24, Z+9	; 0x09
 6b0:	92 85       	ldd	r25, Z+10	; 0x0a
 6b2:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <GPU_IRQ_CALL+0x3>
 6b6:	80 93 8f 00 	sts	0x008F, r24	; 0x80008f <GPU_IRQ_CALL+0x2>
 6ba:	8a b1       	in	r24, 0x0a	; 10
 6bc:	80 62       	ori	r24, 0x20	; 32
 6be:	8a b9       	out	0x0a, r24	; 10
 6c0:	8f b7       	in	r24, 0x3f	; 63
 6c2:	80 68       	ori	r24, 0x80	; 128
 6c4:	8f bf       	out	0x3f, r24	; 63
 6c6:	0d c0       	rjmp	.+26     	; 0x6e2 <MCAL_USART_Init+0x2ac>
 6c8:	f8 01       	movw	r30, r16
 6ca:	81 85       	ldd	r24, Z+9	; 0x09
 6cc:	92 85       	ldd	r25, Z+10	; 0x0a
 6ce:	90 93 92 00 	sts	0x0092, r25	; 0x800092 <GPU_IRQ_CALL+0x5>
 6d2:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <GPU_IRQ_CALL+0x4>
 6d6:	8a b1       	in	r24, 0x0a	; 10
 6d8:	80 68       	ori	r24, 0x80	; 128
 6da:	8a b9       	out	0x0a, r24	; 10
 6dc:	8f b7       	in	r24, 0x3f	; 63
 6de:	80 68       	ori	r24, 0x80	; 128
 6e0:	8f bf       	out	0x3f, r24	; 63
 6e2:	f8 01       	movw	r30, r16
 6e4:	80 81       	ld	r24, Z
 6e6:	9a b1       	in	r25, 0x0a	; 10
 6e8:	89 2b       	or	r24, r25
 6ea:	8a b9       	out	0x0a, r24	; 10
 6ec:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <g_USART_Config>
 6f0:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <g_USART_Config+0x1>
 6f4:	82 81       	ldd	r24, Z+2	; 0x02
 6f6:	82 30       	cpi	r24, 0x02	; 2
 6f8:	61 f4       	brne	.+24     	; 0x712 <MCAL_USART_Init+0x2dc>
 6fa:	81 e0       	ldi	r24, 0x01	; 1
 6fc:	89 83       	std	Y+1, r24	; 0x01
 6fe:	83 e0       	ldi	r24, 0x03	; 3
 700:	8a 83       	std	Y+2, r24	; 0x02
 702:	be 01       	movw	r22, r28
 704:	6f 5f       	subi	r22, 0xFF	; 255
 706:	7f 4f       	sbci	r23, 0xFF	; 255
 708:	86 e3       	ldi	r24, 0x36	; 54
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
 710:	0d c0       	rjmp	.+26     	; 0x72c <MCAL_USART_Init+0x2f6>
 712:	83 30       	cpi	r24, 0x03	; 3
 714:	59 f4       	brne	.+22     	; 0x72c <MCAL_USART_Init+0x2f6>
 716:	81 e0       	ldi	r24, 0x01	; 1
 718:	89 83       	std	Y+1, r24	; 0x01
 71a:	82 e0       	ldi	r24, 0x02	; 2
 71c:	8a 83       	std	Y+2, r24	; 0x02
 71e:	be 01       	movw	r22, r28
 720:	6f 5f       	subi	r22, 0xFF	; 255
 722:	7f 4f       	sbci	r23, 0xFF	; 255
 724:	86 e3       	ldi	r24, 0x36	; 54
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
 72c:	0f 90       	pop	r0
 72e:	0f 90       	pop	r0
 730:	df 91       	pop	r29
 732:	cf 91       	pop	r28
 734:	1f 91       	pop	r17
 736:	0f 91       	pop	r16
 738:	08 95       	ret

0000073a <MCAL_USART_ReceiveData>:
 73a:	61 11       	cpse	r22, r1
 73c:	15 c0       	rjmp	.+42     	; 0x768 <MCAL_USART_ReceiveData+0x2e>
 73e:	5f 9b       	sbis	0x0b, 7	; 11
 740:	fe cf       	rjmp	.-4      	; 0x73e <MCAL_USART_ReceiveData+0x4>
 742:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <g_USART_Config>
 746:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <g_USART_Config+0x1>
 74a:	23 81       	ldd	r18, Z+3	; 0x03
 74c:	25 30       	cpi	r18, 0x05	; 5
 74e:	31 f4       	brne	.+12     	; 0x75c <MCAL_USART_ReceiveData+0x22>
 750:	2a b1       	in	r18, 0x0a	; 10
 752:	26 95       	lsr	r18
 754:	21 70       	andi	r18, 0x01	; 1
 756:	fc 01       	movw	r30, r24
 758:	10 82       	st	Z, r1
 75a:	21 83       	std	Z+1, r18	; 0x01
 75c:	2c b1       	in	r18, 0x0c	; 12
 75e:	30 e0       	ldi	r19, 0x00	; 0
 760:	fc 01       	movw	r30, r24
 762:	31 83       	std	Z+1, r19	; 0x01
 764:	20 83       	st	Z, r18
 766:	08 95       	ret
 768:	5f 9b       	sbis	0x0b, 7	; 11
 76a:	12 c0       	rjmp	.+36     	; 0x790 <MCAL_USART_ReceiveData+0x56>
 76c:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <g_USART_Config>
 770:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <g_USART_Config+0x1>
 774:	23 81       	ldd	r18, Z+3	; 0x03
 776:	25 30       	cpi	r18, 0x05	; 5
 778:	31 f4       	brne	.+12     	; 0x786 <MCAL_USART_ReceiveData+0x4c>
 77a:	2a b1       	in	r18, 0x0a	; 10
 77c:	26 95       	lsr	r18
 77e:	21 70       	andi	r18, 0x01	; 1
 780:	fc 01       	movw	r30, r24
 782:	10 82       	st	Z, r1
 784:	21 83       	std	Z+1, r18	; 0x01
 786:	2c b1       	in	r18, 0x0c	; 12
 788:	30 e0       	ldi	r19, 0x00	; 0
 78a:	fc 01       	movw	r30, r24
 78c:	31 83       	std	Z+1, r19	; 0x01
 78e:	20 83       	st	Z, r18
 790:	08 95       	ret

00000792 <MCAL_USART_SendData>:
 792:	61 11       	cpse	r22, r1
 794:	17 c0       	rjmp	.+46     	; 0x7c4 <MCAL_USART_SendData+0x32>
 796:	5d 9b       	sbis	0x0b, 5	; 11
 798:	fe cf       	rjmp	.-4      	; 0x796 <MCAL_USART_SendData+0x4>
 79a:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <g_USART_Config>
 79e:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <g_USART_Config+0x1>
 7a2:	23 81       	ldd	r18, Z+3	; 0x03
 7a4:	25 30       	cpi	r18, 0x05	; 5
 7a6:	51 f4       	brne	.+20     	; 0x7bc <MCAL_USART_SendData+0x2a>
 7a8:	2a b1       	in	r18, 0x0a	; 10
 7aa:	2e 7f       	andi	r18, 0xFE	; 254
 7ac:	2a b9       	out	0x0a, r18	; 10
 7ae:	fc 01       	movw	r30, r24
 7b0:	40 81       	ld	r20, Z
 7b2:	51 81       	ldd	r21, Z+1	; 0x01
 7b4:	50 ff       	sbrs	r21, 0
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <MCAL_USART_SendData+0x2a>
 7b8:	21 60       	ori	r18, 0x01	; 1
 7ba:	2a b9       	out	0x0a, r18	; 10
 7bc:	fc 01       	movw	r30, r24
 7be:	80 81       	ld	r24, Z
 7c0:	8c b9       	out	0x0c, r24	; 12
 7c2:	08 95       	ret
 7c4:	5d 9b       	sbis	0x0b, 5	; 11
 7c6:	14 c0       	rjmp	.+40     	; 0x7f0 <MCAL_USART_SendData+0x5e>
 7c8:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <g_USART_Config>
 7cc:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <g_USART_Config+0x1>
 7d0:	23 81       	ldd	r18, Z+3	; 0x03
 7d2:	25 30       	cpi	r18, 0x05	; 5
 7d4:	51 f4       	brne	.+20     	; 0x7ea <MCAL_USART_SendData+0x58>
 7d6:	2a b1       	in	r18, 0x0a	; 10
 7d8:	2e 7f       	andi	r18, 0xFE	; 254
 7da:	2a b9       	out	0x0a, r18	; 10
 7dc:	fc 01       	movw	r30, r24
 7de:	40 81       	ld	r20, Z
 7e0:	51 81       	ldd	r21, Z+1	; 0x01
 7e2:	50 ff       	sbrs	r21, 0
 7e4:	02 c0       	rjmp	.+4      	; 0x7ea <MCAL_USART_SendData+0x58>
 7e6:	21 60       	ori	r18, 0x01	; 1
 7e8:	2a b9       	out	0x0a, r18	; 10
 7ea:	fc 01       	movw	r30, r24
 7ec:	80 81       	ld	r24, Z
 7ee:	8c b9       	out	0x0c, r24	; 12
 7f0:	08 95       	ret

000007f2 <MCAL_USART_Send_String>:
 7f2:	1f 93       	push	r17
 7f4:	cf 93       	push	r28
 7f6:	df 93       	push	r29
 7f8:	ec 01       	movw	r28, r24
 7fa:	16 2f       	mov	r17, r22
 7fc:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <g_USART_Config>
 800:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <g_USART_Config+0x1>
 804:	83 81       	ldd	r24, Z+3	; 0x03
 806:	84 30       	cpi	r24, 0x04	; 4
 808:	49 f4       	brne	.+18     	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 80a:	05 c0       	rjmp	.+10     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 80c:	61 2f       	mov	r22, r17
 80e:	ce 01       	movw	r24, r28
 810:	0e 94 c9 03 	call	0x792	; 0x792 <MCAL_USART_SendData>
 814:	21 96       	adiw	r28, 0x01	; 1
 816:	88 81       	ld	r24, Y
 818:	83 32       	cpi	r24, 0x23	; 35
 81a:	c1 f7       	brne	.-16     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 81c:	df 91       	pop	r29
 81e:	cf 91       	pop	r28
 820:	1f 91       	pop	r17
 822:	08 95       	ret

00000824 <__vector_13>:
 *
 * ===============================================================
 */
void __vector_13 (void) __attribute__((signal));
void __vector_13 (void)
{
 824:	1f 92       	push	r1
 826:	0f 92       	push	r0
 828:	0f b6       	in	r0, 0x3f	; 63
 82a:	0f 92       	push	r0
 82c:	11 24       	eor	r1, r1
 82e:	2f 93       	push	r18
 830:	3f 93       	push	r19
 832:	4f 93       	push	r20
 834:	5f 93       	push	r21
 836:	6f 93       	push	r22
 838:	7f 93       	push	r23
 83a:	8f 93       	push	r24
 83c:	9f 93       	push	r25
 83e:	af 93       	push	r26
 840:	bf 93       	push	r27
 842:	ef 93       	push	r30
 844:	ff 93       	push	r31
	//Call function
	GPU_IRQ_CALL[2]();
 846:	e0 91 91 00 	lds	r30, 0x0091	; 0x800091 <GPU_IRQ_CALL+0x4>
 84a:	f0 91 92 00 	lds	r31, 0x0092	; 0x800092 <GPU_IRQ_CALL+0x5>
 84e:	09 95       	icall
}
 850:	ff 91       	pop	r31
 852:	ef 91       	pop	r30
 854:	bf 91       	pop	r27
 856:	af 91       	pop	r26
 858:	9f 91       	pop	r25
 85a:	8f 91       	pop	r24
 85c:	7f 91       	pop	r23
 85e:	6f 91       	pop	r22
 860:	5f 91       	pop	r21
 862:	4f 91       	pop	r20
 864:	3f 91       	pop	r19
 866:	2f 91       	pop	r18
 868:	0f 90       	pop	r0
 86a:	0f be       	out	0x3f, r0	; 63
 86c:	0f 90       	pop	r0
 86e:	1f 90       	pop	r1
 870:	18 95       	reti

00000872 <__vector_14>:

void __vector_14 (void) __attribute__((signal));
void __vector_14 (void)
{
 872:	1f 92       	push	r1
 874:	0f 92       	push	r0
 876:	0f b6       	in	r0, 0x3f	; 63
 878:	0f 92       	push	r0
 87a:	11 24       	eor	r1, r1
 87c:	2f 93       	push	r18
 87e:	3f 93       	push	r19
 880:	4f 93       	push	r20
 882:	5f 93       	push	r21
 884:	6f 93       	push	r22
 886:	7f 93       	push	r23
 888:	8f 93       	push	r24
 88a:	9f 93       	push	r25
 88c:	af 93       	push	r26
 88e:	bf 93       	push	r27
 890:	ef 93       	push	r30
 892:	ff 93       	push	r31
	//Call function
	GPU_IRQ_CALL[1]();
 894:	e0 91 8f 00 	lds	r30, 0x008F	; 0x80008f <GPU_IRQ_CALL+0x2>
 898:	f0 91 90 00 	lds	r31, 0x0090	; 0x800090 <GPU_IRQ_CALL+0x3>
 89c:	09 95       	icall
}
 89e:	ff 91       	pop	r31
 8a0:	ef 91       	pop	r30
 8a2:	bf 91       	pop	r27
 8a4:	af 91       	pop	r26
 8a6:	9f 91       	pop	r25
 8a8:	8f 91       	pop	r24
 8aa:	7f 91       	pop	r23
 8ac:	6f 91       	pop	r22
 8ae:	5f 91       	pop	r21
 8b0:	4f 91       	pop	r20
 8b2:	3f 91       	pop	r19
 8b4:	2f 91       	pop	r18
 8b6:	0f 90       	pop	r0
 8b8:	0f be       	out	0x3f, r0	; 63
 8ba:	0f 90       	pop	r0
 8bc:	1f 90       	pop	r1
 8be:	18 95       	reti

000008c0 <__vector_15>:

void __vector_15 (void) __attribute__((signal));
void __vector_15 (void)
{
 8c0:	1f 92       	push	r1
 8c2:	0f 92       	push	r0
 8c4:	0f b6       	in	r0, 0x3f	; 63
 8c6:	0f 92       	push	r0
 8c8:	11 24       	eor	r1, r1
 8ca:	2f 93       	push	r18
 8cc:	3f 93       	push	r19
 8ce:	4f 93       	push	r20
 8d0:	5f 93       	push	r21
 8d2:	6f 93       	push	r22
 8d4:	7f 93       	push	r23
 8d6:	8f 93       	push	r24
 8d8:	9f 93       	push	r25
 8da:	af 93       	push	r26
 8dc:	bf 93       	push	r27
 8de:	ef 93       	push	r30
 8e0:	ff 93       	push	r31
	//Call function
	GPU_IRQ_CALL[0]();
 8e2:	e0 91 8d 00 	lds	r30, 0x008D	; 0x80008d <GPU_IRQ_CALL>
 8e6:	f0 91 8e 00 	lds	r31, 0x008E	; 0x80008e <GPU_IRQ_CALL+0x1>
 8ea:	09 95       	icall
}
 8ec:	ff 91       	pop	r31
 8ee:	ef 91       	pop	r30
 8f0:	bf 91       	pop	r27
 8f2:	af 91       	pop	r26
 8f4:	9f 91       	pop	r25
 8f6:	8f 91       	pop	r24
 8f8:	7f 91       	pop	r23
 8fa:	6f 91       	pop	r22
 8fc:	5f 91       	pop	r21
 8fe:	4f 91       	pop	r20
 900:	3f 91       	pop	r19
 902:	2f 91       	pop	r18
 904:	0f 90       	pop	r0
 906:	0f be       	out	0x3f, r0	; 63
 908:	0f 90       	pop	r0
 90a:	1f 90       	pop	r1
 90c:	18 95       	reti

0000090e <Bluetooth_Init>:
}


void Bluetooth_TX_Byte(uint8_t* PTXBuffer) 
{
	MCAL_USART_SendData(PTXBuffer, Enable) ;
 90e:	ec e7       	ldi	r30, 0x7C	; 124
 910:	f0 e0       	ldi	r31, 0x00	; 0
 912:	20 e8       	ldi	r18, 0x80	; 128
 914:	35 e2       	ldi	r19, 0x25	; 37
 916:	36 83       	std	Z+6, r19	; 0x06
 918:	25 83       	std	Z+5, r18	; 0x05
 91a:	9e ef       	ldi	r25, 0xFE	; 254
 91c:	91 83       	std	Z+1, r25	; 0x01
 91e:	91 e0       	ldi	r25, 0x01	; 1
 920:	92 83       	std	Z+2, r25	; 0x02
 922:	81 11       	cpse	r24, r1
 924:	07 c0       	rjmp	.+14     	; 0x934 <Bluetooth_Init+0x26>
 926:	83 e0       	ldi	r24, 0x03	; 3
 928:	80 87       	std	Z+8, r24	; 0x08
 92a:	85 eb       	ldi	r24, 0xB5	; 181
 92c:	94 e0       	ldi	r25, 0x04	; 4
 92e:	92 87       	std	Z+10, r25	; 0x0a
 930:	81 87       	std	Z+9, r24	; 0x09
 932:	05 c0       	rjmp	.+10     	; 0x93e <Bluetooth_Init+0x30>
 934:	ec e7       	ldi	r30, 0x7C	; 124
 936:	f0 e0       	ldi	r31, 0x00	; 0
 938:	10 86       	std	Z+8, r1	; 0x08
 93a:	12 86       	std	Z+10, r1	; 0x0a
 93c:	11 86       	std	Z+9, r1	; 0x09
 93e:	ec e7       	ldi	r30, 0x7C	; 124
 940:	f0 e0       	ldi	r31, 0x00	; 0
 942:	88 e1       	ldi	r24, 0x18	; 24
 944:	80 83       	st	Z, r24
 946:	84 e0       	ldi	r24, 0x04	; 4
 948:	83 83       	std	Z+3, r24	; 0x03
 94a:	87 ef       	ldi	r24, 0xF7	; 247
 94c:	84 83       	std	Z+4, r24	; 0x04
 94e:	8f ec       	ldi	r24, 0xCF	; 207
 950:	87 83       	std	Z+7, r24	; 0x07
 952:	cf 01       	movw	r24, r30
 954:	0e 94 1b 02 	call	0x436	; 0x436 <MCAL_USART_Init>
 958:	08 95       	ret

0000095a <Bluetooth_TX_Str>:


//to finish the sending process you must send #
void Bluetooth_TX_Str(uint8_t* PTXBuffer) 
{
	MCAL_USART_Send_String(PTXBuffer , Enable);
 95a:	60 e0       	ldi	r22, 0x00	; 0
 95c:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <MCAL_USART_Send_String>
 960:	08 95       	ret

00000962 <Bluetooth_RX_Byte>:
}


void Bluetooth_RX_Byte(uint8_t* PRXBuffer) 
{
	MCAL_USART_ReceiveData(PRXBuffer,Enable);
 962:	60 e0       	ldi	r22, 0x00	; 0
 964:	0e 94 9d 03 	call	0x73a	; 0x73a <MCAL_USART_ReceiveData>
 968:	08 95       	ret

0000096a <ISR_Bluetooth>:

uint8_t Data;

void ISR_Bluetooth (void)
{
	Bluetooth_RX_Byte(&Data);	
 96a:	83 e9       	ldi	r24, 0x93	; 147
 96c:	90 e0       	ldi	r25, 0x00	; 0
 96e:	0e 94 b1 04 	call	0x962	; 0x962 <Bluetooth_RX_Byte>
			if(Data =='1')
 972:	80 91 93 00 	lds	r24, 0x0093	; 0x800093 <Data>
 976:	81 33       	cpi	r24, 0x31	; 49
 978:	59 f4       	brne	.+22     	; 0x990 <ISR_Bluetooth+0x26>
			{
				MCAL_GPIO_WritePin(GPIOB , GPIO_PIN_0 , SET) ;			
 97a:	41 e0       	ldi	r20, 0x01	; 1
 97c:	61 e0       	ldi	r22, 0x01	; 1
 97e:	86 e3       	ldi	r24, 0x36	; 54
 980:	90 e0       	ldi	r25, 0x00	; 0
 982:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
				Bluetooth_TX_Str("LED_ON#");					
 986:	80 e6       	ldi	r24, 0x60	; 96
 988:	90 e0       	ldi	r25, 0x00	; 0
 98a:	0e 94 ad 04 	call	0x95a	; 0x95a <Bluetooth_TX_Str>
 98e:	08 95       	ret
			}
			else if(Data =='2')
 990:	82 33       	cpi	r24, 0x32	; 50
 992:	51 f4       	brne	.+20     	; 0x9a8 <ISR_Bluetooth+0x3e>
			{
				MCAL_GPIO_WritePin(GPIOB , GPIO_PIN_0 , RESET) ;							
 994:	40 e0       	ldi	r20, 0x00	; 0
 996:	61 e0       	ldi	r22, 0x01	; 1
 998:	86 e3       	ldi	r24, 0x36	; 54
 99a:	90 e0       	ldi	r25, 0x00	; 0
 99c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
				Bluetooth_TX_Str("LED_OFF#"); 				
 9a0:	88 e6       	ldi	r24, 0x68	; 104
 9a2:	90 e0       	ldi	r25, 0x00	; 0
 9a4:	0e 94 ad 04 	call	0x95a	; 0x95a <Bluetooth_TX_Str>
 9a8:	08 95       	ret

000009aa <main>:
			}
}

int main(void)
{	
 9aa:	cf 93       	push	r28
 9ac:	df 93       	push	r29
 9ae:	00 d0       	rcall	.+0      	; 0x9b0 <main+0x6>
 9b0:	cd b7       	in	r28, 0x3d	; 61
 9b2:	de b7       	in	r29, 0x3e	; 62
	GPIO_Pinconfig_t GPIO_Conf ;
	GPIO_Conf.pinNumber = GPIO_PIN_0 ;
 9b4:	81 e0       	ldi	r24, 0x01	; 1
 9b6:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
 9b8:	83 e0       	ldi	r24, 0x03	; 3
 9ba:	8a 83       	std	Y+2, r24	; 0x02
	MCAL_GPIO_Init(GPIOB , &GPIO_Conf ) ;
 9bc:	be 01       	movw	r22, r28
 9be:	6f 5f       	subi	r22, 0xFF	; 255
 9c0:	7f 4f       	sbci	r23, 0xFF	; 255
 9c2:	86 e3       	ldi	r24, 0x36	; 54
 9c4:	90 e0       	ldi	r25, 0x00	; 0
 9c6:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	Bluetooth_Init( INT_Enable) ;
 9ca:	80 e0       	ldi	r24, 0x00	; 0
 9cc:	0e 94 87 04 	call	0x90e	; 0x90e <Bluetooth_Init>
 9d0:	ff cf       	rjmp	.-2      	; 0x9d0 <main+0x26>

000009d2 <__subsf3>:
 9d2:	50 58       	subi	r21, 0x80	; 128

000009d4 <__addsf3>:
 9d4:	bb 27       	eor	r27, r27
 9d6:	aa 27       	eor	r26, r26
 9d8:	0e 94 01 05 	call	0xa02	; 0xa02 <__addsf3x>
 9dc:	0c 94 4b 06 	jmp	0xc96	; 0xc96 <__fp_round>
 9e0:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__fp_pscA>
 9e4:	38 f0       	brcs	.+14     	; 0x9f4 <__addsf3+0x20>
 9e6:	0e 94 44 06 	call	0xc88	; 0xc88 <__fp_pscB>
 9ea:	20 f0       	brcs	.+8      	; 0x9f4 <__addsf3+0x20>
 9ec:	39 f4       	brne	.+14     	; 0x9fc <__addsf3+0x28>
 9ee:	9f 3f       	cpi	r25, 0xFF	; 255
 9f0:	19 f4       	brne	.+6      	; 0x9f8 <__addsf3+0x24>
 9f2:	26 f4       	brtc	.+8      	; 0x9fc <__addsf3+0x28>
 9f4:	0c 94 3a 06 	jmp	0xc74	; 0xc74 <__fp_nan>
 9f8:	0e f4       	brtc	.+2      	; 0x9fc <__addsf3+0x28>
 9fa:	e0 95       	com	r30
 9fc:	e7 fb       	bst	r30, 7
 9fe:	0c 94 34 06 	jmp	0xc68	; 0xc68 <__fp_inf>

00000a02 <__addsf3x>:
 a02:	e9 2f       	mov	r30, r25
 a04:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__fp_split3>
 a08:	58 f3       	brcs	.-42     	; 0x9e0 <__addsf3+0xc>
 a0a:	ba 17       	cp	r27, r26
 a0c:	62 07       	cpc	r22, r18
 a0e:	73 07       	cpc	r23, r19
 a10:	84 07       	cpc	r24, r20
 a12:	95 07       	cpc	r25, r21
 a14:	20 f0       	brcs	.+8      	; 0xa1e <__addsf3x+0x1c>
 a16:	79 f4       	brne	.+30     	; 0xa36 <__addsf3x+0x34>
 a18:	a6 f5       	brtc	.+104    	; 0xa82 <__addsf3x+0x80>
 a1a:	0c 94 7e 06 	jmp	0xcfc	; 0xcfc <__fp_zero>
 a1e:	0e f4       	brtc	.+2      	; 0xa22 <__addsf3x+0x20>
 a20:	e0 95       	com	r30
 a22:	0b 2e       	mov	r0, r27
 a24:	ba 2f       	mov	r27, r26
 a26:	a0 2d       	mov	r26, r0
 a28:	0b 01       	movw	r0, r22
 a2a:	b9 01       	movw	r22, r18
 a2c:	90 01       	movw	r18, r0
 a2e:	0c 01       	movw	r0, r24
 a30:	ca 01       	movw	r24, r20
 a32:	a0 01       	movw	r20, r0
 a34:	11 24       	eor	r1, r1
 a36:	ff 27       	eor	r31, r31
 a38:	59 1b       	sub	r21, r25
 a3a:	99 f0       	breq	.+38     	; 0xa62 <__addsf3x+0x60>
 a3c:	59 3f       	cpi	r21, 0xF9	; 249
 a3e:	50 f4       	brcc	.+20     	; 0xa54 <__addsf3x+0x52>
 a40:	50 3e       	cpi	r21, 0xE0	; 224
 a42:	68 f1       	brcs	.+90     	; 0xa9e <__addsf3x+0x9c>
 a44:	1a 16       	cp	r1, r26
 a46:	f0 40       	sbci	r31, 0x00	; 0
 a48:	a2 2f       	mov	r26, r18
 a4a:	23 2f       	mov	r18, r19
 a4c:	34 2f       	mov	r19, r20
 a4e:	44 27       	eor	r20, r20
 a50:	58 5f       	subi	r21, 0xF8	; 248
 a52:	f3 cf       	rjmp	.-26     	; 0xa3a <__addsf3x+0x38>
 a54:	46 95       	lsr	r20
 a56:	37 95       	ror	r19
 a58:	27 95       	ror	r18
 a5a:	a7 95       	ror	r26
 a5c:	f0 40       	sbci	r31, 0x00	; 0
 a5e:	53 95       	inc	r21
 a60:	c9 f7       	brne	.-14     	; 0xa54 <__addsf3x+0x52>
 a62:	7e f4       	brtc	.+30     	; 0xa82 <__addsf3x+0x80>
 a64:	1f 16       	cp	r1, r31
 a66:	ba 0b       	sbc	r27, r26
 a68:	62 0b       	sbc	r22, r18
 a6a:	73 0b       	sbc	r23, r19
 a6c:	84 0b       	sbc	r24, r20
 a6e:	ba f0       	brmi	.+46     	; 0xa9e <__addsf3x+0x9c>
 a70:	91 50       	subi	r25, 0x01	; 1
 a72:	a1 f0       	breq	.+40     	; 0xa9c <__addsf3x+0x9a>
 a74:	ff 0f       	add	r31, r31
 a76:	bb 1f       	adc	r27, r27
 a78:	66 1f       	adc	r22, r22
 a7a:	77 1f       	adc	r23, r23
 a7c:	88 1f       	adc	r24, r24
 a7e:	c2 f7       	brpl	.-16     	; 0xa70 <__addsf3x+0x6e>
 a80:	0e c0       	rjmp	.+28     	; 0xa9e <__addsf3x+0x9c>
 a82:	ba 0f       	add	r27, r26
 a84:	62 1f       	adc	r22, r18
 a86:	73 1f       	adc	r23, r19
 a88:	84 1f       	adc	r24, r20
 a8a:	48 f4       	brcc	.+18     	; 0xa9e <__addsf3x+0x9c>
 a8c:	87 95       	ror	r24
 a8e:	77 95       	ror	r23
 a90:	67 95       	ror	r22
 a92:	b7 95       	ror	r27
 a94:	f7 95       	ror	r31
 a96:	9e 3f       	cpi	r25, 0xFE	; 254
 a98:	08 f0       	brcs	.+2      	; 0xa9c <__addsf3x+0x9a>
 a9a:	b0 cf       	rjmp	.-160    	; 0x9fc <__addsf3+0x28>
 a9c:	93 95       	inc	r25
 a9e:	88 0f       	add	r24, r24
 aa0:	08 f0       	brcs	.+2      	; 0xaa4 <__addsf3x+0xa2>
 aa2:	99 27       	eor	r25, r25
 aa4:	ee 0f       	add	r30, r30
 aa6:	97 95       	ror	r25
 aa8:	87 95       	ror	r24
 aaa:	08 95       	ret

00000aac <__divsf3>:
 aac:	0e 94 6a 05 	call	0xad4	; 0xad4 <__divsf3x>
 ab0:	0c 94 4b 06 	jmp	0xc96	; 0xc96 <__fp_round>
 ab4:	0e 94 44 06 	call	0xc88	; 0xc88 <__fp_pscB>
 ab8:	58 f0       	brcs	.+22     	; 0xad0 <__divsf3+0x24>
 aba:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__fp_pscA>
 abe:	40 f0       	brcs	.+16     	; 0xad0 <__divsf3+0x24>
 ac0:	29 f4       	brne	.+10     	; 0xacc <__divsf3+0x20>
 ac2:	5f 3f       	cpi	r21, 0xFF	; 255
 ac4:	29 f0       	breq	.+10     	; 0xad0 <__divsf3+0x24>
 ac6:	0c 94 34 06 	jmp	0xc68	; 0xc68 <__fp_inf>
 aca:	51 11       	cpse	r21, r1
 acc:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__fp_szero>
 ad0:	0c 94 3a 06 	jmp	0xc74	; 0xc74 <__fp_nan>

00000ad4 <__divsf3x>:
 ad4:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__fp_split3>
 ad8:	68 f3       	brcs	.-38     	; 0xab4 <__divsf3+0x8>

00000ada <__divsf3_pse>:
 ada:	99 23       	and	r25, r25
 adc:	b1 f3       	breq	.-20     	; 0xaca <__divsf3+0x1e>
 ade:	55 23       	and	r21, r21
 ae0:	91 f3       	breq	.-28     	; 0xac6 <__divsf3+0x1a>
 ae2:	95 1b       	sub	r25, r21
 ae4:	55 0b       	sbc	r21, r21
 ae6:	bb 27       	eor	r27, r27
 ae8:	aa 27       	eor	r26, r26
 aea:	62 17       	cp	r22, r18
 aec:	73 07       	cpc	r23, r19
 aee:	84 07       	cpc	r24, r20
 af0:	38 f0       	brcs	.+14     	; 0xb00 <__divsf3_pse+0x26>
 af2:	9f 5f       	subi	r25, 0xFF	; 255
 af4:	5f 4f       	sbci	r21, 0xFF	; 255
 af6:	22 0f       	add	r18, r18
 af8:	33 1f       	adc	r19, r19
 afa:	44 1f       	adc	r20, r20
 afc:	aa 1f       	adc	r26, r26
 afe:	a9 f3       	breq	.-22     	; 0xaea <__divsf3_pse+0x10>
 b00:	35 d0       	rcall	.+106    	; 0xb6c <__divsf3_pse+0x92>
 b02:	0e 2e       	mov	r0, r30
 b04:	3a f0       	brmi	.+14     	; 0xb14 <__divsf3_pse+0x3a>
 b06:	e0 e8       	ldi	r30, 0x80	; 128
 b08:	32 d0       	rcall	.+100    	; 0xb6e <__divsf3_pse+0x94>
 b0a:	91 50       	subi	r25, 0x01	; 1
 b0c:	50 40       	sbci	r21, 0x00	; 0
 b0e:	e6 95       	lsr	r30
 b10:	00 1c       	adc	r0, r0
 b12:	ca f7       	brpl	.-14     	; 0xb06 <__divsf3_pse+0x2c>
 b14:	2b d0       	rcall	.+86     	; 0xb6c <__divsf3_pse+0x92>
 b16:	fe 2f       	mov	r31, r30
 b18:	29 d0       	rcall	.+82     	; 0xb6c <__divsf3_pse+0x92>
 b1a:	66 0f       	add	r22, r22
 b1c:	77 1f       	adc	r23, r23
 b1e:	88 1f       	adc	r24, r24
 b20:	bb 1f       	adc	r27, r27
 b22:	26 17       	cp	r18, r22
 b24:	37 07       	cpc	r19, r23
 b26:	48 07       	cpc	r20, r24
 b28:	ab 07       	cpc	r26, r27
 b2a:	b0 e8       	ldi	r27, 0x80	; 128
 b2c:	09 f0       	breq	.+2      	; 0xb30 <__divsf3_pse+0x56>
 b2e:	bb 0b       	sbc	r27, r27
 b30:	80 2d       	mov	r24, r0
 b32:	bf 01       	movw	r22, r30
 b34:	ff 27       	eor	r31, r31
 b36:	93 58       	subi	r25, 0x83	; 131
 b38:	5f 4f       	sbci	r21, 0xFF	; 255
 b3a:	3a f0       	brmi	.+14     	; 0xb4a <__divsf3_pse+0x70>
 b3c:	9e 3f       	cpi	r25, 0xFE	; 254
 b3e:	51 05       	cpc	r21, r1
 b40:	78 f0       	brcs	.+30     	; 0xb60 <__divsf3_pse+0x86>
 b42:	0c 94 34 06 	jmp	0xc68	; 0xc68 <__fp_inf>
 b46:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__fp_szero>
 b4a:	5f 3f       	cpi	r21, 0xFF	; 255
 b4c:	e4 f3       	brlt	.-8      	; 0xb46 <__divsf3_pse+0x6c>
 b4e:	98 3e       	cpi	r25, 0xE8	; 232
 b50:	d4 f3       	brlt	.-12     	; 0xb46 <__divsf3_pse+0x6c>
 b52:	86 95       	lsr	r24
 b54:	77 95       	ror	r23
 b56:	67 95       	ror	r22
 b58:	b7 95       	ror	r27
 b5a:	f7 95       	ror	r31
 b5c:	9f 5f       	subi	r25, 0xFF	; 255
 b5e:	c9 f7       	brne	.-14     	; 0xb52 <__divsf3_pse+0x78>
 b60:	88 0f       	add	r24, r24
 b62:	91 1d       	adc	r25, r1
 b64:	96 95       	lsr	r25
 b66:	87 95       	ror	r24
 b68:	97 f9       	bld	r25, 7
 b6a:	08 95       	ret
 b6c:	e1 e0       	ldi	r30, 0x01	; 1
 b6e:	66 0f       	add	r22, r22
 b70:	77 1f       	adc	r23, r23
 b72:	88 1f       	adc	r24, r24
 b74:	bb 1f       	adc	r27, r27
 b76:	62 17       	cp	r22, r18
 b78:	73 07       	cpc	r23, r19
 b7a:	84 07       	cpc	r24, r20
 b7c:	ba 07       	cpc	r27, r26
 b7e:	20 f0       	brcs	.+8      	; 0xb88 <__divsf3_pse+0xae>
 b80:	62 1b       	sub	r22, r18
 b82:	73 0b       	sbc	r23, r19
 b84:	84 0b       	sbc	r24, r20
 b86:	ba 0b       	sbc	r27, r26
 b88:	ee 1f       	adc	r30, r30
 b8a:	88 f7       	brcc	.-30     	; 0xb6e <__divsf3_pse+0x94>
 b8c:	e0 95       	com	r30
 b8e:	08 95       	ret

00000b90 <__fixunssfsi>:
 b90:	0e 94 64 06 	call	0xcc8	; 0xcc8 <__fp_splitA>
 b94:	88 f0       	brcs	.+34     	; 0xbb8 <__fixunssfsi+0x28>
 b96:	9f 57       	subi	r25, 0x7F	; 127
 b98:	98 f0       	brcs	.+38     	; 0xbc0 <__fixunssfsi+0x30>
 b9a:	b9 2f       	mov	r27, r25
 b9c:	99 27       	eor	r25, r25
 b9e:	b7 51       	subi	r27, 0x17	; 23
 ba0:	b0 f0       	brcs	.+44     	; 0xbce <__fixunssfsi+0x3e>
 ba2:	e1 f0       	breq	.+56     	; 0xbdc <__fixunssfsi+0x4c>
 ba4:	66 0f       	add	r22, r22
 ba6:	77 1f       	adc	r23, r23
 ba8:	88 1f       	adc	r24, r24
 baa:	99 1f       	adc	r25, r25
 bac:	1a f0       	brmi	.+6      	; 0xbb4 <__fixunssfsi+0x24>
 bae:	ba 95       	dec	r27
 bb0:	c9 f7       	brne	.-14     	; 0xba4 <__fixunssfsi+0x14>
 bb2:	14 c0       	rjmp	.+40     	; 0xbdc <__fixunssfsi+0x4c>
 bb4:	b1 30       	cpi	r27, 0x01	; 1
 bb6:	91 f0       	breq	.+36     	; 0xbdc <__fixunssfsi+0x4c>
 bb8:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__fp_zero>
 bbc:	b1 e0       	ldi	r27, 0x01	; 1
 bbe:	08 95       	ret
 bc0:	0c 94 7e 06 	jmp	0xcfc	; 0xcfc <__fp_zero>
 bc4:	67 2f       	mov	r22, r23
 bc6:	78 2f       	mov	r23, r24
 bc8:	88 27       	eor	r24, r24
 bca:	b8 5f       	subi	r27, 0xF8	; 248
 bcc:	39 f0       	breq	.+14     	; 0xbdc <__fixunssfsi+0x4c>
 bce:	b9 3f       	cpi	r27, 0xF9	; 249
 bd0:	cc f3       	brlt	.-14     	; 0xbc4 <__fixunssfsi+0x34>
 bd2:	86 95       	lsr	r24
 bd4:	77 95       	ror	r23
 bd6:	67 95       	ror	r22
 bd8:	b3 95       	inc	r27
 bda:	d9 f7       	brne	.-10     	; 0xbd2 <__fixunssfsi+0x42>
 bdc:	3e f4       	brtc	.+14     	; 0xbec <__fixunssfsi+0x5c>
 bde:	90 95       	com	r25
 be0:	80 95       	com	r24
 be2:	70 95       	com	r23
 be4:	61 95       	neg	r22
 be6:	7f 4f       	sbci	r23, 0xFF	; 255
 be8:	8f 4f       	sbci	r24, 0xFF	; 255
 bea:	9f 4f       	sbci	r25, 0xFF	; 255
 bec:	08 95       	ret

00000bee <__floatunsisf>:
 bee:	e8 94       	clt
 bf0:	09 c0       	rjmp	.+18     	; 0xc04 <__floatsisf+0x12>

00000bf2 <__floatsisf>:
 bf2:	97 fb       	bst	r25, 7
 bf4:	3e f4       	brtc	.+14     	; 0xc04 <__floatsisf+0x12>
 bf6:	90 95       	com	r25
 bf8:	80 95       	com	r24
 bfa:	70 95       	com	r23
 bfc:	61 95       	neg	r22
 bfe:	7f 4f       	sbci	r23, 0xFF	; 255
 c00:	8f 4f       	sbci	r24, 0xFF	; 255
 c02:	9f 4f       	sbci	r25, 0xFF	; 255
 c04:	99 23       	and	r25, r25
 c06:	a9 f0       	breq	.+42     	; 0xc32 <__floatsisf+0x40>
 c08:	f9 2f       	mov	r31, r25
 c0a:	96 e9       	ldi	r25, 0x96	; 150
 c0c:	bb 27       	eor	r27, r27
 c0e:	93 95       	inc	r25
 c10:	f6 95       	lsr	r31
 c12:	87 95       	ror	r24
 c14:	77 95       	ror	r23
 c16:	67 95       	ror	r22
 c18:	b7 95       	ror	r27
 c1a:	f1 11       	cpse	r31, r1
 c1c:	f8 cf       	rjmp	.-16     	; 0xc0e <__floatsisf+0x1c>
 c1e:	fa f4       	brpl	.+62     	; 0xc5e <__floatsisf+0x6c>
 c20:	bb 0f       	add	r27, r27
 c22:	11 f4       	brne	.+4      	; 0xc28 <__floatsisf+0x36>
 c24:	60 ff       	sbrs	r22, 0
 c26:	1b c0       	rjmp	.+54     	; 0xc5e <__floatsisf+0x6c>
 c28:	6f 5f       	subi	r22, 0xFF	; 255
 c2a:	7f 4f       	sbci	r23, 0xFF	; 255
 c2c:	8f 4f       	sbci	r24, 0xFF	; 255
 c2e:	9f 4f       	sbci	r25, 0xFF	; 255
 c30:	16 c0       	rjmp	.+44     	; 0xc5e <__floatsisf+0x6c>
 c32:	88 23       	and	r24, r24
 c34:	11 f0       	breq	.+4      	; 0xc3a <__floatsisf+0x48>
 c36:	96 e9       	ldi	r25, 0x96	; 150
 c38:	11 c0       	rjmp	.+34     	; 0xc5c <__floatsisf+0x6a>
 c3a:	77 23       	and	r23, r23
 c3c:	21 f0       	breq	.+8      	; 0xc46 <__floatsisf+0x54>
 c3e:	9e e8       	ldi	r25, 0x8E	; 142
 c40:	87 2f       	mov	r24, r23
 c42:	76 2f       	mov	r23, r22
 c44:	05 c0       	rjmp	.+10     	; 0xc50 <__floatsisf+0x5e>
 c46:	66 23       	and	r22, r22
 c48:	71 f0       	breq	.+28     	; 0xc66 <__floatsisf+0x74>
 c4a:	96 e8       	ldi	r25, 0x86	; 134
 c4c:	86 2f       	mov	r24, r22
 c4e:	70 e0       	ldi	r23, 0x00	; 0
 c50:	60 e0       	ldi	r22, 0x00	; 0
 c52:	2a f0       	brmi	.+10     	; 0xc5e <__floatsisf+0x6c>
 c54:	9a 95       	dec	r25
 c56:	66 0f       	add	r22, r22
 c58:	77 1f       	adc	r23, r23
 c5a:	88 1f       	adc	r24, r24
 c5c:	da f7       	brpl	.-10     	; 0xc54 <__floatsisf+0x62>
 c5e:	88 0f       	add	r24, r24
 c60:	96 95       	lsr	r25
 c62:	87 95       	ror	r24
 c64:	97 f9       	bld	r25, 7
 c66:	08 95       	ret

00000c68 <__fp_inf>:
 c68:	97 f9       	bld	r25, 7
 c6a:	9f 67       	ori	r25, 0x7F	; 127
 c6c:	80 e8       	ldi	r24, 0x80	; 128
 c6e:	70 e0       	ldi	r23, 0x00	; 0
 c70:	60 e0       	ldi	r22, 0x00	; 0
 c72:	08 95       	ret

00000c74 <__fp_nan>:
 c74:	9f ef       	ldi	r25, 0xFF	; 255
 c76:	80 ec       	ldi	r24, 0xC0	; 192
 c78:	08 95       	ret

00000c7a <__fp_pscA>:
 c7a:	00 24       	eor	r0, r0
 c7c:	0a 94       	dec	r0
 c7e:	16 16       	cp	r1, r22
 c80:	17 06       	cpc	r1, r23
 c82:	18 06       	cpc	r1, r24
 c84:	09 06       	cpc	r0, r25
 c86:	08 95       	ret

00000c88 <__fp_pscB>:
 c88:	00 24       	eor	r0, r0
 c8a:	0a 94       	dec	r0
 c8c:	12 16       	cp	r1, r18
 c8e:	13 06       	cpc	r1, r19
 c90:	14 06       	cpc	r1, r20
 c92:	05 06       	cpc	r0, r21
 c94:	08 95       	ret

00000c96 <__fp_round>:
 c96:	09 2e       	mov	r0, r25
 c98:	03 94       	inc	r0
 c9a:	00 0c       	add	r0, r0
 c9c:	11 f4       	brne	.+4      	; 0xca2 <__fp_round+0xc>
 c9e:	88 23       	and	r24, r24
 ca0:	52 f0       	brmi	.+20     	; 0xcb6 <__fp_round+0x20>
 ca2:	bb 0f       	add	r27, r27
 ca4:	40 f4       	brcc	.+16     	; 0xcb6 <__fp_round+0x20>
 ca6:	bf 2b       	or	r27, r31
 ca8:	11 f4       	brne	.+4      	; 0xcae <__fp_round+0x18>
 caa:	60 ff       	sbrs	r22, 0
 cac:	04 c0       	rjmp	.+8      	; 0xcb6 <__fp_round+0x20>
 cae:	6f 5f       	subi	r22, 0xFF	; 255
 cb0:	7f 4f       	sbci	r23, 0xFF	; 255
 cb2:	8f 4f       	sbci	r24, 0xFF	; 255
 cb4:	9f 4f       	sbci	r25, 0xFF	; 255
 cb6:	08 95       	ret

00000cb8 <__fp_split3>:
 cb8:	57 fd       	sbrc	r21, 7
 cba:	90 58       	subi	r25, 0x80	; 128
 cbc:	44 0f       	add	r20, r20
 cbe:	55 1f       	adc	r21, r21
 cc0:	59 f0       	breq	.+22     	; 0xcd8 <__fp_splitA+0x10>
 cc2:	5f 3f       	cpi	r21, 0xFF	; 255
 cc4:	71 f0       	breq	.+28     	; 0xce2 <__fp_splitA+0x1a>
 cc6:	47 95       	ror	r20

00000cc8 <__fp_splitA>:
 cc8:	88 0f       	add	r24, r24
 cca:	97 fb       	bst	r25, 7
 ccc:	99 1f       	adc	r25, r25
 cce:	61 f0       	breq	.+24     	; 0xce8 <__fp_splitA+0x20>
 cd0:	9f 3f       	cpi	r25, 0xFF	; 255
 cd2:	79 f0       	breq	.+30     	; 0xcf2 <__fp_splitA+0x2a>
 cd4:	87 95       	ror	r24
 cd6:	08 95       	ret
 cd8:	12 16       	cp	r1, r18
 cda:	13 06       	cpc	r1, r19
 cdc:	14 06       	cpc	r1, r20
 cde:	55 1f       	adc	r21, r21
 ce0:	f2 cf       	rjmp	.-28     	; 0xcc6 <__fp_split3+0xe>
 ce2:	46 95       	lsr	r20
 ce4:	f1 df       	rcall	.-30     	; 0xcc8 <__fp_splitA>
 ce6:	08 c0       	rjmp	.+16     	; 0xcf8 <__fp_splitA+0x30>
 ce8:	16 16       	cp	r1, r22
 cea:	17 06       	cpc	r1, r23
 cec:	18 06       	cpc	r1, r24
 cee:	99 1f       	adc	r25, r25
 cf0:	f1 cf       	rjmp	.-30     	; 0xcd4 <__fp_splitA+0xc>
 cf2:	86 95       	lsr	r24
 cf4:	71 05       	cpc	r23, r1
 cf6:	61 05       	cpc	r22, r1
 cf8:	08 94       	sec
 cfa:	08 95       	ret

00000cfc <__fp_zero>:
 cfc:	e8 94       	clt

00000cfe <__fp_szero>:
 cfe:	bb 27       	eor	r27, r27
 d00:	66 27       	eor	r22, r22
 d02:	77 27       	eor	r23, r23
 d04:	cb 01       	movw	r24, r22
 d06:	97 f9       	bld	r25, 7
 d08:	08 95       	ret

00000d0a <__mulsf3>:
 d0a:	0e 94 98 06 	call	0xd30	; 0xd30 <__mulsf3x>
 d0e:	0c 94 4b 06 	jmp	0xc96	; 0xc96 <__fp_round>
 d12:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__fp_pscA>
 d16:	38 f0       	brcs	.+14     	; 0xd26 <__mulsf3+0x1c>
 d18:	0e 94 44 06 	call	0xc88	; 0xc88 <__fp_pscB>
 d1c:	20 f0       	brcs	.+8      	; 0xd26 <__mulsf3+0x1c>
 d1e:	95 23       	and	r25, r21
 d20:	11 f0       	breq	.+4      	; 0xd26 <__mulsf3+0x1c>
 d22:	0c 94 34 06 	jmp	0xc68	; 0xc68 <__fp_inf>
 d26:	0c 94 3a 06 	jmp	0xc74	; 0xc74 <__fp_nan>
 d2a:	11 24       	eor	r1, r1
 d2c:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__fp_szero>

00000d30 <__mulsf3x>:
 d30:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__fp_split3>
 d34:	70 f3       	brcs	.-36     	; 0xd12 <__mulsf3+0x8>

00000d36 <__mulsf3_pse>:
 d36:	95 9f       	mul	r25, r21
 d38:	c1 f3       	breq	.-16     	; 0xd2a <__mulsf3+0x20>
 d3a:	95 0f       	add	r25, r21
 d3c:	50 e0       	ldi	r21, 0x00	; 0
 d3e:	55 1f       	adc	r21, r21
 d40:	62 9f       	mul	r22, r18
 d42:	f0 01       	movw	r30, r0
 d44:	72 9f       	mul	r23, r18
 d46:	bb 27       	eor	r27, r27
 d48:	f0 0d       	add	r31, r0
 d4a:	b1 1d       	adc	r27, r1
 d4c:	63 9f       	mul	r22, r19
 d4e:	aa 27       	eor	r26, r26
 d50:	f0 0d       	add	r31, r0
 d52:	b1 1d       	adc	r27, r1
 d54:	aa 1f       	adc	r26, r26
 d56:	64 9f       	mul	r22, r20
 d58:	66 27       	eor	r22, r22
 d5a:	b0 0d       	add	r27, r0
 d5c:	a1 1d       	adc	r26, r1
 d5e:	66 1f       	adc	r22, r22
 d60:	82 9f       	mul	r24, r18
 d62:	22 27       	eor	r18, r18
 d64:	b0 0d       	add	r27, r0
 d66:	a1 1d       	adc	r26, r1
 d68:	62 1f       	adc	r22, r18
 d6a:	73 9f       	mul	r23, r19
 d6c:	b0 0d       	add	r27, r0
 d6e:	a1 1d       	adc	r26, r1
 d70:	62 1f       	adc	r22, r18
 d72:	83 9f       	mul	r24, r19
 d74:	a0 0d       	add	r26, r0
 d76:	61 1d       	adc	r22, r1
 d78:	22 1f       	adc	r18, r18
 d7a:	74 9f       	mul	r23, r20
 d7c:	33 27       	eor	r19, r19
 d7e:	a0 0d       	add	r26, r0
 d80:	61 1d       	adc	r22, r1
 d82:	23 1f       	adc	r18, r19
 d84:	84 9f       	mul	r24, r20
 d86:	60 0d       	add	r22, r0
 d88:	21 1d       	adc	r18, r1
 d8a:	82 2f       	mov	r24, r18
 d8c:	76 2f       	mov	r23, r22
 d8e:	6a 2f       	mov	r22, r26
 d90:	11 24       	eor	r1, r1
 d92:	9f 57       	subi	r25, 0x7F	; 127
 d94:	50 40       	sbci	r21, 0x00	; 0
 d96:	9a f0       	brmi	.+38     	; 0xdbe <__mulsf3_pse+0x88>
 d98:	f1 f0       	breq	.+60     	; 0xdd6 <__mulsf3_pse+0xa0>
 d9a:	88 23       	and	r24, r24
 d9c:	4a f0       	brmi	.+18     	; 0xdb0 <__mulsf3_pse+0x7a>
 d9e:	ee 0f       	add	r30, r30
 da0:	ff 1f       	adc	r31, r31
 da2:	bb 1f       	adc	r27, r27
 da4:	66 1f       	adc	r22, r22
 da6:	77 1f       	adc	r23, r23
 da8:	88 1f       	adc	r24, r24
 daa:	91 50       	subi	r25, 0x01	; 1
 dac:	50 40       	sbci	r21, 0x00	; 0
 dae:	a9 f7       	brne	.-22     	; 0xd9a <__mulsf3_pse+0x64>
 db0:	9e 3f       	cpi	r25, 0xFE	; 254
 db2:	51 05       	cpc	r21, r1
 db4:	80 f0       	brcs	.+32     	; 0xdd6 <__mulsf3_pse+0xa0>
 db6:	0c 94 34 06 	jmp	0xc68	; 0xc68 <__fp_inf>
 dba:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__fp_szero>
 dbe:	5f 3f       	cpi	r21, 0xFF	; 255
 dc0:	e4 f3       	brlt	.-8      	; 0xdba <__mulsf3_pse+0x84>
 dc2:	98 3e       	cpi	r25, 0xE8	; 232
 dc4:	d4 f3       	brlt	.-12     	; 0xdba <__mulsf3_pse+0x84>
 dc6:	86 95       	lsr	r24
 dc8:	77 95       	ror	r23
 dca:	67 95       	ror	r22
 dcc:	b7 95       	ror	r27
 dce:	f7 95       	ror	r31
 dd0:	e7 95       	ror	r30
 dd2:	9f 5f       	subi	r25, 0xFF	; 255
 dd4:	c1 f7       	brne	.-16     	; 0xdc6 <__mulsf3_pse+0x90>
 dd6:	fe 2b       	or	r31, r30
 dd8:	88 0f       	add	r24, r24
 dda:	91 1d       	adc	r25, r1
 ddc:	96 95       	lsr	r25
 dde:	87 95       	ror	r24
 de0:	97 f9       	bld	r25, 7
 de2:	08 95       	ret

00000de4 <_exit>:
 de4:	f8 94       	cli

00000de6 <__stop_program>:
 de6:	ff cf       	rjmp	.-2      	; 0xde6 <__stop_program>
