
Atmega32_Drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000015f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00800060  000015f4  00001688  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000027  00800088  00800088  000016b0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000016b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000016e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000368  00000000  00000000  0000171c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003f29  00000000  00000000  00001a84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000016a2  00000000  00000000  000059ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000244b  00000000  00000000  0000704f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a7c  00000000  00000000  0000949c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f97  00000000  00000000  00009f18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001d97  00000000  00000000  0000aeaf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000298  00000000  00000000  0000cc46  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_1>
       8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__vector_2>
       c:	0c 94 97 00 	jmp	0x12e	; 0x12e <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 ae 01 	jmp	0x35c	; 0x35c <__vector_7>
      20:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__vector_8>
      24:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__vector_9>
      28:	0c 94 2c 02 	jmp	0x458	; 0x458 <__vector_10>
      2c:	0c 94 56 02 	jmp	0x4ac	; 0x4ac <__vector_11>
      30:	0c 94 02 02 	jmp	0x404	; 0x404 <__vector_12>
      34:	0c 94 2e 04 	jmp	0x85c	; 0x85c <__vector_13>
      38:	0c 94 55 04 	jmp	0x8aa	; 0x8aa <__vector_14>
      3c:	0c 94 7c 04 	jmp	0x8f8	; 0x8f8 <__vector_15>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <__vector_19>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ef       	ldi	r30, 0xF4	; 244
      68:	f5 e1       	ldi	r31, 0x15	; 21
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a8 38       	cpi	r26, 0x88	; 136
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a8 e8       	ldi	r26, 0x88	; 136
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	af 3a       	cpi	r26, 0xAF	; 175
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <main>
      8a:	0c 94 f8 0a 	jmp	0x15f0	; 0x15f0 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_1>:
      92:	1f 92       	push	r1
      94:	0f 92       	push	r0
      96:	0f b6       	in	r0, 0x3f	; 63
      98:	0f 92       	push	r0
      9a:	11 24       	eor	r1, r1
      9c:	2f 93       	push	r18
      9e:	3f 93       	push	r19
      a0:	4f 93       	push	r20
      a2:	5f 93       	push	r21
      a4:	6f 93       	push	r22
      a6:	7f 93       	push	r23
      a8:	8f 93       	push	r24
      aa:	9f 93       	push	r25
      ac:	af 93       	push	r26
      ae:	bf 93       	push	r27
      b0:	ef 93       	push	r30
      b2:	ff 93       	push	r31
      b4:	e0 91 a1 00 	lds	r30, 0x00A1	; 0x8000a1 <GP_IRQ_CALL>
      b8:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <GP_IRQ_CALL+0x1>
      bc:	09 95       	icall
      be:	ff 91       	pop	r31
      c0:	ef 91       	pop	r30
      c2:	bf 91       	pop	r27
      c4:	af 91       	pop	r26
      c6:	9f 91       	pop	r25
      c8:	8f 91       	pop	r24
      ca:	7f 91       	pop	r23
      cc:	6f 91       	pop	r22
      ce:	5f 91       	pop	r21
      d0:	4f 91       	pop	r20
      d2:	3f 91       	pop	r19
      d4:	2f 91       	pop	r18
      d6:	0f 90       	pop	r0
      d8:	0f be       	out	0x3f, r0	; 63
      da:	0f 90       	pop	r0
      dc:	1f 90       	pop	r1
      de:	18 95       	reti

000000e0 <__vector_2>:
      e0:	1f 92       	push	r1
      e2:	0f 92       	push	r0
      e4:	0f b6       	in	r0, 0x3f	; 63
      e6:	0f 92       	push	r0
      e8:	11 24       	eor	r1, r1
      ea:	2f 93       	push	r18
      ec:	3f 93       	push	r19
      ee:	4f 93       	push	r20
      f0:	5f 93       	push	r21
      f2:	6f 93       	push	r22
      f4:	7f 93       	push	r23
      f6:	8f 93       	push	r24
      f8:	9f 93       	push	r25
      fa:	af 93       	push	r26
      fc:	bf 93       	push	r27
      fe:	ef 93       	push	r30
     100:	ff 93       	push	r31
     102:	e0 91 a3 00 	lds	r30, 0x00A3	; 0x8000a3 <GP_IRQ_CALL+0x2>
     106:	f0 91 a4 00 	lds	r31, 0x00A4	; 0x8000a4 <GP_IRQ_CALL+0x3>
     10a:	09 95       	icall
     10c:	ff 91       	pop	r31
     10e:	ef 91       	pop	r30
     110:	bf 91       	pop	r27
     112:	af 91       	pop	r26
     114:	9f 91       	pop	r25
     116:	8f 91       	pop	r24
     118:	7f 91       	pop	r23
     11a:	6f 91       	pop	r22
     11c:	5f 91       	pop	r21
     11e:	4f 91       	pop	r20
     120:	3f 91       	pop	r19
     122:	2f 91       	pop	r18
     124:	0f 90       	pop	r0
     126:	0f be       	out	0x3f, r0	; 63
     128:	0f 90       	pop	r0
     12a:	1f 90       	pop	r1
     12c:	18 95       	reti

0000012e <__vector_3>:
     12e:	1f 92       	push	r1
     130:	0f 92       	push	r0
     132:	0f b6       	in	r0, 0x3f	; 63
     134:	0f 92       	push	r0
     136:	11 24       	eor	r1, r1
     138:	2f 93       	push	r18
     13a:	3f 93       	push	r19
     13c:	4f 93       	push	r20
     13e:	5f 93       	push	r21
     140:	6f 93       	push	r22
     142:	7f 93       	push	r23
     144:	8f 93       	push	r24
     146:	9f 93       	push	r25
     148:	af 93       	push	r26
     14a:	bf 93       	push	r27
     14c:	ef 93       	push	r30
     14e:	ff 93       	push	r31
     150:	e0 91 a5 00 	lds	r30, 0x00A5	; 0x8000a5 <GP_IRQ_CALL+0x4>
     154:	f0 91 a6 00 	lds	r31, 0x00A6	; 0x8000a6 <GP_IRQ_CALL+0x5>
     158:	09 95       	icall
     15a:	ff 91       	pop	r31
     15c:	ef 91       	pop	r30
     15e:	bf 91       	pop	r27
     160:	af 91       	pop	r26
     162:	9f 91       	pop	r25
     164:	8f 91       	pop	r24
     166:	7f 91       	pop	r23
     168:	6f 91       	pop	r22
     16a:	5f 91       	pop	r21
     16c:	4f 91       	pop	r20
     16e:	3f 91       	pop	r19
     170:	2f 91       	pop	r18
     172:	0f 90       	pop	r0
     174:	0f be       	out	0x3f, r0	; 63
     176:	0f 90       	pop	r0
     178:	1f 90       	pop	r1
     17a:	18 95       	reti

0000017c <MCAL_GPIO_Init>:
     17c:	fc 01       	movw	r30, r24
     17e:	db 01       	movw	r26, r22
     180:	11 96       	adiw	r26, 0x01	; 1
     182:	8c 91       	ld	r24, X
     184:	11 97       	sbiw	r26, 0x01	; 1
     186:	81 30       	cpi	r24, 0x01	; 1
     188:	59 f4       	brne	.+22     	; 0x1a0 <MCAL_GPIO_Init+0x24>
     18a:	8c 91       	ld	r24, X
     18c:	80 95       	com	r24
     18e:	91 81       	ldd	r25, Z+1	; 0x01
     190:	89 23       	and	r24, r25
     192:	81 83       	std	Z+1, r24	; 0x01
     194:	8c 91       	ld	r24, X
     196:	80 95       	com	r24
     198:	92 81       	ldd	r25, Z+2	; 0x02
     19a:	89 23       	and	r24, r25
     19c:	82 83       	std	Z+2, r24	; 0x02
     19e:	08 95       	ret
     1a0:	82 30       	cpi	r24, 0x02	; 2
     1a2:	51 f4       	brne	.+20     	; 0x1b8 <MCAL_GPIO_Init+0x3c>
     1a4:	8c 91       	ld	r24, X
     1a6:	80 95       	com	r24
     1a8:	91 81       	ldd	r25, Z+1	; 0x01
     1aa:	89 23       	and	r24, r25
     1ac:	81 83       	std	Z+1, r24	; 0x01
     1ae:	8c 91       	ld	r24, X
     1b0:	92 81       	ldd	r25, Z+2	; 0x02
     1b2:	89 2b       	or	r24, r25
     1b4:	82 83       	std	Z+2, r24	; 0x02
     1b6:	08 95       	ret
     1b8:	8c 91       	ld	r24, X
     1ba:	91 81       	ldd	r25, Z+1	; 0x01
     1bc:	89 2b       	or	r24, r25
     1be:	81 83       	std	Z+1, r24	; 0x01
     1c0:	8c 91       	ld	r24, X
     1c2:	80 95       	com	r24
     1c4:	92 81       	ldd	r25, Z+2	; 0x02
     1c6:	89 23       	and	r24, r25
     1c8:	82 83       	std	Z+2, r24	; 0x02
     1ca:	08 95       	ret

000001cc <MCAL_GPIO_WritePin>:
     1cc:	41 30       	cpi	r20, 0x01	; 1
     1ce:	29 f4       	brne	.+10     	; 0x1da <MCAL_GPIO_WritePin+0xe>
     1d0:	fc 01       	movw	r30, r24
     1d2:	22 81       	ldd	r18, Z+2	; 0x02
     1d4:	62 2b       	or	r22, r18
     1d6:	62 83       	std	Z+2, r22	; 0x02
     1d8:	08 95       	ret
     1da:	41 11       	cpse	r20, r1
     1dc:	05 c0       	rjmp	.+10     	; 0x1e8 <MCAL_GPIO_WritePin+0x1c>
     1de:	60 95       	com	r22
     1e0:	fc 01       	movw	r30, r24
     1e2:	22 81       	ldd	r18, Z+2	; 0x02
     1e4:	62 23       	and	r22, r18
     1e6:	62 83       	std	Z+2, r22	; 0x02
     1e8:	08 95       	ret

000001ea <MCAL_GPIO_WritePort>:
     1ea:	fc 01       	movw	r30, r24
     1ec:	62 83       	std	Z+2, r22	; 0x02
     1ee:	08 95       	ret

000001f0 <MCAL_GPIO_TogglePin>:
     1f0:	fc 01       	movw	r30, r24
     1f2:	22 81       	ldd	r18, Z+2	; 0x02
     1f4:	62 27       	eor	r22, r18
     1f6:	62 83       	std	Z+2, r22	; 0x02
     1f8:	08 95       	ret

000001fa <__vector_19>:
     1fa:	1f 92       	push	r1
     1fc:	0f 92       	push	r0
     1fe:	0f b6       	in	r0, 0x3f	; 63
     200:	0f 92       	push	r0
     202:	11 24       	eor	r1, r1
     204:	2f 93       	push	r18
     206:	3f 93       	push	r19
     208:	4f 93       	push	r20
     20a:	5f 93       	push	r21
     20c:	6f 93       	push	r22
     20e:	7f 93       	push	r23
     210:	8f 93       	push	r24
     212:	9f 93       	push	r25
     214:	af 93       	push	r26
     216:	bf 93       	push	r27
     218:	ef 93       	push	r30
     21a:	ff 93       	push	r31
     21c:	e0 91 88 00 	lds	r30, 0x0088	; 0x800088 <__data_end>
     220:	f0 91 89 00 	lds	r31, 0x0089	; 0x800089 <__data_end+0x1>
     224:	04 80       	ldd	r0, Z+4	; 0x04
     226:	f5 81       	ldd	r31, Z+5	; 0x05
     228:	e0 2d       	mov	r30, r0
     22a:	09 95       	icall
     22c:	ff 91       	pop	r31
     22e:	ef 91       	pop	r30
     230:	bf 91       	pop	r27
     232:	af 91       	pop	r26
     234:	9f 91       	pop	r25
     236:	8f 91       	pop	r24
     238:	7f 91       	pop	r23
     23a:	6f 91       	pop	r22
     23c:	5f 91       	pop	r21
     23e:	4f 91       	pop	r20
     240:	3f 91       	pop	r19
     242:	2f 91       	pop	r18
     244:	0f 90       	pop	r0
     246:	0f be       	out	0x3f, r0	; 63
     248:	0f 90       	pop	r0
     24a:	1f 90       	pop	r1
     24c:	18 95       	reti

0000024e <MCAL_PWM_Init>:
     24e:	ff 92       	push	r15
     250:	0f 93       	push	r16
     252:	1f 93       	push	r17
     254:	cf 93       	push	r28
     256:	df 93       	push	r29
     258:	00 d0       	rcall	.+0      	; 0x25a <MCAL_PWM_Init+0xc>
     25a:	cd b7       	in	r28, 0x3d	; 61
     25c:	de b7       	in	r29, 0x3e	; 62
     25e:	8c 01       	movw	r16, r24
     260:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <g_PWM_Config+0x1>
     264:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <g_PWM_Config>
     268:	fc 01       	movw	r30, r24
     26a:	80 81       	ld	r24, Z
     26c:	f8 2f       	mov	r31, r24
     26e:	f2 60       	ori	r31, 0x02	; 2
     270:	ff 2e       	mov	r15, r31
     272:	88 23       	and	r24, r24
     274:	59 f0       	breq	.+22     	; 0x28c <MCAL_PWM_Init+0x3e>
     276:	80 e2       	ldi	r24, 0x20	; 32
     278:	89 83       	std	Y+1, r24	; 0x01
     27a:	83 e0       	ldi	r24, 0x03	; 3
     27c:	8a 83       	std	Y+2, r24	; 0x02
     27e:	be 01       	movw	r22, r28
     280:	6f 5f       	subi	r22, 0xFF	; 255
     282:	7f 4f       	sbci	r23, 0xFF	; 255
     284:	80 e3       	ldi	r24, 0x30	; 48
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
     28c:	f8 01       	movw	r30, r16
     28e:	81 81       	ldd	r24, Z+1	; 0x01
     290:	f8 2a       	or	r15, r24
     292:	88 23       	and	r24, r24
     294:	59 f0       	breq	.+22     	; 0x2ac <MCAL_PWM_Init+0x5e>
     296:	80 e1       	ldi	r24, 0x10	; 16
     298:	89 83       	std	Y+1, r24	; 0x01
     29a:	83 e0       	ldi	r24, 0x03	; 3
     29c:	8a 83       	std	Y+2, r24	; 0x02
     29e:	be 01       	movw	r22, r28
     2a0:	6f 5f       	subi	r22, 0xFF	; 255
     2a2:	7f 4f       	sbci	r23, 0xFF	; 255
     2a4:	80 e3       	ldi	r24, 0x30	; 48
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
     2ac:	f8 01       	movw	r30, r16
     2ae:	82 81       	ldd	r24, Z+2	; 0x02
     2b0:	88 61       	ori	r24, 0x18	; 24
     2b2:	93 81       	ldd	r25, Z+3	; 0x03
     2b4:	91 30       	cpi	r25, 0x01	; 1
     2b6:	39 f4       	brne	.+14     	; 0x2c6 <MCAL_PWM_Init+0x78>
     2b8:	99 b7       	in	r25, 0x39	; 57
     2ba:	94 60       	ori	r25, 0x04	; 4
     2bc:	99 bf       	out	0x39, r25	; 57
     2be:	9f b7       	in	r25, 0x3f	; 63
     2c0:	90 68       	ori	r25, 0x80	; 128
     2c2:	9f bf       	out	0x3f, r25	; 63
     2c4:	06 c0       	rjmp	.+12     	; 0x2d2 <MCAL_PWM_Init+0x84>
     2c6:	99 b7       	in	r25, 0x39	; 57
     2c8:	9b 7f       	andi	r25, 0xFB	; 251
     2ca:	99 bf       	out	0x39, r25	; 57
     2cc:	9f b7       	in	r25, 0x3f	; 63
     2ce:	9f 77       	andi	r25, 0x7F	; 127
     2d0:	9f bf       	out	0x3f, r25	; 63
     2d2:	f8 01       	movw	r30, r16
     2d4:	94 81       	ldd	r25, Z+4	; 0x04
     2d6:	91 30       	cpi	r25, 0x01	; 1
     2d8:	39 f4       	brne	.+14     	; 0x2e8 <MCAL_PWM_Init+0x9a>
     2da:	99 b7       	in	r25, 0x39	; 57
     2dc:	90 61       	ori	r25, 0x10	; 16
     2de:	99 bf       	out	0x39, r25	; 57
     2e0:	9f b7       	in	r25, 0x3f	; 63
     2e2:	90 68       	ori	r25, 0x80	; 128
     2e4:	9f bf       	out	0x3f, r25	; 63
     2e6:	06 c0       	rjmp	.+12     	; 0x2f4 <MCAL_PWM_Init+0xa6>
     2e8:	99 b7       	in	r25, 0x39	; 57
     2ea:	9f 7e       	andi	r25, 0xEF	; 239
     2ec:	99 bf       	out	0x39, r25	; 57
     2ee:	9f b7       	in	r25, 0x3f	; 63
     2f0:	9f 77       	andi	r25, 0x7F	; 127
     2f2:	9f bf       	out	0x3f, r25	; 63
     2f4:	f8 01       	movw	r30, r16
     2f6:	94 81       	ldd	r25, Z+4	; 0x04
     2f8:	91 30       	cpi	r25, 0x01	; 1
     2fa:	39 f4       	brne	.+14     	; 0x30a <MCAL_PWM_Init+0xbc>
     2fc:	99 b7       	in	r25, 0x39	; 57
     2fe:	90 61       	ori	r25, 0x10	; 16
     300:	99 bf       	out	0x39, r25	; 57
     302:	9f b7       	in	r25, 0x3f	; 63
     304:	90 68       	ori	r25, 0x80	; 128
     306:	9f bf       	out	0x3f, r25	; 63
     308:	06 c0       	rjmp	.+12     	; 0x316 <MCAL_PWM_Init+0xc8>
     30a:	99 b7       	in	r25, 0x39	; 57
     30c:	97 7f       	andi	r25, 0xF7	; 247
     30e:	99 bf       	out	0x39, r25	; 57
     310:	9f b7       	in	r25, 0x3f	; 63
     312:	9f 77       	andi	r25, 0x7F	; 127
     314:	9f bf       	out	0x3f, r25	; 63
     316:	f8 01       	movw	r30, r16
     318:	93 85       	ldd	r25, Z+11	; 0x0b
     31a:	97 bd       	out	0x27, r25	; 39
     31c:	92 85       	ldd	r25, Z+10	; 0x0a
     31e:	96 bd       	out	0x26, r25	; 38
     320:	97 81       	ldd	r25, Z+7	; 0x07
     322:	9b bd       	out	0x2b, r25	; 43
     324:	96 81       	ldd	r25, Z+6	; 0x06
     326:	9a bd       	out	0x2a, r25	; 42
     328:	91 85       	ldd	r25, Z+9	; 0x09
     32a:	99 bd       	out	0x29, r25	; 41
     32c:	90 85       	ldd	r25, Z+8	; 0x08
     32e:	98 bd       	out	0x28, r25	; 40
     330:	9f b5       	in	r25, 0x2f	; 47
     332:	f9 2a       	or	r15, r25
     334:	ff bc       	out	0x2f, r15	; 47
     336:	9e b5       	in	r25, 0x2e	; 46
     338:	89 2b       	or	r24, r25
     33a:	8e bd       	out	0x2e, r24	; 46
     33c:	0f 90       	pop	r0
     33e:	0f 90       	pop	r0
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	1f 91       	pop	r17
     346:	0f 91       	pop	r16
     348:	ff 90       	pop	r15
     34a:	08 95       	ret

0000034c <MCAL_PWM_Set_Compare_Value>:
     34c:	61 11       	cpse	r22, r1
     34e:	03 c0       	rjmp	.+6      	; 0x356 <MCAL_PWM_Set_Compare_Value+0xa>
     350:	9b bd       	out	0x2b, r25	; 43
     352:	8a bd       	out	0x2a, r24	; 42
     354:	08 95       	ret
     356:	99 bd       	out	0x29, r25	; 41
     358:	88 bd       	out	0x28, r24	; 40
     35a:	08 95       	ret

0000035c <__vector_7>:
     35c:	1f 92       	push	r1
     35e:	0f 92       	push	r0
     360:	0f b6       	in	r0, 0x3f	; 63
     362:	0f 92       	push	r0
     364:	11 24       	eor	r1, r1
     366:	2f 93       	push	r18
     368:	3f 93       	push	r19
     36a:	4f 93       	push	r20
     36c:	5f 93       	push	r21
     36e:	6f 93       	push	r22
     370:	7f 93       	push	r23
     372:	8f 93       	push	r24
     374:	9f 93       	push	r25
     376:	af 93       	push	r26
     378:	bf 93       	push	r27
     37a:	ef 93       	push	r30
     37c:	ff 93       	push	r31
     37e:	e0 91 8a 00 	lds	r30, 0x008A	; 0x80008a <g_PWM_Config>
     382:	f0 91 8b 00 	lds	r31, 0x008B	; 0x80008b <g_PWM_Config+0x1>
     386:	06 84       	ldd	r0, Z+14	; 0x0e
     388:	f7 85       	ldd	r31, Z+15	; 0x0f
     38a:	e0 2d       	mov	r30, r0
     38c:	09 95       	icall
     38e:	ff 91       	pop	r31
     390:	ef 91       	pop	r30
     392:	bf 91       	pop	r27
     394:	af 91       	pop	r26
     396:	9f 91       	pop	r25
     398:	8f 91       	pop	r24
     39a:	7f 91       	pop	r23
     39c:	6f 91       	pop	r22
     39e:	5f 91       	pop	r21
     3a0:	4f 91       	pop	r20
     3a2:	3f 91       	pop	r19
     3a4:	2f 91       	pop	r18
     3a6:	0f 90       	pop	r0
     3a8:	0f be       	out	0x3f, r0	; 63
     3aa:	0f 90       	pop	r0
     3ac:	1f 90       	pop	r1
     3ae:	18 95       	reti

000003b0 <__vector_8>:
     3b0:	1f 92       	push	r1
     3b2:	0f 92       	push	r0
     3b4:	0f b6       	in	r0, 0x3f	; 63
     3b6:	0f 92       	push	r0
     3b8:	11 24       	eor	r1, r1
     3ba:	2f 93       	push	r18
     3bc:	3f 93       	push	r19
     3be:	4f 93       	push	r20
     3c0:	5f 93       	push	r21
     3c2:	6f 93       	push	r22
     3c4:	7f 93       	push	r23
     3c6:	8f 93       	push	r24
     3c8:	9f 93       	push	r25
     3ca:	af 93       	push	r26
     3cc:	bf 93       	push	r27
     3ce:	ef 93       	push	r30
     3d0:	ff 93       	push	r31
     3d2:	e0 91 8a 00 	lds	r30, 0x008A	; 0x80008a <g_PWM_Config>
     3d6:	f0 91 8b 00 	lds	r31, 0x008B	; 0x80008b <g_PWM_Config+0x1>
     3da:	00 88       	ldd	r0, Z+16	; 0x10
     3dc:	f1 89       	ldd	r31, Z+17	; 0x11
     3de:	e0 2d       	mov	r30, r0
     3e0:	09 95       	icall
     3e2:	ff 91       	pop	r31
     3e4:	ef 91       	pop	r30
     3e6:	bf 91       	pop	r27
     3e8:	af 91       	pop	r26
     3ea:	9f 91       	pop	r25
     3ec:	8f 91       	pop	r24
     3ee:	7f 91       	pop	r23
     3f0:	6f 91       	pop	r22
     3f2:	5f 91       	pop	r21
     3f4:	4f 91       	pop	r20
     3f6:	3f 91       	pop	r19
     3f8:	2f 91       	pop	r18
     3fa:	0f 90       	pop	r0
     3fc:	0f be       	out	0x3f, r0	; 63
     3fe:	0f 90       	pop	r0
     400:	1f 90       	pop	r1
     402:	18 95       	reti

00000404 <__vector_12>:
     404:	1f 92       	push	r1
     406:	0f 92       	push	r0
     408:	0f b6       	in	r0, 0x3f	; 63
     40a:	0f 92       	push	r0
     40c:	11 24       	eor	r1, r1
     40e:	2f 93       	push	r18
     410:	3f 93       	push	r19
     412:	4f 93       	push	r20
     414:	5f 93       	push	r21
     416:	6f 93       	push	r22
     418:	7f 93       	push	r23
     41a:	8f 93       	push	r24
     41c:	9f 93       	push	r25
     41e:	af 93       	push	r26
     420:	bf 93       	push	r27
     422:	ef 93       	push	r30
     424:	ff 93       	push	r31
     426:	e0 91 8c 00 	lds	r30, 0x008C	; 0x80008c <g_SPI_Config>
     42a:	f0 91 8d 00 	lds	r31, 0x008D	; 0x80008d <g_SPI_Config+0x1>
     42e:	07 80       	ldd	r0, Z+7	; 0x07
     430:	f0 85       	ldd	r31, Z+8	; 0x08
     432:	e0 2d       	mov	r30, r0
     434:	09 95       	icall
     436:	ff 91       	pop	r31
     438:	ef 91       	pop	r30
     43a:	bf 91       	pop	r27
     43c:	af 91       	pop	r26
     43e:	9f 91       	pop	r25
     440:	8f 91       	pop	r24
     442:	7f 91       	pop	r23
     444:	6f 91       	pop	r22
     446:	5f 91       	pop	r21
     448:	4f 91       	pop	r20
     44a:	3f 91       	pop	r19
     44c:	2f 91       	pop	r18
     44e:	0f 90       	pop	r0
     450:	0f be       	out	0x3f, r0	; 63
     452:	0f 90       	pop	r0
     454:	1f 90       	pop	r1
     456:	18 95       	reti

00000458 <__vector_10>:
     458:	1f 92       	push	r1
     45a:	0f 92       	push	r0
     45c:	0f b6       	in	r0, 0x3f	; 63
     45e:	0f 92       	push	r0
     460:	11 24       	eor	r1, r1
     462:	2f 93       	push	r18
     464:	3f 93       	push	r19
     466:	4f 93       	push	r20
     468:	5f 93       	push	r21
     46a:	6f 93       	push	r22
     46c:	7f 93       	push	r23
     46e:	8f 93       	push	r24
     470:	9f 93       	push	r25
     472:	af 93       	push	r26
     474:	bf 93       	push	r27
     476:	ef 93       	push	r30
     478:	ff 93       	push	r31
     47a:	e0 91 8e 00 	lds	r30, 0x008E	; 0x80008e <g_TIM0_Config>
     47e:	f0 91 8f 00 	lds	r31, 0x008F	; 0x80008f <g_TIM0_Config+0x1>
     482:	00 84       	ldd	r0, Z+8	; 0x08
     484:	f1 85       	ldd	r31, Z+9	; 0x09
     486:	e0 2d       	mov	r30, r0
     488:	09 95       	icall
     48a:	ff 91       	pop	r31
     48c:	ef 91       	pop	r30
     48e:	bf 91       	pop	r27
     490:	af 91       	pop	r26
     492:	9f 91       	pop	r25
     494:	8f 91       	pop	r24
     496:	7f 91       	pop	r23
     498:	6f 91       	pop	r22
     49a:	5f 91       	pop	r21
     49c:	4f 91       	pop	r20
     49e:	3f 91       	pop	r19
     4a0:	2f 91       	pop	r18
     4a2:	0f 90       	pop	r0
     4a4:	0f be       	out	0x3f, r0	; 63
     4a6:	0f 90       	pop	r0
     4a8:	1f 90       	pop	r1
     4aa:	18 95       	reti

000004ac <__vector_11>:
     4ac:	1f 92       	push	r1
     4ae:	0f 92       	push	r0
     4b0:	0f b6       	in	r0, 0x3f	; 63
     4b2:	0f 92       	push	r0
     4b4:	11 24       	eor	r1, r1
     4b6:	2f 93       	push	r18
     4b8:	3f 93       	push	r19
     4ba:	4f 93       	push	r20
     4bc:	5f 93       	push	r21
     4be:	6f 93       	push	r22
     4c0:	7f 93       	push	r23
     4c2:	8f 93       	push	r24
     4c4:	9f 93       	push	r25
     4c6:	af 93       	push	r26
     4c8:	bf 93       	push	r27
     4ca:	ef 93       	push	r30
     4cc:	ff 93       	push	r31
     4ce:	e0 91 8e 00 	lds	r30, 0x008E	; 0x80008e <g_TIM0_Config>
     4d2:	f0 91 8f 00 	lds	r31, 0x008F	; 0x80008f <g_TIM0_Config+0x1>
     4d6:	06 80       	ldd	r0, Z+6	; 0x06
     4d8:	f7 81       	ldd	r31, Z+7	; 0x07
     4da:	e0 2d       	mov	r30, r0
     4dc:	09 95       	icall
     4de:	ff 91       	pop	r31
     4e0:	ef 91       	pop	r30
     4e2:	bf 91       	pop	r27
     4e4:	af 91       	pop	r26
     4e6:	9f 91       	pop	r25
     4e8:	8f 91       	pop	r24
     4ea:	7f 91       	pop	r23
     4ec:	6f 91       	pop	r22
     4ee:	5f 91       	pop	r21
     4f0:	4f 91       	pop	r20
     4f2:	3f 91       	pop	r19
     4f4:	2f 91       	pop	r18
     4f6:	0f 90       	pop	r0
     4f8:	0f be       	out	0x3f, r0	; 63
     4fa:	0f 90       	pop	r0
     4fc:	1f 90       	pop	r1
     4fe:	18 95       	reti

00000500 <MCAL_USART_Init>:
     500:	0f 93       	push	r16
     502:	1f 93       	push	r17
     504:	cf 93       	push	r28
     506:	df 93       	push	r29
     508:	00 d0       	rcall	.+0      	; 0x50a <MCAL_USART_Init+0xa>
     50a:	cd b7       	in	r28, 0x3d	; 61
     50c:	de b7       	in	r29, 0x3e	; 62
     50e:	8c 01       	movw	r16, r24
     510:	90 93 91 00 	sts	0x0091, r25	; 0x800091 <g_USART_Config+0x1>
     514:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <g_USART_Config>
     518:	fc 01       	movw	r30, r24
     51a:	82 81       	ldd	r24, Z+2	; 0x02
     51c:	9e ef       	ldi	r25, 0xFE	; 254
     51e:	98 0f       	add	r25, r24
     520:	92 30       	cpi	r25, 0x02	; 2
     522:	b8 f5       	brcc	.+110    	; 0x592 <MCAL_USART_Init+0x92>
     524:	80 b5       	in	r24, 0x20	; 32
     526:	80 68       	ori	r24, 0x80	; 128
     528:	80 bd       	out	0x20, r24	; 32
     52a:	80 b5       	in	r24, 0x20	; 32
     52c:	80 64       	ori	r24, 0x40	; 64
     52e:	80 bd       	out	0x20, r24	; 32
     530:	81 81       	ldd	r24, Z+1	; 0x01
     532:	81 30       	cpi	r24, 0x01	; 1
     534:	41 f4       	brne	.+16     	; 0x546 <MCAL_USART_Init+0x46>
     536:	80 b5       	in	r24, 0x20	; 32
     538:	80 68       	ori	r24, 0x80	; 128
     53a:	80 bd       	out	0x20, r24	; 32
     53c:	90 b5       	in	r25, 0x20	; 32
     53e:	81 81       	ldd	r24, Z+1	; 0x01
     540:	89 2b       	or	r24, r25
     542:	80 bd       	out	0x20, r24	; 32
     544:	0a c0       	rjmp	.+20     	; 0x55a <MCAL_USART_Init+0x5a>
     546:	8e 3f       	cpi	r24, 0xFE	; 254
     548:	41 f4       	brne	.+16     	; 0x55a <MCAL_USART_Init+0x5a>
     54a:	80 b5       	in	r24, 0x20	; 32
     54c:	80 68       	ori	r24, 0x80	; 128
     54e:	80 bd       	out	0x20, r24	; 32
     550:	90 b5       	in	r25, 0x20	; 32
     552:	f8 01       	movw	r30, r16
     554:	81 81       	ldd	r24, Z+1	; 0x01
     556:	89 23       	and	r24, r25
     558:	80 bd       	out	0x20, r24	; 32
     55a:	f8 01       	movw	r30, r16
     55c:	65 81       	ldd	r22, Z+5	; 0x05
     55e:	76 81       	ldd	r23, Z+6	; 0x06
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__floatunsisf>
     568:	9b 01       	movw	r18, r22
     56a:	ac 01       	movw	r20, r24
     56c:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <__addsf3>
     570:	9b 01       	movw	r18, r22
     572:	ac 01       	movw	r20, r24
     574:	60 e0       	ldi	r22, 0x00	; 0
     576:	74 e2       	ldi	r23, 0x24	; 36
     578:	84 ef       	ldi	r24, 0xF4	; 244
     57a:	9a e4       	ldi	r25, 0x4A	; 74
     57c:	0e 94 4d 09 	call	0x129a	; 0x129a <__divsf3>
     580:	20 e0       	ldi	r18, 0x00	; 0
     582:	30 e0       	ldi	r19, 0x00	; 0
     584:	40 e0       	ldi	r20, 0x00	; 0
     586:	5f e3       	ldi	r21, 0x3F	; 63
     588:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__subsf3>
     58c:	0e 94 bf 09 	call	0x137e	; 0x137e <__fixunssfsi>
     590:	4f c0       	rjmp	.+158    	; 0x630 <MCAL_USART_Init+0x130>
     592:	81 11       	cpse	r24, r1
     594:	27 c0       	rjmp	.+78     	; 0x5e4 <MCAL_USART_Init+0xe4>
     596:	80 b5       	in	r24, 0x20	; 32
     598:	80 68       	ori	r24, 0x80	; 128
     59a:	80 bd       	out	0x20, r24	; 32
     59c:	80 b5       	in	r24, 0x20	; 32
     59e:	8f 7b       	andi	r24, 0xBF	; 191
     5a0:	80 bd       	out	0x20, r24	; 32
     5a2:	8b b1       	in	r24, 0x0b	; 11
     5a4:	82 60       	ori	r24, 0x02	; 2
     5a6:	8b b9       	out	0x0b, r24	; 11
     5a8:	f8 01       	movw	r30, r16
     5aa:	65 81       	ldd	r22, Z+5	; 0x05
     5ac:	76 81       	ldd	r23, Z+6	; 0x06
     5ae:	80 e0       	ldi	r24, 0x00	; 0
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__floatunsisf>
     5b6:	20 e0       	ldi	r18, 0x00	; 0
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	40 e0       	ldi	r20, 0x00	; 0
     5bc:	51 e4       	ldi	r21, 0x41	; 65
     5be:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__mulsf3>
     5c2:	9b 01       	movw	r18, r22
     5c4:	ac 01       	movw	r20, r24
     5c6:	60 e0       	ldi	r22, 0x00	; 0
     5c8:	74 e2       	ldi	r23, 0x24	; 36
     5ca:	84 ef       	ldi	r24, 0xF4	; 244
     5cc:	9a e4       	ldi	r25, 0x4A	; 74
     5ce:	0e 94 4d 09 	call	0x129a	; 0x129a <__divsf3>
     5d2:	20 e0       	ldi	r18, 0x00	; 0
     5d4:	30 e0       	ldi	r19, 0x00	; 0
     5d6:	40 e0       	ldi	r20, 0x00	; 0
     5d8:	5f e3       	ldi	r21, 0x3F	; 63
     5da:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__subsf3>
     5de:	0e 94 bf 09 	call	0x137e	; 0x137e <__fixunssfsi>
     5e2:	26 c0       	rjmp	.+76     	; 0x630 <MCAL_USART_Init+0x130>
     5e4:	80 b5       	in	r24, 0x20	; 32
     5e6:	80 68       	ori	r24, 0x80	; 128
     5e8:	80 bd       	out	0x20, r24	; 32
     5ea:	80 b5       	in	r24, 0x20	; 32
     5ec:	8f 7b       	andi	r24, 0xBF	; 191
     5ee:	80 bd       	out	0x20, r24	; 32
     5f0:	8b b1       	in	r24, 0x0b	; 11
     5f2:	8d 7f       	andi	r24, 0xFD	; 253
     5f4:	8b b9       	out	0x0b, r24	; 11
     5f6:	f8 01       	movw	r30, r16
     5f8:	65 81       	ldd	r22, Z+5	; 0x05
     5fa:	76 81       	ldd	r23, Z+6	; 0x06
     5fc:	80 e0       	ldi	r24, 0x00	; 0
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__floatunsisf>
     604:	20 e0       	ldi	r18, 0x00	; 0
     606:	30 e0       	ldi	r19, 0x00	; 0
     608:	40 e8       	ldi	r20, 0x80	; 128
     60a:	51 e4       	ldi	r21, 0x41	; 65
     60c:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__mulsf3>
     610:	9b 01       	movw	r18, r22
     612:	ac 01       	movw	r20, r24
     614:	60 e0       	ldi	r22, 0x00	; 0
     616:	74 e2       	ldi	r23, 0x24	; 36
     618:	84 ef       	ldi	r24, 0xF4	; 244
     61a:	9a e4       	ldi	r25, 0x4A	; 74
     61c:	0e 94 4d 09 	call	0x129a	; 0x129a <__divsf3>
     620:	20 e0       	ldi	r18, 0x00	; 0
     622:	30 e0       	ldi	r19, 0x00	; 0
     624:	40 e0       	ldi	r20, 0x00	; 0
     626:	5f e3       	ldi	r21, 0x3F	; 63
     628:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__subsf3>
     62c:	0e 94 bf 09 	call	0x137e	; 0x137e <__fixunssfsi>
     630:	f8 01       	movw	r30, r16
     632:	83 81       	ldd	r24, Z+3	; 0x03
     634:	83 30       	cpi	r24, 0x03	; 3
     636:	11 f1       	breq	.+68     	; 0x67c <MCAL_USART_Init+0x17c>
     638:	28 f4       	brcc	.+10     	; 0x644 <MCAL_USART_Init+0x144>
     63a:	81 30       	cpi	r24, 0x01	; 1
     63c:	41 f0       	breq	.+16     	; 0x64e <MCAL_USART_Init+0x14e>
     63e:	82 30       	cpi	r24, 0x02	; 2
     640:	81 f0       	breq	.+32     	; 0x662 <MCAL_USART_Init+0x162>
     642:	3c c0       	rjmp	.+120    	; 0x6bc <MCAL_USART_Init+0x1bc>
     644:	84 30       	cpi	r24, 0x04	; 4
     646:	39 f1       	breq	.+78     	; 0x696 <MCAL_USART_Init+0x196>
     648:	85 30       	cpi	r24, 0x05	; 5
     64a:	79 f1       	breq	.+94     	; 0x6aa <MCAL_USART_Init+0x1aa>
     64c:	37 c0       	rjmp	.+110    	; 0x6bc <MCAL_USART_Init+0x1bc>
     64e:	8a b1       	in	r24, 0x0a	; 10
     650:	8b 7f       	andi	r24, 0xFB	; 251
     652:	8a b9       	out	0x0a, r24	; 10
     654:	80 b5       	in	r24, 0x20	; 32
     656:	80 68       	ori	r24, 0x80	; 128
     658:	80 bd       	out	0x20, r24	; 32
     65a:	80 b5       	in	r24, 0x20	; 32
     65c:	89 7f       	andi	r24, 0xF9	; 249
     65e:	80 bd       	out	0x20, r24	; 32
     660:	2d c0       	rjmp	.+90     	; 0x6bc <MCAL_USART_Init+0x1bc>
     662:	8a b1       	in	r24, 0x0a	; 10
     664:	8b 7f       	andi	r24, 0xFB	; 251
     666:	8a b9       	out	0x0a, r24	; 10
     668:	80 b5       	in	r24, 0x20	; 32
     66a:	80 68       	ori	r24, 0x80	; 128
     66c:	80 bd       	out	0x20, r24	; 32
     66e:	80 b5       	in	r24, 0x20	; 32
     670:	89 7f       	andi	r24, 0xF9	; 249
     672:	80 bd       	out	0x20, r24	; 32
     674:	80 b5       	in	r24, 0x20	; 32
     676:	82 60       	ori	r24, 0x02	; 2
     678:	80 bd       	out	0x20, r24	; 32
     67a:	20 c0       	rjmp	.+64     	; 0x6bc <MCAL_USART_Init+0x1bc>
     67c:	8a b1       	in	r24, 0x0a	; 10
     67e:	8b 7f       	andi	r24, 0xFB	; 251
     680:	8a b9       	out	0x0a, r24	; 10
     682:	80 b5       	in	r24, 0x20	; 32
     684:	80 68       	ori	r24, 0x80	; 128
     686:	80 bd       	out	0x20, r24	; 32
     688:	80 b5       	in	r24, 0x20	; 32
     68a:	89 7f       	andi	r24, 0xF9	; 249
     68c:	80 bd       	out	0x20, r24	; 32
     68e:	80 b5       	in	r24, 0x20	; 32
     690:	84 60       	ori	r24, 0x04	; 4
     692:	80 bd       	out	0x20, r24	; 32
     694:	13 c0       	rjmp	.+38     	; 0x6bc <MCAL_USART_Init+0x1bc>
     696:	8a b1       	in	r24, 0x0a	; 10
     698:	8b 7f       	andi	r24, 0xFB	; 251
     69a:	8a b9       	out	0x0a, r24	; 10
     69c:	80 b5       	in	r24, 0x20	; 32
     69e:	80 68       	ori	r24, 0x80	; 128
     6a0:	80 bd       	out	0x20, r24	; 32
     6a2:	80 b5       	in	r24, 0x20	; 32
     6a4:	86 60       	ori	r24, 0x06	; 6
     6a6:	80 bd       	out	0x20, r24	; 32
     6a8:	09 c0       	rjmp	.+18     	; 0x6bc <MCAL_USART_Init+0x1bc>
     6aa:	8a b1       	in	r24, 0x0a	; 10
     6ac:	84 60       	ori	r24, 0x04	; 4
     6ae:	8a b9       	out	0x0a, r24	; 10
     6b0:	80 b5       	in	r24, 0x20	; 32
     6b2:	80 68       	ori	r24, 0x80	; 128
     6b4:	80 bd       	out	0x20, r24	; 32
     6b6:	80 b5       	in	r24, 0x20	; 32
     6b8:	86 60       	ori	r24, 0x06	; 6
     6ba:	80 bd       	out	0x20, r24	; 32
     6bc:	f8 01       	movw	r30, r16
     6be:	84 81       	ldd	r24, Z+4	; 0x04
     6c0:	88 30       	cpi	r24, 0x08	; 8
     6c2:	51 f0       	breq	.+20     	; 0x6d8 <MCAL_USART_Init+0x1d8>
     6c4:	87 3f       	cpi	r24, 0xF7	; 247
     6c6:	81 f4       	brne	.+32     	; 0x6e8 <MCAL_USART_Init+0x1e8>
     6c8:	80 b5       	in	r24, 0x20	; 32
     6ca:	80 68       	ori	r24, 0x80	; 128
     6cc:	80 bd       	out	0x20, r24	; 32
     6ce:	90 b5       	in	r25, 0x20	; 32
     6d0:	84 81       	ldd	r24, Z+4	; 0x04
     6d2:	89 23       	and	r24, r25
     6d4:	80 bd       	out	0x20, r24	; 32
     6d6:	08 c0       	rjmp	.+16     	; 0x6e8 <MCAL_USART_Init+0x1e8>
     6d8:	80 b5       	in	r24, 0x20	; 32
     6da:	80 68       	ori	r24, 0x80	; 128
     6dc:	80 bd       	out	0x20, r24	; 32
     6de:	90 b5       	in	r25, 0x20	; 32
     6e0:	f8 01       	movw	r30, r16
     6e2:	84 81       	ldd	r24, Z+4	; 0x04
     6e4:	89 2b       	or	r24, r25
     6e6:	80 bd       	out	0x20, r24	; 32
     6e8:	f8 01       	movw	r30, r16
     6ea:	87 81       	ldd	r24, Z+7	; 0x07
     6ec:	80 33       	cpi	r24, 0x30	; 48
     6ee:	b9 f0       	breq	.+46     	; 0x71e <MCAL_USART_Init+0x21e>
     6f0:	8f 3c       	cpi	r24, 0xCF	; 207
     6f2:	19 f0       	breq	.+6      	; 0x6fa <MCAL_USART_Init+0x1fa>
     6f4:	80 32       	cpi	r24, 0x20	; 32
     6f6:	d9 f4       	brne	.+54     	; 0x72e <MCAL_USART_Init+0x22e>
     6f8:	09 c0       	rjmp	.+18     	; 0x70c <MCAL_USART_Init+0x20c>
     6fa:	80 b5       	in	r24, 0x20	; 32
     6fc:	80 68       	ori	r24, 0x80	; 128
     6fe:	80 bd       	out	0x20, r24	; 32
     700:	90 b5       	in	r25, 0x20	; 32
     702:	f8 01       	movw	r30, r16
     704:	87 81       	ldd	r24, Z+7	; 0x07
     706:	89 23       	and	r24, r25
     708:	80 bd       	out	0x20, r24	; 32
     70a:	11 c0       	rjmp	.+34     	; 0x72e <MCAL_USART_Init+0x22e>
     70c:	80 b5       	in	r24, 0x20	; 32
     70e:	80 68       	ori	r24, 0x80	; 128
     710:	80 bd       	out	0x20, r24	; 32
     712:	90 b5       	in	r25, 0x20	; 32
     714:	f8 01       	movw	r30, r16
     716:	87 81       	ldd	r24, Z+7	; 0x07
     718:	89 2b       	or	r24, r25
     71a:	80 bd       	out	0x20, r24	; 32
     71c:	08 c0       	rjmp	.+16     	; 0x72e <MCAL_USART_Init+0x22e>
     71e:	80 b5       	in	r24, 0x20	; 32
     720:	80 68       	ori	r24, 0x80	; 128
     722:	80 bd       	out	0x20, r24	; 32
     724:	90 b5       	in	r25, 0x20	; 32
     726:	f8 01       	movw	r30, r16
     728:	87 81       	ldd	r24, Z+7	; 0x07
     72a:	89 2b       	or	r24, r25
     72c:	80 bd       	out	0x20, r24	; 32
     72e:	80 b5       	in	r24, 0x20	; 32
     730:	8f 77       	andi	r24, 0x7F	; 127
     732:	80 bd       	out	0x20, r24	; 32
     734:	70 bd       	out	0x20, r23	; 32
     736:	69 b9       	out	0x09, r22	; 9
     738:	f8 01       	movw	r30, r16
     73a:	80 85       	ldd	r24, Z+8	; 0x08
     73c:	81 30       	cpi	r24, 0x01	; 1
     73e:	69 f0       	breq	.+26     	; 0x75a <MCAL_USART_Init+0x25a>
     740:	28 f0       	brcs	.+10     	; 0x74c <MCAL_USART_Init+0x24c>
     742:	82 30       	cpi	r24, 0x02	; 2
     744:	c1 f0       	breq	.+48     	; 0x776 <MCAL_USART_Init+0x276>
     746:	83 30       	cpi	r24, 0x03	; 3
     748:	21 f1       	breq	.+72     	; 0x792 <MCAL_USART_Init+0x292>
     74a:	30 c0       	rjmp	.+96     	; 0x7ac <MCAL_USART_Init+0x2ac>
     74c:	8a b1       	in	r24, 0x0a	; 10
     74e:	8f 71       	andi	r24, 0x1F	; 31
     750:	8a b9       	out	0x0a, r24	; 10
     752:	8f b7       	in	r24, 0x3f	; 63
     754:	8f 77       	andi	r24, 0x7F	; 127
     756:	8f bf       	out	0x3f, r24	; 63
     758:	29 c0       	rjmp	.+82     	; 0x7ac <MCAL_USART_Init+0x2ac>
     75a:	f8 01       	movw	r30, r16
     75c:	81 85       	ldd	r24, Z+9	; 0x09
     75e:	92 85       	ldd	r25, Z+10	; 0x0a
     760:	90 93 a8 00 	sts	0x00A8, r25	; 0x8000a8 <GPU_IRQ_CALL+0x1>
     764:	80 93 a7 00 	sts	0x00A7, r24	; 0x8000a7 <GPU_IRQ_CALL>
     768:	8a b1       	in	r24, 0x0a	; 10
     76a:	80 64       	ori	r24, 0x40	; 64
     76c:	8a b9       	out	0x0a, r24	; 10
     76e:	8f b7       	in	r24, 0x3f	; 63
     770:	80 68       	ori	r24, 0x80	; 128
     772:	8f bf       	out	0x3f, r24	; 63
     774:	1b c0       	rjmp	.+54     	; 0x7ac <MCAL_USART_Init+0x2ac>
     776:	f8 01       	movw	r30, r16
     778:	81 85       	ldd	r24, Z+9	; 0x09
     77a:	92 85       	ldd	r25, Z+10	; 0x0a
     77c:	90 93 aa 00 	sts	0x00AA, r25	; 0x8000aa <GPU_IRQ_CALL+0x3>
     780:	80 93 a9 00 	sts	0x00A9, r24	; 0x8000a9 <GPU_IRQ_CALL+0x2>
     784:	8a b1       	in	r24, 0x0a	; 10
     786:	80 62       	ori	r24, 0x20	; 32
     788:	8a b9       	out	0x0a, r24	; 10
     78a:	8f b7       	in	r24, 0x3f	; 63
     78c:	80 68       	ori	r24, 0x80	; 128
     78e:	8f bf       	out	0x3f, r24	; 63
     790:	0d c0       	rjmp	.+26     	; 0x7ac <MCAL_USART_Init+0x2ac>
     792:	f8 01       	movw	r30, r16
     794:	81 85       	ldd	r24, Z+9	; 0x09
     796:	92 85       	ldd	r25, Z+10	; 0x0a
     798:	90 93 ac 00 	sts	0x00AC, r25	; 0x8000ac <GPU_IRQ_CALL+0x5>
     79c:	80 93 ab 00 	sts	0x00AB, r24	; 0x8000ab <GPU_IRQ_CALL+0x4>
     7a0:	8a b1       	in	r24, 0x0a	; 10
     7a2:	80 68       	ori	r24, 0x80	; 128
     7a4:	8a b9       	out	0x0a, r24	; 10
     7a6:	8f b7       	in	r24, 0x3f	; 63
     7a8:	80 68       	ori	r24, 0x80	; 128
     7aa:	8f bf       	out	0x3f, r24	; 63
     7ac:	f8 01       	movw	r30, r16
     7ae:	80 81       	ld	r24, Z
     7b0:	9a b1       	in	r25, 0x0a	; 10
     7b2:	89 2b       	or	r24, r25
     7b4:	8a b9       	out	0x0a, r24	; 10
     7b6:	e0 91 90 00 	lds	r30, 0x0090	; 0x800090 <g_USART_Config>
     7ba:	f0 91 91 00 	lds	r31, 0x0091	; 0x800091 <g_USART_Config+0x1>
     7be:	82 81       	ldd	r24, Z+2	; 0x02
     7c0:	82 30       	cpi	r24, 0x02	; 2
     7c2:	61 f4       	brne	.+24     	; 0x7dc <MCAL_USART_Init+0x2dc>
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	89 83       	std	Y+1, r24	; 0x01
     7c8:	83 e0       	ldi	r24, 0x03	; 3
     7ca:	8a 83       	std	Y+2, r24	; 0x02
     7cc:	be 01       	movw	r22, r28
     7ce:	6f 5f       	subi	r22, 0xFF	; 255
     7d0:	7f 4f       	sbci	r23, 0xFF	; 255
     7d2:	86 e3       	ldi	r24, 0x36	; 54
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
     7da:	0d c0       	rjmp	.+26     	; 0x7f6 <MCAL_USART_Init+0x2f6>
     7dc:	83 30       	cpi	r24, 0x03	; 3
     7de:	59 f4       	brne	.+22     	; 0x7f6 <MCAL_USART_Init+0x2f6>
     7e0:	81 e0       	ldi	r24, 0x01	; 1
     7e2:	89 83       	std	Y+1, r24	; 0x01
     7e4:	82 e0       	ldi	r24, 0x02	; 2
     7e6:	8a 83       	std	Y+2, r24	; 0x02
     7e8:	be 01       	movw	r22, r28
     7ea:	6f 5f       	subi	r22, 0xFF	; 255
     7ec:	7f 4f       	sbci	r23, 0xFF	; 255
     7ee:	86 e3       	ldi	r24, 0x36	; 54
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
     7f6:	0f 90       	pop	r0
     7f8:	0f 90       	pop	r0
     7fa:	df 91       	pop	r29
     7fc:	cf 91       	pop	r28
     7fe:	1f 91       	pop	r17
     800:	0f 91       	pop	r16
     802:	08 95       	ret

00000804 <MCAL_USART_ReceiveData>:
     804:	61 11       	cpse	r22, r1
     806:	15 c0       	rjmp	.+42     	; 0x832 <MCAL_USART_ReceiveData+0x2e>
     808:	5f 9b       	sbis	0x0b, 7	; 11
     80a:	fe cf       	rjmp	.-4      	; 0x808 <MCAL_USART_ReceiveData+0x4>
     80c:	e0 91 90 00 	lds	r30, 0x0090	; 0x800090 <g_USART_Config>
     810:	f0 91 91 00 	lds	r31, 0x0091	; 0x800091 <g_USART_Config+0x1>
     814:	23 81       	ldd	r18, Z+3	; 0x03
     816:	25 30       	cpi	r18, 0x05	; 5
     818:	31 f4       	brne	.+12     	; 0x826 <MCAL_USART_ReceiveData+0x22>
     81a:	2a b1       	in	r18, 0x0a	; 10
     81c:	26 95       	lsr	r18
     81e:	21 70       	andi	r18, 0x01	; 1
     820:	fc 01       	movw	r30, r24
     822:	10 82       	st	Z, r1
     824:	21 83       	std	Z+1, r18	; 0x01
     826:	2c b1       	in	r18, 0x0c	; 12
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	fc 01       	movw	r30, r24
     82c:	31 83       	std	Z+1, r19	; 0x01
     82e:	20 83       	st	Z, r18
     830:	08 95       	ret
     832:	5f 9b       	sbis	0x0b, 7	; 11
     834:	12 c0       	rjmp	.+36     	; 0x85a <MCAL_USART_ReceiveData+0x56>
     836:	e0 91 90 00 	lds	r30, 0x0090	; 0x800090 <g_USART_Config>
     83a:	f0 91 91 00 	lds	r31, 0x0091	; 0x800091 <g_USART_Config+0x1>
     83e:	23 81       	ldd	r18, Z+3	; 0x03
     840:	25 30       	cpi	r18, 0x05	; 5
     842:	31 f4       	brne	.+12     	; 0x850 <MCAL_USART_ReceiveData+0x4c>
     844:	2a b1       	in	r18, 0x0a	; 10
     846:	26 95       	lsr	r18
     848:	21 70       	andi	r18, 0x01	; 1
     84a:	fc 01       	movw	r30, r24
     84c:	10 82       	st	Z, r1
     84e:	21 83       	std	Z+1, r18	; 0x01
     850:	2c b1       	in	r18, 0x0c	; 12
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	fc 01       	movw	r30, r24
     856:	31 83       	std	Z+1, r19	; 0x01
     858:	20 83       	st	Z, r18
     85a:	08 95       	ret

0000085c <__vector_13>:
     85c:	1f 92       	push	r1
     85e:	0f 92       	push	r0
     860:	0f b6       	in	r0, 0x3f	; 63
     862:	0f 92       	push	r0
     864:	11 24       	eor	r1, r1
     866:	2f 93       	push	r18
     868:	3f 93       	push	r19
     86a:	4f 93       	push	r20
     86c:	5f 93       	push	r21
     86e:	6f 93       	push	r22
     870:	7f 93       	push	r23
     872:	8f 93       	push	r24
     874:	9f 93       	push	r25
     876:	af 93       	push	r26
     878:	bf 93       	push	r27
     87a:	ef 93       	push	r30
     87c:	ff 93       	push	r31
     87e:	e0 91 ab 00 	lds	r30, 0x00AB	; 0x8000ab <GPU_IRQ_CALL+0x4>
     882:	f0 91 ac 00 	lds	r31, 0x00AC	; 0x8000ac <GPU_IRQ_CALL+0x5>
     886:	09 95       	icall
     888:	ff 91       	pop	r31
     88a:	ef 91       	pop	r30
     88c:	bf 91       	pop	r27
     88e:	af 91       	pop	r26
     890:	9f 91       	pop	r25
     892:	8f 91       	pop	r24
     894:	7f 91       	pop	r23
     896:	6f 91       	pop	r22
     898:	5f 91       	pop	r21
     89a:	4f 91       	pop	r20
     89c:	3f 91       	pop	r19
     89e:	2f 91       	pop	r18
     8a0:	0f 90       	pop	r0
     8a2:	0f be       	out	0x3f, r0	; 63
     8a4:	0f 90       	pop	r0
     8a6:	1f 90       	pop	r1
     8a8:	18 95       	reti

000008aa <__vector_14>:
     8aa:	1f 92       	push	r1
     8ac:	0f 92       	push	r0
     8ae:	0f b6       	in	r0, 0x3f	; 63
     8b0:	0f 92       	push	r0
     8b2:	11 24       	eor	r1, r1
     8b4:	2f 93       	push	r18
     8b6:	3f 93       	push	r19
     8b8:	4f 93       	push	r20
     8ba:	5f 93       	push	r21
     8bc:	6f 93       	push	r22
     8be:	7f 93       	push	r23
     8c0:	8f 93       	push	r24
     8c2:	9f 93       	push	r25
     8c4:	af 93       	push	r26
     8c6:	bf 93       	push	r27
     8c8:	ef 93       	push	r30
     8ca:	ff 93       	push	r31
     8cc:	e0 91 a9 00 	lds	r30, 0x00A9	; 0x8000a9 <GPU_IRQ_CALL+0x2>
     8d0:	f0 91 aa 00 	lds	r31, 0x00AA	; 0x8000aa <GPU_IRQ_CALL+0x3>
     8d4:	09 95       	icall
     8d6:	ff 91       	pop	r31
     8d8:	ef 91       	pop	r30
     8da:	bf 91       	pop	r27
     8dc:	af 91       	pop	r26
     8de:	9f 91       	pop	r25
     8e0:	8f 91       	pop	r24
     8e2:	7f 91       	pop	r23
     8e4:	6f 91       	pop	r22
     8e6:	5f 91       	pop	r21
     8e8:	4f 91       	pop	r20
     8ea:	3f 91       	pop	r19
     8ec:	2f 91       	pop	r18
     8ee:	0f 90       	pop	r0
     8f0:	0f be       	out	0x3f, r0	; 63
     8f2:	0f 90       	pop	r0
     8f4:	1f 90       	pop	r1
     8f6:	18 95       	reti

000008f8 <__vector_15>:
     8f8:	1f 92       	push	r1
     8fa:	0f 92       	push	r0
     8fc:	0f b6       	in	r0, 0x3f	; 63
     8fe:	0f 92       	push	r0
     900:	11 24       	eor	r1, r1
     902:	2f 93       	push	r18
     904:	3f 93       	push	r19
     906:	4f 93       	push	r20
     908:	5f 93       	push	r21
     90a:	6f 93       	push	r22
     90c:	7f 93       	push	r23
     90e:	8f 93       	push	r24
     910:	9f 93       	push	r25
     912:	af 93       	push	r26
     914:	bf 93       	push	r27
     916:	ef 93       	push	r30
     918:	ff 93       	push	r31
     91a:	e0 91 a7 00 	lds	r30, 0x00A7	; 0x8000a7 <GPU_IRQ_CALL>
     91e:	f0 91 a8 00 	lds	r31, 0x00A8	; 0x8000a8 <GPU_IRQ_CALL+0x1>
     922:	09 95       	icall
     924:	ff 91       	pop	r31
     926:	ef 91       	pop	r30
     928:	bf 91       	pop	r27
     92a:	af 91       	pop	r26
     92c:	9f 91       	pop	r25
     92e:	8f 91       	pop	r24
     930:	7f 91       	pop	r23
     932:	6f 91       	pop	r22
     934:	5f 91       	pop	r21
     936:	4f 91       	pop	r20
     938:	3f 91       	pop	r19
     93a:	2f 91       	pop	r18
     93c:	0f 90       	pop	r0
     93e:	0f be       	out	0x3f, r0	; 63
     940:	0f 90       	pop	r0
     942:	1f 90       	pop	r1
     944:	18 95       	reti

00000946 <SEG_Init>:
#include "SEG.h"

uint8_t num[11]={126,96,182,158,204,218,250,14,254,222};

void SEG_Init(void)
{
     946:	1f 93       	push	r17
     948:	cf 93       	push	r28
     94a:	df 93       	push	r29
     94c:	00 d0       	rcall	.+0      	; 0x94e <SEG_Init+0x8>
     94e:	cd b7       	in	r28, 0x3d	; 61
     950:	de b7       	in	r29, 0x3e	; 62
	GPIO_Pinconfig_t GPIO_Conf ;
	GPIO_Conf.pinNumber = GPIO_PIN_1 ;
     952:	82 e0       	ldi	r24, 0x02	; 2
     954:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     956:	13 e0       	ldi	r17, 0x03	; 3
     958:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOA , &GPIO_Conf ) ;
     95a:	be 01       	movw	r22, r28
     95c:	6f 5f       	subi	r22, 0xFF	; 255
     95e:	7f 4f       	sbci	r23, 0xFF	; 255
     960:	89 e3       	ldi	r24, 0x39	; 57
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_2 ;
     968:	84 e0       	ldi	r24, 0x04	; 4
     96a:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     96c:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOA , &GPIO_Conf ) ;
     96e:	be 01       	movw	r22, r28
     970:	6f 5f       	subi	r22, 0xFF	; 255
     972:	7f 4f       	sbci	r23, 0xFF	; 255
     974:	89 e3       	ldi	r24, 0x39	; 57
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_3 ;
     97c:	88 e0       	ldi	r24, 0x08	; 8
     97e:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     980:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOA , &GPIO_Conf ) ;
     982:	be 01       	movw	r22, r28
     984:	6f 5f       	subi	r22, 0xFF	; 255
     986:	7f 4f       	sbci	r23, 0xFF	; 255
     988:	89 e3       	ldi	r24, 0x39	; 57
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_4 ;
     990:	80 e1       	ldi	r24, 0x10	; 16
     992:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     994:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOA , &GPIO_Conf ) ;
     996:	be 01       	movw	r22, r28
     998:	6f 5f       	subi	r22, 0xFF	; 255
     99a:	7f 4f       	sbci	r23, 0xFF	; 255
     99c:	89 e3       	ldi	r24, 0x39	; 57
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_5 ;
     9a4:	80 e2       	ldi	r24, 0x20	; 32
     9a6:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     9a8:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOA , &GPIO_Conf ) ;
     9aa:	be 01       	movw	r22, r28
     9ac:	6f 5f       	subi	r22, 0xFF	; 255
     9ae:	7f 4f       	sbci	r23, 0xFF	; 255
     9b0:	89 e3       	ldi	r24, 0x39	; 57
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_6 ;
     9b8:	80 e4       	ldi	r24, 0x40	; 64
     9ba:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     9bc:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOA , &GPIO_Conf ) ;
     9be:	be 01       	movw	r22, r28
     9c0:	6f 5f       	subi	r22, 0xFF	; 255
     9c2:	7f 4f       	sbci	r23, 0xFF	; 255
     9c4:	89 e3       	ldi	r24, 0x39	; 57
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_7 ;
     9cc:	80 e8       	ldi	r24, 0x80	; 128
     9ce:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     9d0:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOA , &GPIO_Conf ) ;
     9d2:	be 01       	movw	r22, r28
     9d4:	6f 5f       	subi	r22, 0xFF	; 255
     9d6:	7f 4f       	sbci	r23, 0xFF	; 255
     9d8:	89 e3       	ldi	r24, 0x39	; 57
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
}
     9e0:	0f 90       	pop	r0
     9e2:	0f 90       	pop	r0
     9e4:	df 91       	pop	r29
     9e6:	cf 91       	pop	r28
     9e8:	1f 91       	pop	r17
     9ea:	08 95       	ret

000009ec <SEG_Display>:

void SEG_Display(uint8_t Num)
{
	uint8_t Number;
	Number = num[Num];
     9ec:	e8 2f       	mov	r30, r24
     9ee:	f0 e0       	ldi	r31, 0x00	; 0
     9f0:	e0 5a       	subi	r30, 0xA0	; 160
     9f2:	ff 4f       	sbci	r31, 0xFF	; 255
     9f4:	60 81       	ld	r22, Z
	MCAL_GPIO_WritePort(GPIOA,Number);
     9f6:	89 e3       	ldi	r24, 0x39	; 57
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	0e 94 f5 00 	call	0x1ea	; 0x1ea <MCAL_GPIO_WritePort>
     9fe:	08 95       	ret

00000a00 <MOTOR_Init>:

#include "DC_MOTOR.h"

uint16_t TOP=0;
void MOTOR_Init(void) 
{
     a00:	cf 93       	push	r28
     a02:	df 93       	push	r29
     a04:	cd b7       	in	r28, 0x3d	; 61
     a06:	de b7       	in	r29, 0x3e	; 62
     a08:	62 97       	sbiw	r28, 0x12	; 18
     a0a:	0f b6       	in	r0, 0x3f	; 63
     a0c:	f8 94       	cli
     a0e:	de bf       	out	0x3e, r29	; 62
     a10:	0f be       	out	0x3f, r0	; 63
     a12:	cd bf       	out	0x3d, r28	; 61
		PWM_config_t PWM_Config ;
		PWM_Config.Compare_Value_CH_B = 0 ;
     a14:	1a 86       	std	Y+10, r1	; 0x0a
     a16:	19 86       	std	Y+9, r1	; 0x09
		PWM_Config.Compare_Value_CH_A = 0 ;
     a18:	18 86       	std	Y+8, r1	; 0x08
     a1a:	1f 82       	std	Y+7, r1	; 0x07
		PWM_Config.Output_Compare_pin_A = PWM_Output_Compare_pin_A_Clear_At_Compare_Value_Set_At_TOP ;
     a1c:	80 e8       	ldi	r24, 0x80	; 128
     a1e:	89 83       	std	Y+1, r24	; 0x01
		PWM_Config.Output_Compare_pin_B = PWM_Output_Compare_pin_B_Disable ;
     a20:	1a 82       	std	Y+2, r1	; 0x02
		PWM_Config.Clock_Source = PWM_Clock_Source_clk_64 ;
     a22:	83 e0       	ldi	r24, 0x03	; 3
     a24:	8b 83       	std	Y+3, r24	; 0x03
		PWM_Config.TOP_Value = (uint16_t)((F_CPU/(64*50))-1) ;
     a26:	83 ec       	ldi	r24, 0xC3	; 195
     a28:	99 e0       	ldi	r25, 0x09	; 9
     a2a:	9c 87       	std	Y+12, r25	; 0x0c
     a2c:	8b 87       	std	Y+11, r24	; 0x0b
		PWM_Config.OCIE1A_EN = PWM_OCIE1A_ENABLE_Disable ;
     a2e:	1d 82       	std	Y+5, r1	; 0x05
		PWM_Config.OCIE1B_EN = PWM_OCIE1B_ENABLE_Disable ;
     a30:	1e 82       	std	Y+6, r1	; 0x06
		PWM_Config.TOIE1_EN = PWM_TOIE1_ENABLE_Disable ;
     a32:	1c 82       	std	Y+4, r1	; 0x04
		PWM_Config.P_OCIE1A_CALL = NULL ;
     a34:	18 8a       	std	Y+16, r1	; 0x10
     a36:	1f 86       	std	Y+15, r1	; 0x0f
		PWM_Config.P_OCIE1B_CALL = NULL ;
     a38:	1a 8a       	std	Y+18, r1	; 0x12
     a3a:	19 8a       	std	Y+17, r1	; 0x11
		PWM_Config.P_TOIE1_CALL = NULL ;
     a3c:	1e 86       	std	Y+14, r1	; 0x0e
     a3e:	1d 86       	std	Y+13, r1	; 0x0d
		MCAL_PWM_Init(&PWM_Config) ;
     a40:	ce 01       	movw	r24, r28
     a42:	01 96       	adiw	r24, 0x01	; 1
     a44:	0e 94 27 01 	call	0x24e	; 0x24e <MCAL_PWM_Init>
		TOP = PWM_Config.TOP_Value+1;
     a48:	8b 85       	ldd	r24, Y+11	; 0x0b
     a4a:	9c 85       	ldd	r25, Y+12	; 0x0c
     a4c:	01 96       	adiw	r24, 0x01	; 1
     a4e:	90 93 93 00 	sts	0x0093, r25	; 0x800093 <TOP+0x1>
     a52:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <TOP>
}
     a56:	62 96       	adiw	r28, 0x12	; 18
     a58:	0f b6       	in	r0, 0x3f	; 63
     a5a:	f8 94       	cli
     a5c:	de bf       	out	0x3e, r29	; 62
     a5e:	0f be       	out	0x3f, r0	; 63
     a60:	cd bf       	out	0x3d, r28	; 61
     a62:	df 91       	pop	r29
     a64:	cf 91       	pop	r28
     a66:	08 95       	ret

00000a68 <MOTOR_Speed>:

void MOTOR_Speed(uint8_t speed) 
{
     a68:	48 2f       	mov	r20, r24
	uint16_t Compare_Value=0 ;
	Compare_Value=TOP;
     a6a:	e0 91 92 00 	lds	r30, 0x0092	; 0x800092 <TOP>
     a6e:	f0 91 93 00 	lds	r31, 0x0093	; 0x800093 <TOP+0x1>
	Compare_Value /=5;
     a72:	9f 01       	movw	r18, r30
     a74:	ad ec       	ldi	r26, 0xCD	; 205
     a76:	bc ec       	ldi	r27, 0xCC	; 204
     a78:	0e 94 e9 0a 	call	0x15d2	; 0x15d2 <__umulhisi3>
     a7c:	96 95       	lsr	r25
     a7e:	87 95       	ror	r24
     a80:	96 95       	lsr	r25
     a82:	87 95       	ror	r24
	if (speed==0)
     a84:	41 11       	cpse	r20, r1
     a86:	06 c0       	rjmp	.+12     	; 0xa94 <MOTOR_Speed+0x2c>
	{
		Compare_Value = (TOP*speed);
     a88:	4e 9f       	mul	r20, r30
     a8a:	c0 01       	movw	r24, r0
     a8c:	4f 9f       	mul	r20, r31
     a8e:	90 0d       	add	r25, r0
     a90:	11 24       	eor	r1, r1
     a92:	07 c0       	rjmp	.+14     	; 0xaa2 <MOTOR_Speed+0x3a>
	}
	else
	{
		Compare_Value = (Compare_Value*speed)-1;
     a94:	48 9f       	mul	r20, r24
     a96:	90 01       	movw	r18, r0
     a98:	49 9f       	mul	r20, r25
     a9a:	30 0d       	add	r19, r0
     a9c:	11 24       	eor	r1, r1
     a9e:	c9 01       	movw	r24, r18
     aa0:	01 97       	sbiw	r24, 0x01	; 1
	}
	MCAL_PWM_Set_Compare_Value(Compare_Value,A) ;
     aa2:	60 e0       	ldi	r22, 0x00	; 0
     aa4:	0e 94 a6 01 	call	0x34c	; 0x34c <MCAL_PWM_Set_Compare_Value>
     aa8:	08 95       	ret

00000aaa <Bluetooth_Init>:


//to finish the sending process you must send #
void Bluetooth_TX_Str(uint8_t* PTXBuffer) 
{
	MCAL_USART_Send_String(PTXBuffer , Enable);
     aaa:	e4 e9       	ldi	r30, 0x94	; 148
     aac:	f0 e0       	ldi	r31, 0x00	; 0
     aae:	20 e8       	ldi	r18, 0x80	; 128
     ab0:	35 e2       	ldi	r19, 0x25	; 37
     ab2:	36 83       	std	Z+6, r19	; 0x06
     ab4:	25 83       	std	Z+5, r18	; 0x05
     ab6:	9e ef       	ldi	r25, 0xFE	; 254
     ab8:	91 83       	std	Z+1, r25	; 0x01
     aba:	91 e0       	ldi	r25, 0x01	; 1
     abc:	92 83       	std	Z+2, r25	; 0x02
     abe:	81 11       	cpse	r24, r1
     ac0:	07 c0       	rjmp	.+14     	; 0xad0 <Bluetooth_Init+0x26>
     ac2:	83 e0       	ldi	r24, 0x03	; 3
     ac4:	80 87       	std	Z+8, r24	; 0x08
     ac6:	83 e3       	ldi	r24, 0x33	; 51
     ac8:	97 e0       	ldi	r25, 0x07	; 7
     aca:	92 87       	std	Z+10, r25	; 0x0a
     acc:	81 87       	std	Z+9, r24	; 0x09
     ace:	05 c0       	rjmp	.+10     	; 0xada <Bluetooth_Init+0x30>
     ad0:	e4 e9       	ldi	r30, 0x94	; 148
     ad2:	f0 e0       	ldi	r31, 0x00	; 0
     ad4:	10 86       	std	Z+8, r1	; 0x08
     ad6:	12 86       	std	Z+10, r1	; 0x0a
     ad8:	11 86       	std	Z+9, r1	; 0x09
     ada:	e4 e9       	ldi	r30, 0x94	; 148
     adc:	f0 e0       	ldi	r31, 0x00	; 0
     ade:	88 e1       	ldi	r24, 0x18	; 24
     ae0:	80 83       	st	Z, r24
     ae2:	84 e0       	ldi	r24, 0x04	; 4
     ae4:	83 83       	std	Z+3, r24	; 0x03
     ae6:	87 ef       	ldi	r24, 0xF7	; 247
     ae8:	84 83       	std	Z+4, r24	; 0x04
     aea:	8f ec       	ldi	r24, 0xCF	; 207
     aec:	87 83       	std	Z+7, r24	; 0x07
     aee:	cf 01       	movw	r24, r30
     af0:	0e 94 80 02 	call	0x500	; 0x500 <MCAL_USART_Init>
     af4:	08 95       	ret

00000af6 <Bluetooth_RX_Byte>:
}


void Bluetooth_RX_Byte(uint8_t* PRXBuffer) 
{
	MCAL_USART_ReceiveData(PRXBuffer,Enable);
     af6:	60 e0       	ldi	r22, 0x00	; 0
     af8:	0e 94 02 04 	call	0x804	; 0x804 <MCAL_USART_ReceiveData>
     afc:	08 95       	ret

00000afe <LCD_cmd>:
	_delay_ms(2);
#endif
}

void LCD_cmd( unsigned char cmd )
{
     afe:	cf 93       	push	r28
     b00:	c8 2f       	mov	r28, r24
	_delay_us(1);       
	MCAL_GPIO_WritePin( lcd_control_Port , en , GPIO_PIN_RESET ) ;               
	_delay_us(200);
#endif
#ifdef _4_bit_mode
	MCAL_GPIO_WritePort(lcd_Data_Port, (cmd & 0XF0));
     b02:	68 2f       	mov	r22, r24
     b04:	60 7f       	andi	r22, 0xF0	; 240
     b06:	86 e3       	ldi	r24, 0x36	; 54
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <MCAL_GPIO_WritePort>
	MCAL_GPIO_WritePin(lcd_control_Port,rs,GPIO_PIN_RESET);            // rs=0 i.e select command reg
     b0e:	40 e0       	ldi	r20, 0x00	; 0
     b10:	62 e0       	ldi	r22, 0x02	; 2
     b12:	86 e3       	ldi	r24, 0x36	; 54
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
	MCAL_GPIO_WritePin(lcd_control_Port,RW,GPIO_PIN_RESET);					 // R/W=0 i.e MODE Write
     b1a:	40 e0       	ldi	r20, 0x00	; 0
     b1c:	68 e0       	ldi	r22, 0x08	; 8
     b1e:	86 e3       	ldi	r24, 0x36	; 54
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
	MCAL_GPIO_WritePin(lcd_control_Port,en,GPIO_PIN_SET);					// give high pulse to enable pin
     b26:	41 e0       	ldi	r20, 0x01	; 1
     b28:	64 e0       	ldi	r22, 0x04	; 4
     b2a:	86 e3       	ldi	r24, 0x36	; 54
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b32:	82 e0       	ldi	r24, 0x02	; 2
     b34:	8a 95       	dec	r24
     b36:	f1 f7       	brne	.-4      	; 0xb34 <LCD_cmd+0x36>
     b38:	00 c0       	rjmp	.+0      	; 0xb3a <LCD_cmd+0x3c>
	_delay_us(1);
	MCAL_GPIO_WritePin(lcd_control_Port,en,GPIO_PIN_RESET);				 // give low pulse to enable pin
     b3a:	40 e0       	ldi	r20, 0x00	; 0
     b3c:	64 e0       	ldi	r22, 0x04	; 4
     b3e:	86 e3       	ldi	r24, 0x36	; 54
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
     b46:	8f e8       	ldi	r24, 0x8F	; 143
     b48:	91 e0       	ldi	r25, 0x01	; 1
     b4a:	01 97       	sbiw	r24, 0x01	; 1
     b4c:	f1 f7       	brne	.-4      	; 0xb4a <LCD_cmd+0x4c>
     b4e:	00 c0       	rjmp	.+0      	; 0xb50 <LCD_cmd+0x52>
     b50:	00 00       	nop
	_delay_us(200);
	MCAL_GPIO_WritePort(lcd_Data_Port, ( cmd & 0X0F) << 4);               //sending lower nibble of 8 bit 
     b52:	90 e1       	ldi	r25, 0x10	; 16
     b54:	c9 9f       	mul	r28, r25
     b56:	b0 01       	movw	r22, r0
     b58:	11 24       	eor	r1, r1
     b5a:	86 e3       	ldi	r24, 0x36	; 54
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <MCAL_GPIO_WritePort>
	MCAL_GPIO_WritePin(lcd_control_Port,rs,GPIO_PIN_RESET);            // rs=0 i.e select command reg
     b62:	40 e0       	ldi	r20, 0x00	; 0
     b64:	62 e0       	ldi	r22, 0x02	; 2
     b66:	86 e3       	ldi	r24, 0x36	; 54
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
	MCAL_GPIO_WritePin(lcd_control_Port,RW,GPIO_PIN_RESET);					 // R/W=0 i.e MODE Write
     b6e:	40 e0       	ldi	r20, 0x00	; 0
     b70:	68 e0       	ldi	r22, 0x08	; 8
     b72:	86 e3       	ldi	r24, 0x36	; 54
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
	MCAL_GPIO_WritePin(lcd_control_Port,en,GPIO_PIN_SET);					// give high pulse to enable pin
     b7a:	41 e0       	ldi	r20, 0x01	; 1
     b7c:	64 e0       	ldi	r22, 0x04	; 4
     b7e:	86 e3       	ldi	r24, 0x36	; 54
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
     b86:	82 e0       	ldi	r24, 0x02	; 2
     b88:	8a 95       	dec	r24
     b8a:	f1 f7       	brne	.-4      	; 0xb88 <LCD_cmd+0x8a>
     b8c:	00 c0       	rjmp	.+0      	; 0xb8e <LCD_cmd+0x90>
	_delay_us(1);
	MCAL_GPIO_WritePin(lcd_control_Port,en,GPIO_PIN_RESET);				 // give low pulse to enable pin
     b8e:	40 e0       	ldi	r20, 0x00	; 0
     b90:	64 e0       	ldi	r22, 0x04	; 4
     b92:	86 e3       	ldi	r24, 0x36	; 54
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b9a:	8f e9       	ldi	r24, 0x9F	; 159
     b9c:	9f e0       	ldi	r25, 0x0F	; 15
     b9e:	01 97       	sbiw	r24, 0x01	; 1
     ba0:	f1 f7       	brne	.-4      	; 0xb9e <LCD_cmd+0xa0>
     ba2:	00 c0       	rjmp	.+0      	; 0xba4 <LCD_cmd+0xa6>
     ba4:	00 00       	nop
	_delay_ms(2);
#endif
}
     ba6:	cf 91       	pop	r28
     ba8:	08 95       	ret

00000baa <LCD_init>:
#include "LCD.h"

#define _4_bit_mode

void LCD_init(void)
{
     baa:	ef 92       	push	r14
     bac:	ff 92       	push	r15
     bae:	0f 93       	push	r16
     bb0:	1f 93       	push	r17
     bb2:	cf 93       	push	r28
     bb4:	df 93       	push	r29
     bb6:	00 d0       	rcall	.+0      	; 0xbb8 <LCD_init+0xe>
     bb8:	cd b7       	in	r28, 0x3d	; 61
     bba:	de b7       	in	r29, 0x3e	; 62
	GPIO_Pinconfig_t config ;
		
	// set port lcd_data as output
	config.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     bbc:	13 e0       	ldi	r17, 0x03	; 3
     bbe:	1a 83       	std	Y+2, r17	; 0x02
	config.pinNumber = GPIO_PIN_0 ;
     bc0:	81 e0       	ldi	r24, 0x01	; 1
     bc2:	89 83       	std	Y+1, r24	; 0x01
	MCAL_GPIO_Init( lcd_Data_Direction , & config ) ;
     bc4:	be 01       	movw	r22, r28
     bc6:	6f 5f       	subi	r22, 0xFF	; 255
     bc8:	7f 4f       	sbci	r23, 0xFF	; 255
     bca:	86 e3       	ldi	r24, 0x36	; 54
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
		
	config.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     bd2:	1a 83       	std	Y+2, r17	; 0x02
	config.pinNumber = GPIO_PIN_1 ;
     bd4:	68 94       	set
     bd6:	ff 24       	eor	r15, r15
     bd8:	f1 f8       	bld	r15, 1
     bda:	f9 82       	std	Y+1, r15	; 0x01
	MCAL_GPIO_Init( lcd_Data_Direction , & config ) ;
     bdc:	be 01       	movw	r22, r28
     bde:	6f 5f       	subi	r22, 0xFF	; 255
     be0:	7f 4f       	sbci	r23, 0xFF	; 255
     be2:	86 e3       	ldi	r24, 0x36	; 54
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
				
	config.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     bea:	1a 83       	std	Y+2, r17	; 0x02
	config.pinNumber = GPIO_PIN_2 ;
     bec:	68 94       	set
     bee:	ee 24       	eor	r14, r14
     bf0:	e2 f8       	bld	r14, 2
     bf2:	e9 82       	std	Y+1, r14	; 0x01
	MCAL_GPIO_Init( lcd_Data_Direction , & config ) ;
     bf4:	be 01       	movw	r22, r28
     bf6:	6f 5f       	subi	r22, 0xFF	; 255
     bf8:	7f 4f       	sbci	r23, 0xFF	; 255
     bfa:	86 e3       	ldi	r24, 0x36	; 54
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
						
	config.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     c02:	1a 83       	std	Y+2, r17	; 0x02
	config.pinNumber = GPIO_PIN_3 ;
     c04:	08 e0       	ldi	r16, 0x08	; 8
     c06:	09 83       	std	Y+1, r16	; 0x01
	MCAL_GPIO_Init( lcd_Data_Direction , & config ) ;
     c08:	be 01       	movw	r22, r28
     c0a:	6f 5f       	subi	r22, 0xFF	; 255
     c0c:	7f 4f       	sbci	r23, 0xFF	; 255
     c0e:	86 e3       	ldi	r24, 0x36	; 54
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
								
	config.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     c16:	1a 83       	std	Y+2, r17	; 0x02
	config.pinNumber = GPIO_PIN_4 ;
     c18:	80 e1       	ldi	r24, 0x10	; 16
     c1a:	89 83       	std	Y+1, r24	; 0x01
	MCAL_GPIO_Init( lcd_Data_Direction , & config ) ;
     c1c:	be 01       	movw	r22, r28
     c1e:	6f 5f       	subi	r22, 0xFF	; 255
     c20:	7f 4f       	sbci	r23, 0xFF	; 255
     c22:	86 e3       	ldi	r24, 0x36	; 54
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
										
	config.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     c2a:	1a 83       	std	Y+2, r17	; 0x02
	config.pinNumber = GPIO_PIN_5 ;
     c2c:	80 e2       	ldi	r24, 0x20	; 32
     c2e:	89 83       	std	Y+1, r24	; 0x01
	MCAL_GPIO_Init( lcd_Data_Direction , & config ) ;
     c30:	be 01       	movw	r22, r28
     c32:	6f 5f       	subi	r22, 0xFF	; 255
     c34:	7f 4f       	sbci	r23, 0xFF	; 255
     c36:	86 e3       	ldi	r24, 0x36	; 54
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
												
	config.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     c3e:	1a 83       	std	Y+2, r17	; 0x02
	config.pinNumber = GPIO_PIN_6 ;
     c40:	80 e4       	ldi	r24, 0x40	; 64
     c42:	89 83       	std	Y+1, r24	; 0x01
	MCAL_GPIO_Init( lcd_Data_Direction , & config ) ;
     c44:	be 01       	movw	r22, r28
     c46:	6f 5f       	subi	r22, 0xFF	; 255
     c48:	7f 4f       	sbci	r23, 0xFF	; 255
     c4a:	86 e3       	ldi	r24, 0x36	; 54
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
														
	config.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     c52:	1a 83       	std	Y+2, r17	; 0x02
	config.pinNumber = GPIO_PIN_7 ;
     c54:	80 e8       	ldi	r24, 0x80	; 128
     c56:	89 83       	std	Y+1, r24	; 0x01
	MCAL_GPIO_Init( lcd_Data_Direction , & config ) ;
     c58:	be 01       	movw	r22, r28
     c5a:	6f 5f       	subi	r22, 0xFF	; 255
     c5c:	7f 4f       	sbci	r23, 0xFF	; 255
     c5e:	86 e3       	ldi	r24, 0x36	; 54
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	// set en rs rw as output
	config.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     c66:	1a 83       	std	Y+2, r17	; 0x02
	config.pinNumber = en ;
     c68:	e9 82       	std	Y+1, r14	; 0x01
	MCAL_GPIO_Init( lcd_control_Direction , & config ) ;
     c6a:	be 01       	movw	r22, r28
     c6c:	6f 5f       	subi	r22, 0xFF	; 255
     c6e:	7f 4f       	sbci	r23, 0xFF	; 255
     c70:	86 e3       	ldi	r24, 0x36	; 54
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	config.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     c78:	1a 83       	std	Y+2, r17	; 0x02
	config.pinNumber = rs ;
     c7a:	f9 82       	std	Y+1, r15	; 0x01
	MCAL_GPIO_Init( lcd_control_Direction , & config ) ;
     c7c:	be 01       	movw	r22, r28
     c7e:	6f 5f       	subi	r22, 0xFF	; 255
     c80:	7f 4f       	sbci	r23, 0xFF	; 255
     c82:	86 e3       	ldi	r24, 0x36	; 54
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	config.GPIO_MODE =  GPIO_MODE_OUTPUT ;
     c8a:	1a 83       	std	Y+2, r17	; 0x02
	config.pinNumber = RW ;
     c8c:	09 83       	std	Y+1, r16	; 0x01
	MCAL_GPIO_Init( lcd_control_Direction , & config ) ;
     c8e:	be 01       	movw	r22, r28
     c90:	6f 5f       	subi	r22, 0xFF	; 255
     c92:	7f 4f       	sbci	r23, 0xFF	; 255
     c94:	86 e3       	ldi	r24, 0x36	; 54
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
     c9c:	8f e3       	ldi	r24, 0x3F	; 63
     c9e:	9c e9       	ldi	r25, 0x9C	; 156
     ca0:	01 97       	sbiw	r24, 0x01	; 1
     ca2:	f1 f7       	brne	.-4      	; 0xca0 <LCD_init+0xf6>
     ca4:	00 c0       	rjmp	.+0      	; 0xca6 <LCD_init+0xfc>
     ca6:	00 00       	nop
	LCD_cmd(Entry_Mode);                        // take cursor to next position "shift cursor to right"
	LCD_cmd(Clear_Display);                    // Clear display screen
	_delay_ms(2);
#endif
#ifdef _4_bit_mode
	LCD_cmd(0x02);                // send for 4 bit initialization of LCD "shift cursor to left"
     ca8:	82 e0       	ldi	r24, 0x02	; 2
     caa:	0e 94 7f 05 	call	0xafe	; 0xafe <LCD_cmd>
	LCD_cmd(_2L_4b);                              // 2 line 5*7 matrix in 4-bit mode
     cae:	88 e2       	ldi	r24, 0x28	; 40
     cb0:	0e 94 7f 05 	call	0xafe	; 0xafe <LCD_cmd>
	LCD_cmd(Entry_Mode);                        // take cursor to next position "shift cursor to right"
     cb4:	86 e0       	ldi	r24, 0x06	; 6
     cb6:	0e 94 7f 05 	call	0xafe	; 0xafe <LCD_cmd>
	LCD_cmd(beginning_of_the_first_line);
     cba:	80 e8       	ldi	r24, 0x80	; 128
     cbc:	0e 94 7f 05 	call	0xafe	; 0xafe <LCD_cmd>
	LCD_cmd(Display_on_Cursor_off);              // Display on cursor off
     cc0:	8c e0       	ldi	r24, 0x0C	; 12
     cc2:	0e 94 7f 05 	call	0xafe	; 0xafe <LCD_cmd>
	LCD_cmd(Clear_Display);                    // Clear display screen
     cc6:	81 e0       	ldi	r24, 0x01	; 1
     cc8:	0e 94 7f 05 	call	0xafe	; 0xafe <LCD_cmd>
     ccc:	8f e9       	ldi	r24, 0x9F	; 159
     cce:	9f e0       	ldi	r25, 0x0F	; 15
     cd0:	01 97       	sbiw	r24, 0x01	; 1
     cd2:	f1 f7       	brne	.-4      	; 0xcd0 <LCD_init+0x126>
     cd4:	00 c0       	rjmp	.+0      	; 0xcd6 <LCD_init+0x12c>
     cd6:	00 00       	nop
	_delay_ms(2);
#endif
}
     cd8:	0f 90       	pop	r0
     cda:	0f 90       	pop	r0
     cdc:	df 91       	pop	r29
     cde:	cf 91       	pop	r28
     ce0:	1f 91       	pop	r17
     ce2:	0f 91       	pop	r16
     ce4:	ff 90       	pop	r15
     ce6:	ef 90       	pop	r14
     ce8:	08 95       	ret

00000cea <lcd_Clear>:
#endif
}

void lcd_Clear()
{
	LCD_cmd (0x01);                   // send hex 01 to Clear display
     cea:	81 e0       	ldi	r24, 0x01	; 1
     cec:	0e 94 7f 05 	call	0xafe	; 0xafe <LCD_cmd>
     cf0:	8f e9       	ldi	r24, 0x9F	; 159
     cf2:	9f e0       	ldi	r25, 0x0F	; 15
     cf4:	01 97       	sbiw	r24, 0x01	; 1
     cf6:	f1 f7       	brne	.-4      	; 0xcf4 <lcd_Clear+0xa>
     cf8:	00 c0       	rjmp	.+0      	; 0xcfa <lcd_Clear+0x10>
     cfa:	00 00       	nop
	_delay_ms(2);
	LCD_cmd(0x80);                   // send hex 80 to Force Cursor to beginning of 1st line
     cfc:	80 e8       	ldi	r24, 0x80	; 128
     cfe:	0e 94 7f 05 	call	0xafe	; 0xafe <LCD_cmd>
     d02:	08 95       	ret

00000d04 <GOTO_XY>:
}

void GOTO_XY(unsigned char line , unsigned char posision)
{
	if (line==0)
     d04:	81 11       	cpse	r24, r1
     d06:	07 c0       	rjmp	.+14     	; 0xd16 <GOTO_XY+0x12>
	{
		if(posision>=0 && posision<16)
     d08:	60 31       	cpi	r22, 0x10	; 16
     d0a:	68 f4       	brcc	.+26     	; 0xd26 <GOTO_XY+0x22>
			LCD_cmd(0X80+posision);
     d0c:	80 e8       	ldi	r24, 0x80	; 128
     d0e:	86 0f       	add	r24, r22
     d10:	0e 94 7f 05 	call	0xafe	; 0xafe <LCD_cmd>
     d14:	08 95       	ret
	}
	else if (line==1)
     d16:	81 30       	cpi	r24, 0x01	; 1
     d18:	31 f4       	brne	.+12     	; 0xd26 <GOTO_XY+0x22>
	{
		if(posision>=0 && posision<16)
     d1a:	60 31       	cpi	r22, 0x10	; 16
     d1c:	20 f4       	brcc	.+8      	; 0xd26 <GOTO_XY+0x22>
			LCD_cmd(0XC0+posision);
     d1e:	80 ec       	ldi	r24, 0xC0	; 192
     d20:	86 0f       	add	r24, r22
     d22:	0e 94 7f 05 	call	0xafe	; 0xafe <LCD_cmd>
     d26:	08 95       	ret

00000d28 <LCD_Character>:
	}
}

void LCD_Character( unsigned char character )
{
     d28:	cf 93       	push	r28
     d2a:	c8 2f       	mov	r28, r24
	_delay_us(1);
	MCAL_GPIO_WritePin( lcd_control_Port , en , GPIO_PIN_RESET ) ;
	_delay_ms(2);
#endif
#ifdef _4_bit_mode
	MCAL_GPIO_WritePort(lcd_Data_Port, (character & 0XF0));
     d2c:	68 2f       	mov	r22, r24
     d2e:	60 7f       	andi	r22, 0xF0	; 240
     d30:	86 e3       	ldi	r24, 0x36	; 54
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	0e 94 f5 00 	call	0x1ea	; 0x1ea <MCAL_GPIO_WritePort>
	MCAL_GPIO_WritePin(lcd_control_Port,rs,GPIO_PIN_SET);            // rs=0 i.e select DATA reg
     d38:	41 e0       	ldi	r20, 0x01	; 1
     d3a:	62 e0       	ldi	r22, 0x02	; 2
     d3c:	86 e3       	ldi	r24, 0x36	; 54
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
	MCAL_GPIO_WritePin(lcd_control_Port,RW,GPIO_PIN_RESET);					 // R/W=0 i.e MODE Write
     d44:	40 e0       	ldi	r20, 0x00	; 0
     d46:	68 e0       	ldi	r22, 0x08	; 8
     d48:	86 e3       	ldi	r24, 0x36	; 54
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
	MCAL_GPIO_WritePin(lcd_control_Port,en,GPIO_PIN_SET);					// give high pulse to enable pin
     d50:	41 e0       	ldi	r20, 0x01	; 1
     d52:	64 e0       	ldi	r22, 0x04	; 4
     d54:	86 e3       	ldi	r24, 0x36	; 54
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d5c:	82 e0       	ldi	r24, 0x02	; 2
     d5e:	8a 95       	dec	r24
     d60:	f1 f7       	brne	.-4      	; 0xd5e <LCD_Character+0x36>
     d62:	00 c0       	rjmp	.+0      	; 0xd64 <LCD_Character+0x3c>
	_delay_us(1);
	MCAL_GPIO_WritePin(lcd_control_Port,en,GPIO_PIN_RESET);				 // give low pulse to enable pin
     d64:	40 e0       	ldi	r20, 0x00	; 0
     d66:	64 e0       	ldi	r22, 0x04	; 4
     d68:	86 e3       	ldi	r24, 0x36	; 54
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
     d70:	8f e8       	ldi	r24, 0x8F	; 143
     d72:	91 e0       	ldi	r25, 0x01	; 1
     d74:	01 97       	sbiw	r24, 0x01	; 1
     d76:	f1 f7       	brne	.-4      	; 0xd74 <LCD_Character+0x4c>
     d78:	00 c0       	rjmp	.+0      	; 0xd7a <LCD_Character+0x52>
     d7a:	00 00       	nop
	_delay_us(200);
	MCAL_GPIO_WritePort(lcd_Data_Port, ( character & 0X0F) << 4);               //sending lower nibble of 8 bit i.e 1byte
     d7c:	90 e1       	ldi	r25, 0x10	; 16
     d7e:	c9 9f       	mul	r28, r25
     d80:	b0 01       	movw	r22, r0
     d82:	11 24       	eor	r1, r1
     d84:	86 e3       	ldi	r24, 0x36	; 54
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	0e 94 f5 00 	call	0x1ea	; 0x1ea <MCAL_GPIO_WritePort>
	MCAL_GPIO_WritePin(lcd_control_Port,rs,GPIO_PIN_SET);            // rs=0 i.e select DATA reg
     d8c:	41 e0       	ldi	r20, 0x01	; 1
     d8e:	62 e0       	ldi	r22, 0x02	; 2
     d90:	86 e3       	ldi	r24, 0x36	; 54
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
	MCAL_GPIO_WritePin(lcd_control_Port,RW,GPIO_PIN_RESET);					 // R/W=0 i.e MODE Write
     d98:	40 e0       	ldi	r20, 0x00	; 0
     d9a:	68 e0       	ldi	r22, 0x08	; 8
     d9c:	86 e3       	ldi	r24, 0x36	; 54
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
	MCAL_GPIO_WritePin(lcd_control_Port,en,GPIO_PIN_SET);					// give high pulse to enable pin
     da4:	41 e0       	ldi	r20, 0x01	; 1
     da6:	64 e0       	ldi	r22, 0x04	; 4
     da8:	86 e3       	ldi	r24, 0x36	; 54
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
     db0:	82 e0       	ldi	r24, 0x02	; 2
     db2:	8a 95       	dec	r24
     db4:	f1 f7       	brne	.-4      	; 0xdb2 <LCD_Character+0x8a>
     db6:	00 c0       	rjmp	.+0      	; 0xdb8 <LCD_Character+0x90>
	_delay_us(1);
	MCAL_GPIO_WritePin(lcd_control_Port,en,GPIO_PIN_RESET);				 // give low pulse to enable pin
     db8:	40 e0       	ldi	r20, 0x00	; 0
     dba:	64 e0       	ldi	r22, 0x04	; 4
     dbc:	86 e3       	ldi	r24, 0x36	; 54
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     dc4:	8f e9       	ldi	r24, 0x9F	; 159
     dc6:	9f e0       	ldi	r25, 0x0F	; 15
     dc8:	01 97       	sbiw	r24, 0x01	; 1
     dca:	f1 f7       	brne	.-4      	; 0xdc8 <LCD_Character+0xa0>
     dcc:	00 c0       	rjmp	.+0      	; 0xdce <LCD_Character+0xa6>
     dce:	00 00       	nop
	_delay_ms(2);
#endif
}
     dd0:	cf 91       	pop	r28
     dd2:	08 95       	ret

00000dd4 <LCD_String>:

void LCD_String (char *string)
{
     dd4:	0f 93       	push	r16
     dd6:	1f 93       	push	r17
     dd8:	cf 93       	push	r28
     dda:	df 93       	push	r29
     ddc:	8c 01       	movw	r16, r24
	int count=0;
     dde:	c0 e0       	ldi	r28, 0x00	; 0
     de0:	d0 e0       	ldi	r29, 0x00	; 0
	while(*string)
     de2:	21 c0       	rjmp	.+66     	; 0xe26 <LCD_String+0x52>
	{
		count++;
     de4:	21 96       	adiw	r28, 0x01	; 1
		LCD_Character(*string++);
     de6:	0f 5f       	subi	r16, 0xFF	; 255
     de8:	1f 4f       	sbci	r17, 0xFF	; 255
     dea:	0e 94 94 06 	call	0xd28	; 0xd28 <LCD_Character>
		if (count==16)
     dee:	c0 31       	cpi	r28, 0x10	; 16
     df0:	d1 05       	cpc	r29, r1
     df2:	29 f4       	brne	.+10     	; 0xdfe <LCD_String+0x2a>
		{
			GOTO_XY(1,0);
     df4:	60 e0       	ldi	r22, 0x00	; 0
     df6:	81 e0       	ldi	r24, 0x01	; 1
     df8:	0e 94 82 06 	call	0xd04	; 0xd04 <GOTO_XY>
     dfc:	14 c0       	rjmp	.+40     	; 0xe26 <LCD_String+0x52>
		}
		else if(count==32)
     dfe:	c0 32       	cpi	r28, 0x20	; 32
     e00:	d1 05       	cpc	r29, r1
     e02:	89 f4       	brne	.+34     	; 0xe26 <LCD_String+0x52>
     e04:	2f ef       	ldi	r18, 0xFF	; 255
     e06:	84 e3       	ldi	r24, 0x34	; 52
     e08:	9c e0       	ldi	r25, 0x0C	; 12
     e0a:	21 50       	subi	r18, 0x01	; 1
     e0c:	80 40       	sbci	r24, 0x00	; 0
     e0e:	90 40       	sbci	r25, 0x00	; 0
     e10:	e1 f7       	brne	.-8      	; 0xe0a <LCD_String+0x36>
     e12:	00 c0       	rjmp	.+0      	; 0xe14 <LCD_String+0x40>
     e14:	00 00       	nop
		{
			_delay_ms(500);
			lcd_Clear();
     e16:	0e 94 75 06 	call	0xcea	; 0xcea <lcd_Clear>
			GOTO_XY(0,0);
     e1a:	60 e0       	ldi	r22, 0x00	; 0
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	0e 94 82 06 	call	0xd04	; 0xd04 <GOTO_XY>
			count=0;
     e22:	c0 e0       	ldi	r28, 0x00	; 0
     e24:	d0 e0       	ldi	r29, 0x00	; 0
}

void LCD_String (char *string)
{
	int count=0;
	while(*string)
     e26:	f8 01       	movw	r30, r16
     e28:	80 81       	ld	r24, Z
     e2a:	81 11       	cpse	r24, r1
     e2c:	db cf       	rjmp	.-74     	; 0xde4 <LCD_String+0x10>
			lcd_Clear();
			GOTO_XY(0,0);
			count=0;
		}
	}
     e2e:	df 91       	pop	r29
     e30:	cf 91       	pop	r28
     e32:	1f 91       	pop	r17
     e34:	0f 91       	pop	r16
     e36:	08 95       	ret

00000e38 <__vector_9>:
long count1=0,count2=0;
double distance;
int TimerOverflow = 0;
void __vector_9 (void) __attribute__((signal));
void __vector_9 (void)
{
     e38:	1f 92       	push	r1
     e3a:	0f 92       	push	r0
     e3c:	0f b6       	in	r0, 0x3f	; 63
     e3e:	0f 92       	push	r0
     e40:	11 24       	eor	r1, r1
     e42:	8f 93       	push	r24
     e44:	9f 93       	push	r25
	TimerOverflow++;
     e46:	80 91 9f 00 	lds	r24, 0x009F	; 0x80009f <TimerOverflow>
     e4a:	90 91 a0 00 	lds	r25, 0x00A0	; 0x8000a0 <TimerOverflow+0x1>
     e4e:	01 96       	adiw	r24, 0x01	; 1
     e50:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <TimerOverflow+0x1>
     e54:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <TimerOverflow>
}
     e58:	9f 91       	pop	r25
     e5a:	8f 91       	pop	r24
     e5c:	0f 90       	pop	r0
     e5e:	0f be       	out	0x3f, r0	; 63
     e60:	0f 90       	pop	r0
     e62:	1f 90       	pop	r1
     e64:	18 95       	reti

00000e66 <ISR_Bluetooth>:
unsigned char Data;
unsigned char DATA;

void ISR_Bluetooth (void)
{
	Bluetooth_RX_Byte(&Data);
     e66:	8e ea       	ldi	r24, 0xAE	; 174
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <Bluetooth_RX_Byte>
	if(Data =='B')
     e6e:	80 91 ae 00 	lds	r24, 0x00AE	; 0x8000ae <Data>
     e72:	82 34       	cpi	r24, 0x42	; 66
     e74:	f9 f4       	brne	.+62     	; 0xeb4 <ISR_Bluetooth+0x4e>
	{
		lcd_Clear();
     e76:	0e 94 75 06 	call	0xcea	; 0xcea <lcd_Clear>
		LCD_String("BACK");
     e7a:	8b e6       	ldi	r24, 0x6B	; 107
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <LCD_String>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_4 , SET) ;
     e82:	41 e0       	ldi	r20, 0x01	; 1
     e84:	60 e1       	ldi	r22, 0x10	; 16
     e86:	83 e3       	ldi	r24, 0x33	; 51
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_5 , RESET) ;
     e8e:	40 e0       	ldi	r20, 0x00	; 0
     e90:	60 e2       	ldi	r22, 0x20	; 32
     e92:	83 e3       	ldi	r24, 0x33	; 51
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_6 , SET) ;
     e9a:	41 e0       	ldi	r20, 0x01	; 1
     e9c:	60 e4       	ldi	r22, 0x40	; 64
     e9e:	83 e3       	ldi	r24, 0x33	; 51
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_7 , RESET) ;
     ea6:	40 e0       	ldi	r20, 0x00	; 0
     ea8:	60 e8       	ldi	r22, 0x80	; 128
     eaa:	83 e3       	ldi	r24, 0x33	; 51
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
     eb2:	08 95       	ret
	}
	else if(Data =='F')
     eb4:	86 34       	cpi	r24, 0x46	; 70
     eb6:	f9 f4       	brne	.+62     	; 0xef6 <ISR_Bluetooth+0x90>
	{
		lcd_Clear();
     eb8:	0e 94 75 06 	call	0xcea	; 0xcea <lcd_Clear>
		LCD_String("FORWARD");
     ebc:	80 e7       	ldi	r24, 0x70	; 112
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <LCD_String>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_4 , RESET) ;
     ec4:	40 e0       	ldi	r20, 0x00	; 0
     ec6:	60 e1       	ldi	r22, 0x10	; 16
     ec8:	83 e3       	ldi	r24, 0x33	; 51
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_5 , SET) ;
     ed0:	41 e0       	ldi	r20, 0x01	; 1
     ed2:	60 e2       	ldi	r22, 0x20	; 32
     ed4:	83 e3       	ldi	r24, 0x33	; 51
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_6 , RESET) ;
     edc:	40 e0       	ldi	r20, 0x00	; 0
     ede:	60 e4       	ldi	r22, 0x40	; 64
     ee0:	83 e3       	ldi	r24, 0x33	; 51
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_7 , SET) ;
     ee8:	41 e0       	ldi	r20, 0x01	; 1
     eea:	60 e8       	ldi	r22, 0x80	; 128
     eec:	83 e3       	ldi	r24, 0x33	; 51
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
     ef4:	08 95       	ret
	}
	else if(Data =='R')
     ef6:	82 35       	cpi	r24, 0x52	; 82
     ef8:	19 f5       	brne	.+70     	; 0xf40 <ISR_Bluetooth+0xda>
	{
		lcd_Clear();
     efa:	0e 94 75 06 	call	0xcea	; 0xcea <lcd_Clear>
		LCD_String("RIGHT");
     efe:	88 e7       	ldi	r24, 0x78	; 120
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <LCD_String>
		MOTOR_Speed(1);
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	0e 94 34 05 	call	0xa68	; 0xa68 <MOTOR_Speed>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_4 , SET) ;
     f0e:	41 e0       	ldi	r20, 0x01	; 1
     f10:	60 e1       	ldi	r22, 0x10	; 16
     f12:	83 e3       	ldi	r24, 0x33	; 51
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_5 , RESET) ;
     f1a:	40 e0       	ldi	r20, 0x00	; 0
     f1c:	60 e2       	ldi	r22, 0x20	; 32
     f1e:	83 e3       	ldi	r24, 0x33	; 51
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_6 , RESET) ;
     f26:	40 e0       	ldi	r20, 0x00	; 0
     f28:	60 e4       	ldi	r22, 0x40	; 64
     f2a:	83 e3       	ldi	r24, 0x33	; 51
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_7 , SET) ;
     f32:	41 e0       	ldi	r20, 0x01	; 1
     f34:	60 e8       	ldi	r22, 0x80	; 128
     f36:	83 e3       	ldi	r24, 0x33	; 51
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
     f3e:	08 95       	ret
	}
	else if(Data =='L')
     f40:	8c 34       	cpi	r24, 0x4C	; 76
     f42:	19 f5       	brne	.+70     	; 0xf8a <ISR_Bluetooth+0x124>
	{
		lcd_Clear();
     f44:	0e 94 75 06 	call	0xcea	; 0xcea <lcd_Clear>
		LCD_String("LEFT");
     f48:	8e e7       	ldi	r24, 0x7E	; 126
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <LCD_String>
		MOTOR_Speed(1);
     f50:	81 e0       	ldi	r24, 0x01	; 1
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	0e 94 34 05 	call	0xa68	; 0xa68 <MOTOR_Speed>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_4 , RESET) ;
     f58:	40 e0       	ldi	r20, 0x00	; 0
     f5a:	60 e1       	ldi	r22, 0x10	; 16
     f5c:	83 e3       	ldi	r24, 0x33	; 51
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_5 , SET) ;
     f64:	41 e0       	ldi	r20, 0x01	; 1
     f66:	60 e2       	ldi	r22, 0x20	; 32
     f68:	83 e3       	ldi	r24, 0x33	; 51
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_6 , SET) ;
     f70:	41 e0       	ldi	r20, 0x01	; 1
     f72:	60 e4       	ldi	r22, 0x40	; 64
     f74:	83 e3       	ldi	r24, 0x33	; 51
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_7 , RESET) ;
     f7c:	40 e0       	ldi	r20, 0x00	; 0
     f7e:	60 e8       	ldi	r22, 0x80	; 128
     f80:	83 e3       	ldi	r24, 0x33	; 51
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
     f88:	08 95       	ret
	}
	else if(Data =='S')
     f8a:	83 35       	cpi	r24, 0x53	; 83
     f8c:	c9 f4       	brne	.+50     	; 0xfc0 <ISR_Bluetooth+0x15a>
	{
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_4 , RESET) ;
     f8e:	40 e0       	ldi	r20, 0x00	; 0
     f90:	60 e1       	ldi	r22, 0x10	; 16
     f92:	83 e3       	ldi	r24, 0x33	; 51
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_5 , RESET) ;
     f9a:	40 e0       	ldi	r20, 0x00	; 0
     f9c:	60 e2       	ldi	r22, 0x20	; 32
     f9e:	83 e3       	ldi	r24, 0x33	; 51
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_6 , RESET) ;
     fa6:	40 e0       	ldi	r20, 0x00	; 0
     fa8:	60 e4       	ldi	r22, 0x40	; 64
     faa:	83 e3       	ldi	r24, 0x33	; 51
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_7 , RESET) ;
     fb2:	40 e0       	ldi	r20, 0x00	; 0
     fb4:	60 e8       	ldi	r22, 0x80	; 128
     fb6:	83 e3       	ldi	r24, 0x33	; 51
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
     fbe:	08 95       	ret
	}
	else if(Data =='X')
     fc0:	88 35       	cpi	r24, 0x58	; 88
     fc2:	e1 f4       	brne	.+56     	; 0xffc <ISR_Bluetooth+0x196>
	{
		DATA=20;
     fc4:	84 e1       	ldi	r24, 0x14	; 20
     fc6:	80 93 ad 00 	sts	0x00AD, r24	; 0x8000ad <DATA>
		while(DATA)
     fca:	13 c0       	rjmp	.+38     	; 0xff2 <ISR_Bluetooth+0x18c>
		{
			MCAL_GPIO_TogglePin(GPIOB , GPIO_PIN_0 ) ;
     fcc:	61 e0       	ldi	r22, 0x01	; 1
     fce:	86 e3       	ldi	r24, 0x36	; 54
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <MCAL_GPIO_TogglePin>
     fd6:	2f ef       	ldi	r18, 0xFF	; 255
     fd8:	80 e7       	ldi	r24, 0x70	; 112
     fda:	92 e0       	ldi	r25, 0x02	; 2
     fdc:	21 50       	subi	r18, 0x01	; 1
     fde:	80 40       	sbci	r24, 0x00	; 0
     fe0:	90 40       	sbci	r25, 0x00	; 0
     fe2:	e1 f7       	brne	.-8      	; 0xfdc <ISR_Bluetooth+0x176>
     fe4:	00 c0       	rjmp	.+0      	; 0xfe6 <ISR_Bluetooth+0x180>
     fe6:	00 00       	nop
			_delay_ms(100);
			DATA--;
     fe8:	80 91 ad 00 	lds	r24, 0x00AD	; 0x8000ad <DATA>
     fec:	81 50       	subi	r24, 0x01	; 1
     fee:	80 93 ad 00 	sts	0x00AD, r24	; 0x8000ad <DATA>
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_7 , RESET) ;
	}
	else if(Data =='X')
	{
		DATA=20;
		while(DATA)
     ff2:	80 91 ad 00 	lds	r24, 0x00AD	; 0x8000ad <DATA>
     ff6:	81 11       	cpse	r24, r1
     ff8:	e9 cf       	rjmp	.-46     	; 0xfcc <ISR_Bluetooth+0x166>
     ffa:	08 95       	ret
			MCAL_GPIO_TogglePin(GPIOB , GPIO_PIN_0 ) ;
			_delay_ms(100);
			DATA--;
		}
	}
	else if(Data =='V')
     ffc:	86 35       	cpi	r24, 0x56	; 86
     ffe:	39 f4       	brne	.+14     	; 0x100e <ISR_Bluetooth+0x1a8>
	{
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_3 , SET) ;
    1000:	41 e0       	ldi	r20, 0x01	; 1
    1002:	68 e0       	ldi	r22, 0x08	; 8
    1004:	83 e3       	ldi	r24, 0x33	; 51
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
    100c:	08 95       	ret
	}
	else if(Data =='v')
    100e:	86 37       	cpi	r24, 0x76	; 118
    1010:	39 f4       	brne	.+14     	; 0x1020 <ISR_Bluetooth+0x1ba>
	{
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_3 , RESET) ;
    1012:	40 e0       	ldi	r20, 0x00	; 0
    1014:	68 e0       	ldi	r22, 0x08	; 8
    1016:	83 e3       	ldi	r24, 0x33	; 51
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
    101e:	08 95       	ret
	}
	else if(Data =='W')
    1020:	87 35       	cpi	r24, 0x57	; 87
    1022:	39 f4       	brne	.+14     	; 0x1032 <ISR_Bluetooth+0x1cc>
	{
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_1 , SET) ;
    1024:	41 e0       	ldi	r20, 0x01	; 1
    1026:	62 e0       	ldi	r22, 0x02	; 2
    1028:	83 e3       	ldi	r24, 0x33	; 51
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
    1030:	08 95       	ret
	}
	else if(Data =='w')
    1032:	87 37       	cpi	r24, 0x77	; 119
    1034:	39 f4       	brne	.+14     	; 0x1044 <ISR_Bluetooth+0x1de>
	{
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_1 , RESET) ;
    1036:	40 e0       	ldi	r20, 0x00	; 0
    1038:	62 e0       	ldi	r22, 0x02	; 2
    103a:	83 e3       	ldi	r24, 0x33	; 51
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
    1042:	08 95       	ret
	}
	else if(Data =='U')
    1044:	85 35       	cpi	r24, 0x55	; 85
    1046:	39 f4       	brne	.+14     	; 0x1056 <ISR_Bluetooth+0x1f0>
	{
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_2 , SET) ;
    1048:	41 e0       	ldi	r20, 0x01	; 1
    104a:	64 e0       	ldi	r22, 0x04	; 4
    104c:	83 e3       	ldi	r24, 0x33	; 51
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
    1054:	08 95       	ret
	}
	else if(Data =='u')
    1056:	85 37       	cpi	r24, 0x75	; 117
    1058:	39 f4       	brne	.+14     	; 0x1068 <ISR_Bluetooth+0x202>
	{
		MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_2 , RESET) ;
    105a:	40 e0       	ldi	r20, 0x00	; 0
    105c:	64 e0       	ldi	r22, 0x04	; 4
    105e:	83 e3       	ldi	r24, 0x33	; 51
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	0e 94 e6 00 	call	0x1cc	; 0x1cc <MCAL_GPIO_WritePin>
    1066:	08 95       	ret
	}
	else
	{
		if(Data=='0')
    1068:	80 33       	cpi	r24, 0x30	; 48
    106a:	79 f4       	brne	.+30     	; 0x108a <ISR_Bluetooth+0x224>
		{
			lcd_Clear();
    106c:	0e 94 75 06 	call	0xcea	; 0xcea <lcd_Clear>
			LCD_String("STOB");
    1070:	83 e8       	ldi	r24, 0x83	; 131
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <LCD_String>
			MOTOR_Speed(0);
    1078:	80 e0       	ldi	r24, 0x00	; 0
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	0e 94 34 05 	call	0xa68	; 0xa68 <MOTOR_Speed>
			SEG_Display(0);
    1080:	80 e0       	ldi	r24, 0x00	; 0
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	0e 94 f6 04 	call	0x9ec	; 0x9ec <SEG_Display>
    1088:	08 95       	ret
		}
		else if(Data=='1')
    108a:	81 33       	cpi	r24, 0x31	; 49
    108c:	49 f4       	brne	.+18     	; 0x10a0 <ISR_Bluetooth+0x23a>
		{
			MOTOR_Speed(1);
    108e:	81 e0       	ldi	r24, 0x01	; 1
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	0e 94 34 05 	call	0xa68	; 0xa68 <MOTOR_Speed>
			SEG_Display(1);
    1096:	81 e0       	ldi	r24, 0x01	; 1
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	0e 94 f6 04 	call	0x9ec	; 0x9ec <SEG_Display>
    109e:	08 95       	ret
		}
		else if(Data=='2')
    10a0:	82 33       	cpi	r24, 0x32	; 50
    10a2:	49 f4       	brne	.+18     	; 0x10b6 <ISR_Bluetooth+0x250>
		{
			MOTOR_Speed(2);
    10a4:	82 e0       	ldi	r24, 0x02	; 2
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	0e 94 34 05 	call	0xa68	; 0xa68 <MOTOR_Speed>
			SEG_Display(2);
    10ac:	82 e0       	ldi	r24, 0x02	; 2
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	0e 94 f6 04 	call	0x9ec	; 0x9ec <SEG_Display>
    10b4:	08 95       	ret
		}
		else if(Data=='3')
    10b6:	83 33       	cpi	r24, 0x33	; 51
    10b8:	49 f4       	brne	.+18     	; 0x10cc <ISR_Bluetooth+0x266>
		{
			MOTOR_Speed(3);
    10ba:	83 e0       	ldi	r24, 0x03	; 3
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	0e 94 34 05 	call	0xa68	; 0xa68 <MOTOR_Speed>
			SEG_Display(3);
    10c2:	83 e0       	ldi	r24, 0x03	; 3
    10c4:	90 e0       	ldi	r25, 0x00	; 0
    10c6:	0e 94 f6 04 	call	0x9ec	; 0x9ec <SEG_Display>
    10ca:	08 95       	ret
		}
		else if(Data=='4')
    10cc:	84 33       	cpi	r24, 0x34	; 52
    10ce:	49 f4       	brne	.+18     	; 0x10e2 <ISR_Bluetooth+0x27c>
		{
			MOTOR_Speed(4);
    10d0:	84 e0       	ldi	r24, 0x04	; 4
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	0e 94 34 05 	call	0xa68	; 0xa68 <MOTOR_Speed>
			SEG_Display(4);
    10d8:	84 e0       	ldi	r24, 0x04	; 4
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	0e 94 f6 04 	call	0x9ec	; 0x9ec <SEG_Display>
    10e0:	08 95       	ret
		}
		else if(Data=='5')
    10e2:	85 33       	cpi	r24, 0x35	; 53
    10e4:	41 f4       	brne	.+16     	; 0x10f6 <ISR_Bluetooth+0x290>
		{
			MOTOR_Speed(5);
    10e6:	85 e0       	ldi	r24, 0x05	; 5
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	0e 94 34 05 	call	0xa68	; 0xa68 <MOTOR_Speed>
			SEG_Display(5);
    10ee:	85 e0       	ldi	r24, 0x05	; 5
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	0e 94 f6 04 	call	0x9ec	; 0x9ec <SEG_Display>
    10f6:	08 95       	ret

000010f8 <main>:
}



int main(void)
{
    10f8:	cf 93       	push	r28
    10fa:	df 93       	push	r29
    10fc:	00 d0       	rcall	.+0      	; 0x10fe <main+0x6>
    10fe:	cd b7       	in	r28, 0x3d	; 61
    1100:	de b7       	in	r29, 0x3e	; 62
	GPIO_Pinconfig_t GPIO_Conf ;
	GPIO_Conf.pinNumber = GPIO_PIN_0 ;
    1102:	81 e0       	ldi	r24, 0x01	; 1
    1104:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    1106:	13 e0       	ldi	r17, 0x03	; 3
    1108:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOB , &GPIO_Conf ) ;
    110a:	be 01       	movw	r22, r28
    110c:	6f 5f       	subi	r22, 0xFF	; 255
    110e:	7f 4f       	sbci	r23, 0xFF	; 255
    1110:	86 e3       	ldi	r24, 0x36	; 54
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_1 ;
    1118:	82 e0       	ldi	r24, 0x02	; 2
    111a:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    111c:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;
    111e:	be 01       	movw	r22, r28
    1120:	6f 5f       	subi	r22, 0xFF	; 255
    1122:	7f 4f       	sbci	r23, 0xFF	; 255
    1124:	83 e3       	ldi	r24, 0x33	; 51
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_2 ;
    112c:	84 e0       	ldi	r24, 0x04	; 4
    112e:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    1130:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;		
    1132:	be 01       	movw	r22, r28
    1134:	6f 5f       	subi	r22, 0xFF	; 255
    1136:	7f 4f       	sbci	r23, 0xFF	; 255
    1138:	83 e3       	ldi	r24, 0x33	; 51
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_3 ;
    1140:	88 e0       	ldi	r24, 0x08	; 8
    1142:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    1144:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;	
    1146:	be 01       	movw	r22, r28
    1148:	6f 5f       	subi	r22, 0xFF	; 255
    114a:	7f 4f       	sbci	r23, 0xFF	; 255
    114c:	83 e3       	ldi	r24, 0x33	; 51
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_4 ;
    1154:	80 e1       	ldi	r24, 0x10	; 16
    1156:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    1158:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;
    115a:	be 01       	movw	r22, r28
    115c:	6f 5f       	subi	r22, 0xFF	; 255
    115e:	7f 4f       	sbci	r23, 0xFF	; 255
    1160:	83 e3       	ldi	r24, 0x33	; 51
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_5 ;
    1168:	80 e2       	ldi	r24, 0x20	; 32
    116a:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    116c:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;
    116e:	be 01       	movw	r22, r28
    1170:	6f 5f       	subi	r22, 0xFF	; 255
    1172:	7f 4f       	sbci	r23, 0xFF	; 255
    1174:	83 e3       	ldi	r24, 0x33	; 51
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_6 ;
    117c:	80 e4       	ldi	r24, 0x40	; 64
    117e:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    1180:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;
    1182:	be 01       	movw	r22, r28
    1184:	6f 5f       	subi	r22, 0xFF	; 255
    1186:	7f 4f       	sbci	r23, 0xFF	; 255
    1188:	83 e3       	ldi	r24, 0x33	; 51
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
		
	GPIO_Conf.pinNumber = GPIO_PIN_7 ;
    1190:	80 e8       	ldi	r24, 0x80	; 128
    1192:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    1194:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;
    1196:	be 01       	movw	r22, r28
    1198:	6f 5f       	subi	r22, 0xFF	; 255
    119a:	7f 4f       	sbci	r23, 0xFF	; 255
    119c:	83 e3       	ldi	r24, 0x33	; 51
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	0e 94 be 00 	call	0x17c	; 0x17c <MCAL_GPIO_Init>
	

	SEG_Init();
    11a4:	0e 94 a3 04 	call	0x946	; 0x946 <SEG_Init>
	MOTOR_Init();
    11a8:	0e 94 00 05 	call	0xa00	; 0xa00 <MOTOR_Init>
	MOTOR_Speed(1);
    11ac:	81 e0       	ldi	r24, 0x01	; 1
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	0e 94 34 05 	call	0xa68	; 0xa68 <MOTOR_Speed>
	Bluetooth_Init( INT_Enable) ;
    11b4:	80 e0       	ldi	r24, 0x00	; 0
    11b6:	0e 94 55 05 	call	0xaaa	; 0xaaa <Bluetooth_Init>
	LCD_init();
    11ba:	0e 94 d5 05 	call	0xbaa	; 0xbaa <LCD_init>
    11be:	ff cf       	rjmp	.-2      	; 0x11be <main+0xc6>

000011c0 <__subsf3>:
    11c0:	50 58       	subi	r21, 0x80	; 128

000011c2 <__addsf3>:
    11c2:	bb 27       	eor	r27, r27
    11c4:	aa 27       	eor	r26, r26
    11c6:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <__addsf3x>
    11ca:	0c 94 42 0a 	jmp	0x1484	; 0x1484 <__fp_round>
    11ce:	0e 94 34 0a 	call	0x1468	; 0x1468 <__fp_pscA>
    11d2:	38 f0       	brcs	.+14     	; 0x11e2 <__addsf3+0x20>
    11d4:	0e 94 3b 0a 	call	0x1476	; 0x1476 <__fp_pscB>
    11d8:	20 f0       	brcs	.+8      	; 0x11e2 <__addsf3+0x20>
    11da:	39 f4       	brne	.+14     	; 0x11ea <__addsf3+0x28>
    11dc:	9f 3f       	cpi	r25, 0xFF	; 255
    11de:	19 f4       	brne	.+6      	; 0x11e6 <__addsf3+0x24>
    11e0:	26 f4       	brtc	.+8      	; 0x11ea <__addsf3+0x28>
    11e2:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__fp_nan>
    11e6:	0e f4       	brtc	.+2      	; 0x11ea <__addsf3+0x28>
    11e8:	e0 95       	com	r30
    11ea:	e7 fb       	bst	r30, 7
    11ec:	0c 94 2b 0a 	jmp	0x1456	; 0x1456 <__fp_inf>

000011f0 <__addsf3x>:
    11f0:	e9 2f       	mov	r30, r25
    11f2:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <__fp_split3>
    11f6:	58 f3       	brcs	.-42     	; 0x11ce <__addsf3+0xc>
    11f8:	ba 17       	cp	r27, r26
    11fa:	62 07       	cpc	r22, r18
    11fc:	73 07       	cpc	r23, r19
    11fe:	84 07       	cpc	r24, r20
    1200:	95 07       	cpc	r25, r21
    1202:	20 f0       	brcs	.+8      	; 0x120c <__addsf3x+0x1c>
    1204:	79 f4       	brne	.+30     	; 0x1224 <__addsf3x+0x34>
    1206:	a6 f5       	brtc	.+104    	; 0x1270 <__addsf3x+0x80>
    1208:	0c 94 75 0a 	jmp	0x14ea	; 0x14ea <__fp_zero>
    120c:	0e f4       	brtc	.+2      	; 0x1210 <__addsf3x+0x20>
    120e:	e0 95       	com	r30
    1210:	0b 2e       	mov	r0, r27
    1212:	ba 2f       	mov	r27, r26
    1214:	a0 2d       	mov	r26, r0
    1216:	0b 01       	movw	r0, r22
    1218:	b9 01       	movw	r22, r18
    121a:	90 01       	movw	r18, r0
    121c:	0c 01       	movw	r0, r24
    121e:	ca 01       	movw	r24, r20
    1220:	a0 01       	movw	r20, r0
    1222:	11 24       	eor	r1, r1
    1224:	ff 27       	eor	r31, r31
    1226:	59 1b       	sub	r21, r25
    1228:	99 f0       	breq	.+38     	; 0x1250 <__addsf3x+0x60>
    122a:	59 3f       	cpi	r21, 0xF9	; 249
    122c:	50 f4       	brcc	.+20     	; 0x1242 <__addsf3x+0x52>
    122e:	50 3e       	cpi	r21, 0xE0	; 224
    1230:	68 f1       	brcs	.+90     	; 0x128c <__addsf3x+0x9c>
    1232:	1a 16       	cp	r1, r26
    1234:	f0 40       	sbci	r31, 0x00	; 0
    1236:	a2 2f       	mov	r26, r18
    1238:	23 2f       	mov	r18, r19
    123a:	34 2f       	mov	r19, r20
    123c:	44 27       	eor	r20, r20
    123e:	58 5f       	subi	r21, 0xF8	; 248
    1240:	f3 cf       	rjmp	.-26     	; 0x1228 <__addsf3x+0x38>
    1242:	46 95       	lsr	r20
    1244:	37 95       	ror	r19
    1246:	27 95       	ror	r18
    1248:	a7 95       	ror	r26
    124a:	f0 40       	sbci	r31, 0x00	; 0
    124c:	53 95       	inc	r21
    124e:	c9 f7       	brne	.-14     	; 0x1242 <__addsf3x+0x52>
    1250:	7e f4       	brtc	.+30     	; 0x1270 <__addsf3x+0x80>
    1252:	1f 16       	cp	r1, r31
    1254:	ba 0b       	sbc	r27, r26
    1256:	62 0b       	sbc	r22, r18
    1258:	73 0b       	sbc	r23, r19
    125a:	84 0b       	sbc	r24, r20
    125c:	ba f0       	brmi	.+46     	; 0x128c <__addsf3x+0x9c>
    125e:	91 50       	subi	r25, 0x01	; 1
    1260:	a1 f0       	breq	.+40     	; 0x128a <__addsf3x+0x9a>
    1262:	ff 0f       	add	r31, r31
    1264:	bb 1f       	adc	r27, r27
    1266:	66 1f       	adc	r22, r22
    1268:	77 1f       	adc	r23, r23
    126a:	88 1f       	adc	r24, r24
    126c:	c2 f7       	brpl	.-16     	; 0x125e <__addsf3x+0x6e>
    126e:	0e c0       	rjmp	.+28     	; 0x128c <__addsf3x+0x9c>
    1270:	ba 0f       	add	r27, r26
    1272:	62 1f       	adc	r22, r18
    1274:	73 1f       	adc	r23, r19
    1276:	84 1f       	adc	r24, r20
    1278:	48 f4       	brcc	.+18     	; 0x128c <__addsf3x+0x9c>
    127a:	87 95       	ror	r24
    127c:	77 95       	ror	r23
    127e:	67 95       	ror	r22
    1280:	b7 95       	ror	r27
    1282:	f7 95       	ror	r31
    1284:	9e 3f       	cpi	r25, 0xFE	; 254
    1286:	08 f0       	brcs	.+2      	; 0x128a <__addsf3x+0x9a>
    1288:	b0 cf       	rjmp	.-160    	; 0x11ea <__addsf3+0x28>
    128a:	93 95       	inc	r25
    128c:	88 0f       	add	r24, r24
    128e:	08 f0       	brcs	.+2      	; 0x1292 <__addsf3x+0xa2>
    1290:	99 27       	eor	r25, r25
    1292:	ee 0f       	add	r30, r30
    1294:	97 95       	ror	r25
    1296:	87 95       	ror	r24
    1298:	08 95       	ret

0000129a <__divsf3>:
    129a:	0e 94 61 09 	call	0x12c2	; 0x12c2 <__divsf3x>
    129e:	0c 94 42 0a 	jmp	0x1484	; 0x1484 <__fp_round>
    12a2:	0e 94 3b 0a 	call	0x1476	; 0x1476 <__fp_pscB>
    12a6:	58 f0       	brcs	.+22     	; 0x12be <__divsf3+0x24>
    12a8:	0e 94 34 0a 	call	0x1468	; 0x1468 <__fp_pscA>
    12ac:	40 f0       	brcs	.+16     	; 0x12be <__divsf3+0x24>
    12ae:	29 f4       	brne	.+10     	; 0x12ba <__divsf3+0x20>
    12b0:	5f 3f       	cpi	r21, 0xFF	; 255
    12b2:	29 f0       	breq	.+10     	; 0x12be <__divsf3+0x24>
    12b4:	0c 94 2b 0a 	jmp	0x1456	; 0x1456 <__fp_inf>
    12b8:	51 11       	cpse	r21, r1
    12ba:	0c 94 76 0a 	jmp	0x14ec	; 0x14ec <__fp_szero>
    12be:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__fp_nan>

000012c2 <__divsf3x>:
    12c2:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <__fp_split3>
    12c6:	68 f3       	brcs	.-38     	; 0x12a2 <__divsf3+0x8>

000012c8 <__divsf3_pse>:
    12c8:	99 23       	and	r25, r25
    12ca:	b1 f3       	breq	.-20     	; 0x12b8 <__divsf3+0x1e>
    12cc:	55 23       	and	r21, r21
    12ce:	91 f3       	breq	.-28     	; 0x12b4 <__divsf3+0x1a>
    12d0:	95 1b       	sub	r25, r21
    12d2:	55 0b       	sbc	r21, r21
    12d4:	bb 27       	eor	r27, r27
    12d6:	aa 27       	eor	r26, r26
    12d8:	62 17       	cp	r22, r18
    12da:	73 07       	cpc	r23, r19
    12dc:	84 07       	cpc	r24, r20
    12de:	38 f0       	brcs	.+14     	; 0x12ee <__divsf3_pse+0x26>
    12e0:	9f 5f       	subi	r25, 0xFF	; 255
    12e2:	5f 4f       	sbci	r21, 0xFF	; 255
    12e4:	22 0f       	add	r18, r18
    12e6:	33 1f       	adc	r19, r19
    12e8:	44 1f       	adc	r20, r20
    12ea:	aa 1f       	adc	r26, r26
    12ec:	a9 f3       	breq	.-22     	; 0x12d8 <__divsf3_pse+0x10>
    12ee:	35 d0       	rcall	.+106    	; 0x135a <__divsf3_pse+0x92>
    12f0:	0e 2e       	mov	r0, r30
    12f2:	3a f0       	brmi	.+14     	; 0x1302 <__divsf3_pse+0x3a>
    12f4:	e0 e8       	ldi	r30, 0x80	; 128
    12f6:	32 d0       	rcall	.+100    	; 0x135c <__divsf3_pse+0x94>
    12f8:	91 50       	subi	r25, 0x01	; 1
    12fa:	50 40       	sbci	r21, 0x00	; 0
    12fc:	e6 95       	lsr	r30
    12fe:	00 1c       	adc	r0, r0
    1300:	ca f7       	brpl	.-14     	; 0x12f4 <__divsf3_pse+0x2c>
    1302:	2b d0       	rcall	.+86     	; 0x135a <__divsf3_pse+0x92>
    1304:	fe 2f       	mov	r31, r30
    1306:	29 d0       	rcall	.+82     	; 0x135a <__divsf3_pse+0x92>
    1308:	66 0f       	add	r22, r22
    130a:	77 1f       	adc	r23, r23
    130c:	88 1f       	adc	r24, r24
    130e:	bb 1f       	adc	r27, r27
    1310:	26 17       	cp	r18, r22
    1312:	37 07       	cpc	r19, r23
    1314:	48 07       	cpc	r20, r24
    1316:	ab 07       	cpc	r26, r27
    1318:	b0 e8       	ldi	r27, 0x80	; 128
    131a:	09 f0       	breq	.+2      	; 0x131e <__divsf3_pse+0x56>
    131c:	bb 0b       	sbc	r27, r27
    131e:	80 2d       	mov	r24, r0
    1320:	bf 01       	movw	r22, r30
    1322:	ff 27       	eor	r31, r31
    1324:	93 58       	subi	r25, 0x83	; 131
    1326:	5f 4f       	sbci	r21, 0xFF	; 255
    1328:	3a f0       	brmi	.+14     	; 0x1338 <__divsf3_pse+0x70>
    132a:	9e 3f       	cpi	r25, 0xFE	; 254
    132c:	51 05       	cpc	r21, r1
    132e:	78 f0       	brcs	.+30     	; 0x134e <__divsf3_pse+0x86>
    1330:	0c 94 2b 0a 	jmp	0x1456	; 0x1456 <__fp_inf>
    1334:	0c 94 76 0a 	jmp	0x14ec	; 0x14ec <__fp_szero>
    1338:	5f 3f       	cpi	r21, 0xFF	; 255
    133a:	e4 f3       	brlt	.-8      	; 0x1334 <__divsf3_pse+0x6c>
    133c:	98 3e       	cpi	r25, 0xE8	; 232
    133e:	d4 f3       	brlt	.-12     	; 0x1334 <__divsf3_pse+0x6c>
    1340:	86 95       	lsr	r24
    1342:	77 95       	ror	r23
    1344:	67 95       	ror	r22
    1346:	b7 95       	ror	r27
    1348:	f7 95       	ror	r31
    134a:	9f 5f       	subi	r25, 0xFF	; 255
    134c:	c9 f7       	brne	.-14     	; 0x1340 <__divsf3_pse+0x78>
    134e:	88 0f       	add	r24, r24
    1350:	91 1d       	adc	r25, r1
    1352:	96 95       	lsr	r25
    1354:	87 95       	ror	r24
    1356:	97 f9       	bld	r25, 7
    1358:	08 95       	ret
    135a:	e1 e0       	ldi	r30, 0x01	; 1
    135c:	66 0f       	add	r22, r22
    135e:	77 1f       	adc	r23, r23
    1360:	88 1f       	adc	r24, r24
    1362:	bb 1f       	adc	r27, r27
    1364:	62 17       	cp	r22, r18
    1366:	73 07       	cpc	r23, r19
    1368:	84 07       	cpc	r24, r20
    136a:	ba 07       	cpc	r27, r26
    136c:	20 f0       	brcs	.+8      	; 0x1376 <__divsf3_pse+0xae>
    136e:	62 1b       	sub	r22, r18
    1370:	73 0b       	sbc	r23, r19
    1372:	84 0b       	sbc	r24, r20
    1374:	ba 0b       	sbc	r27, r26
    1376:	ee 1f       	adc	r30, r30
    1378:	88 f7       	brcc	.-30     	; 0x135c <__divsf3_pse+0x94>
    137a:	e0 95       	com	r30
    137c:	08 95       	ret

0000137e <__fixunssfsi>:
    137e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <__fp_splitA>
    1382:	88 f0       	brcs	.+34     	; 0x13a6 <__fixunssfsi+0x28>
    1384:	9f 57       	subi	r25, 0x7F	; 127
    1386:	98 f0       	brcs	.+38     	; 0x13ae <__fixunssfsi+0x30>
    1388:	b9 2f       	mov	r27, r25
    138a:	99 27       	eor	r25, r25
    138c:	b7 51       	subi	r27, 0x17	; 23
    138e:	b0 f0       	brcs	.+44     	; 0x13bc <__fixunssfsi+0x3e>
    1390:	e1 f0       	breq	.+56     	; 0x13ca <__fixunssfsi+0x4c>
    1392:	66 0f       	add	r22, r22
    1394:	77 1f       	adc	r23, r23
    1396:	88 1f       	adc	r24, r24
    1398:	99 1f       	adc	r25, r25
    139a:	1a f0       	brmi	.+6      	; 0x13a2 <__fixunssfsi+0x24>
    139c:	ba 95       	dec	r27
    139e:	c9 f7       	brne	.-14     	; 0x1392 <__fixunssfsi+0x14>
    13a0:	14 c0       	rjmp	.+40     	; 0x13ca <__fixunssfsi+0x4c>
    13a2:	b1 30       	cpi	r27, 0x01	; 1
    13a4:	91 f0       	breq	.+36     	; 0x13ca <__fixunssfsi+0x4c>
    13a6:	0e 94 75 0a 	call	0x14ea	; 0x14ea <__fp_zero>
    13aa:	b1 e0       	ldi	r27, 0x01	; 1
    13ac:	08 95       	ret
    13ae:	0c 94 75 0a 	jmp	0x14ea	; 0x14ea <__fp_zero>
    13b2:	67 2f       	mov	r22, r23
    13b4:	78 2f       	mov	r23, r24
    13b6:	88 27       	eor	r24, r24
    13b8:	b8 5f       	subi	r27, 0xF8	; 248
    13ba:	39 f0       	breq	.+14     	; 0x13ca <__fixunssfsi+0x4c>
    13bc:	b9 3f       	cpi	r27, 0xF9	; 249
    13be:	cc f3       	brlt	.-14     	; 0x13b2 <__fixunssfsi+0x34>
    13c0:	86 95       	lsr	r24
    13c2:	77 95       	ror	r23
    13c4:	67 95       	ror	r22
    13c6:	b3 95       	inc	r27
    13c8:	d9 f7       	brne	.-10     	; 0x13c0 <__fixunssfsi+0x42>
    13ca:	3e f4       	brtc	.+14     	; 0x13da <__fixunssfsi+0x5c>
    13cc:	90 95       	com	r25
    13ce:	80 95       	com	r24
    13d0:	70 95       	com	r23
    13d2:	61 95       	neg	r22
    13d4:	7f 4f       	sbci	r23, 0xFF	; 255
    13d6:	8f 4f       	sbci	r24, 0xFF	; 255
    13d8:	9f 4f       	sbci	r25, 0xFF	; 255
    13da:	08 95       	ret

000013dc <__floatunsisf>:
    13dc:	e8 94       	clt
    13de:	09 c0       	rjmp	.+18     	; 0x13f2 <__floatsisf+0x12>

000013e0 <__floatsisf>:
    13e0:	97 fb       	bst	r25, 7
    13e2:	3e f4       	brtc	.+14     	; 0x13f2 <__floatsisf+0x12>
    13e4:	90 95       	com	r25
    13e6:	80 95       	com	r24
    13e8:	70 95       	com	r23
    13ea:	61 95       	neg	r22
    13ec:	7f 4f       	sbci	r23, 0xFF	; 255
    13ee:	8f 4f       	sbci	r24, 0xFF	; 255
    13f0:	9f 4f       	sbci	r25, 0xFF	; 255
    13f2:	99 23       	and	r25, r25
    13f4:	a9 f0       	breq	.+42     	; 0x1420 <__floatsisf+0x40>
    13f6:	f9 2f       	mov	r31, r25
    13f8:	96 e9       	ldi	r25, 0x96	; 150
    13fa:	bb 27       	eor	r27, r27
    13fc:	93 95       	inc	r25
    13fe:	f6 95       	lsr	r31
    1400:	87 95       	ror	r24
    1402:	77 95       	ror	r23
    1404:	67 95       	ror	r22
    1406:	b7 95       	ror	r27
    1408:	f1 11       	cpse	r31, r1
    140a:	f8 cf       	rjmp	.-16     	; 0x13fc <__floatsisf+0x1c>
    140c:	fa f4       	brpl	.+62     	; 0x144c <__floatsisf+0x6c>
    140e:	bb 0f       	add	r27, r27
    1410:	11 f4       	brne	.+4      	; 0x1416 <__floatsisf+0x36>
    1412:	60 ff       	sbrs	r22, 0
    1414:	1b c0       	rjmp	.+54     	; 0x144c <__floatsisf+0x6c>
    1416:	6f 5f       	subi	r22, 0xFF	; 255
    1418:	7f 4f       	sbci	r23, 0xFF	; 255
    141a:	8f 4f       	sbci	r24, 0xFF	; 255
    141c:	9f 4f       	sbci	r25, 0xFF	; 255
    141e:	16 c0       	rjmp	.+44     	; 0x144c <__floatsisf+0x6c>
    1420:	88 23       	and	r24, r24
    1422:	11 f0       	breq	.+4      	; 0x1428 <__floatsisf+0x48>
    1424:	96 e9       	ldi	r25, 0x96	; 150
    1426:	11 c0       	rjmp	.+34     	; 0x144a <__floatsisf+0x6a>
    1428:	77 23       	and	r23, r23
    142a:	21 f0       	breq	.+8      	; 0x1434 <__floatsisf+0x54>
    142c:	9e e8       	ldi	r25, 0x8E	; 142
    142e:	87 2f       	mov	r24, r23
    1430:	76 2f       	mov	r23, r22
    1432:	05 c0       	rjmp	.+10     	; 0x143e <__floatsisf+0x5e>
    1434:	66 23       	and	r22, r22
    1436:	71 f0       	breq	.+28     	; 0x1454 <__floatsisf+0x74>
    1438:	96 e8       	ldi	r25, 0x86	; 134
    143a:	86 2f       	mov	r24, r22
    143c:	70 e0       	ldi	r23, 0x00	; 0
    143e:	60 e0       	ldi	r22, 0x00	; 0
    1440:	2a f0       	brmi	.+10     	; 0x144c <__floatsisf+0x6c>
    1442:	9a 95       	dec	r25
    1444:	66 0f       	add	r22, r22
    1446:	77 1f       	adc	r23, r23
    1448:	88 1f       	adc	r24, r24
    144a:	da f7       	brpl	.-10     	; 0x1442 <__floatsisf+0x62>
    144c:	88 0f       	add	r24, r24
    144e:	96 95       	lsr	r25
    1450:	87 95       	ror	r24
    1452:	97 f9       	bld	r25, 7
    1454:	08 95       	ret

00001456 <__fp_inf>:
    1456:	97 f9       	bld	r25, 7
    1458:	9f 67       	ori	r25, 0x7F	; 127
    145a:	80 e8       	ldi	r24, 0x80	; 128
    145c:	70 e0       	ldi	r23, 0x00	; 0
    145e:	60 e0       	ldi	r22, 0x00	; 0
    1460:	08 95       	ret

00001462 <__fp_nan>:
    1462:	9f ef       	ldi	r25, 0xFF	; 255
    1464:	80 ec       	ldi	r24, 0xC0	; 192
    1466:	08 95       	ret

00001468 <__fp_pscA>:
    1468:	00 24       	eor	r0, r0
    146a:	0a 94       	dec	r0
    146c:	16 16       	cp	r1, r22
    146e:	17 06       	cpc	r1, r23
    1470:	18 06       	cpc	r1, r24
    1472:	09 06       	cpc	r0, r25
    1474:	08 95       	ret

00001476 <__fp_pscB>:
    1476:	00 24       	eor	r0, r0
    1478:	0a 94       	dec	r0
    147a:	12 16       	cp	r1, r18
    147c:	13 06       	cpc	r1, r19
    147e:	14 06       	cpc	r1, r20
    1480:	05 06       	cpc	r0, r21
    1482:	08 95       	ret

00001484 <__fp_round>:
    1484:	09 2e       	mov	r0, r25
    1486:	03 94       	inc	r0
    1488:	00 0c       	add	r0, r0
    148a:	11 f4       	brne	.+4      	; 0x1490 <__fp_round+0xc>
    148c:	88 23       	and	r24, r24
    148e:	52 f0       	brmi	.+20     	; 0x14a4 <__fp_round+0x20>
    1490:	bb 0f       	add	r27, r27
    1492:	40 f4       	brcc	.+16     	; 0x14a4 <__fp_round+0x20>
    1494:	bf 2b       	or	r27, r31
    1496:	11 f4       	brne	.+4      	; 0x149c <__fp_round+0x18>
    1498:	60 ff       	sbrs	r22, 0
    149a:	04 c0       	rjmp	.+8      	; 0x14a4 <__fp_round+0x20>
    149c:	6f 5f       	subi	r22, 0xFF	; 255
    149e:	7f 4f       	sbci	r23, 0xFF	; 255
    14a0:	8f 4f       	sbci	r24, 0xFF	; 255
    14a2:	9f 4f       	sbci	r25, 0xFF	; 255
    14a4:	08 95       	ret

000014a6 <__fp_split3>:
    14a6:	57 fd       	sbrc	r21, 7
    14a8:	90 58       	subi	r25, 0x80	; 128
    14aa:	44 0f       	add	r20, r20
    14ac:	55 1f       	adc	r21, r21
    14ae:	59 f0       	breq	.+22     	; 0x14c6 <__fp_splitA+0x10>
    14b0:	5f 3f       	cpi	r21, 0xFF	; 255
    14b2:	71 f0       	breq	.+28     	; 0x14d0 <__fp_splitA+0x1a>
    14b4:	47 95       	ror	r20

000014b6 <__fp_splitA>:
    14b6:	88 0f       	add	r24, r24
    14b8:	97 fb       	bst	r25, 7
    14ba:	99 1f       	adc	r25, r25
    14bc:	61 f0       	breq	.+24     	; 0x14d6 <__fp_splitA+0x20>
    14be:	9f 3f       	cpi	r25, 0xFF	; 255
    14c0:	79 f0       	breq	.+30     	; 0x14e0 <__fp_splitA+0x2a>
    14c2:	87 95       	ror	r24
    14c4:	08 95       	ret
    14c6:	12 16       	cp	r1, r18
    14c8:	13 06       	cpc	r1, r19
    14ca:	14 06       	cpc	r1, r20
    14cc:	55 1f       	adc	r21, r21
    14ce:	f2 cf       	rjmp	.-28     	; 0x14b4 <__fp_split3+0xe>
    14d0:	46 95       	lsr	r20
    14d2:	f1 df       	rcall	.-30     	; 0x14b6 <__fp_splitA>
    14d4:	08 c0       	rjmp	.+16     	; 0x14e6 <__fp_splitA+0x30>
    14d6:	16 16       	cp	r1, r22
    14d8:	17 06       	cpc	r1, r23
    14da:	18 06       	cpc	r1, r24
    14dc:	99 1f       	adc	r25, r25
    14de:	f1 cf       	rjmp	.-30     	; 0x14c2 <__fp_splitA+0xc>
    14e0:	86 95       	lsr	r24
    14e2:	71 05       	cpc	r23, r1
    14e4:	61 05       	cpc	r22, r1
    14e6:	08 94       	sec
    14e8:	08 95       	ret

000014ea <__fp_zero>:
    14ea:	e8 94       	clt

000014ec <__fp_szero>:
    14ec:	bb 27       	eor	r27, r27
    14ee:	66 27       	eor	r22, r22
    14f0:	77 27       	eor	r23, r23
    14f2:	cb 01       	movw	r24, r22
    14f4:	97 f9       	bld	r25, 7
    14f6:	08 95       	ret

000014f8 <__mulsf3>:
    14f8:	0e 94 8f 0a 	call	0x151e	; 0x151e <__mulsf3x>
    14fc:	0c 94 42 0a 	jmp	0x1484	; 0x1484 <__fp_round>
    1500:	0e 94 34 0a 	call	0x1468	; 0x1468 <__fp_pscA>
    1504:	38 f0       	brcs	.+14     	; 0x1514 <__mulsf3+0x1c>
    1506:	0e 94 3b 0a 	call	0x1476	; 0x1476 <__fp_pscB>
    150a:	20 f0       	brcs	.+8      	; 0x1514 <__mulsf3+0x1c>
    150c:	95 23       	and	r25, r21
    150e:	11 f0       	breq	.+4      	; 0x1514 <__mulsf3+0x1c>
    1510:	0c 94 2b 0a 	jmp	0x1456	; 0x1456 <__fp_inf>
    1514:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__fp_nan>
    1518:	11 24       	eor	r1, r1
    151a:	0c 94 76 0a 	jmp	0x14ec	; 0x14ec <__fp_szero>

0000151e <__mulsf3x>:
    151e:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <__fp_split3>
    1522:	70 f3       	brcs	.-36     	; 0x1500 <__mulsf3+0x8>

00001524 <__mulsf3_pse>:
    1524:	95 9f       	mul	r25, r21
    1526:	c1 f3       	breq	.-16     	; 0x1518 <__mulsf3+0x20>
    1528:	95 0f       	add	r25, r21
    152a:	50 e0       	ldi	r21, 0x00	; 0
    152c:	55 1f       	adc	r21, r21
    152e:	62 9f       	mul	r22, r18
    1530:	f0 01       	movw	r30, r0
    1532:	72 9f       	mul	r23, r18
    1534:	bb 27       	eor	r27, r27
    1536:	f0 0d       	add	r31, r0
    1538:	b1 1d       	adc	r27, r1
    153a:	63 9f       	mul	r22, r19
    153c:	aa 27       	eor	r26, r26
    153e:	f0 0d       	add	r31, r0
    1540:	b1 1d       	adc	r27, r1
    1542:	aa 1f       	adc	r26, r26
    1544:	64 9f       	mul	r22, r20
    1546:	66 27       	eor	r22, r22
    1548:	b0 0d       	add	r27, r0
    154a:	a1 1d       	adc	r26, r1
    154c:	66 1f       	adc	r22, r22
    154e:	82 9f       	mul	r24, r18
    1550:	22 27       	eor	r18, r18
    1552:	b0 0d       	add	r27, r0
    1554:	a1 1d       	adc	r26, r1
    1556:	62 1f       	adc	r22, r18
    1558:	73 9f       	mul	r23, r19
    155a:	b0 0d       	add	r27, r0
    155c:	a1 1d       	adc	r26, r1
    155e:	62 1f       	adc	r22, r18
    1560:	83 9f       	mul	r24, r19
    1562:	a0 0d       	add	r26, r0
    1564:	61 1d       	adc	r22, r1
    1566:	22 1f       	adc	r18, r18
    1568:	74 9f       	mul	r23, r20
    156a:	33 27       	eor	r19, r19
    156c:	a0 0d       	add	r26, r0
    156e:	61 1d       	adc	r22, r1
    1570:	23 1f       	adc	r18, r19
    1572:	84 9f       	mul	r24, r20
    1574:	60 0d       	add	r22, r0
    1576:	21 1d       	adc	r18, r1
    1578:	82 2f       	mov	r24, r18
    157a:	76 2f       	mov	r23, r22
    157c:	6a 2f       	mov	r22, r26
    157e:	11 24       	eor	r1, r1
    1580:	9f 57       	subi	r25, 0x7F	; 127
    1582:	50 40       	sbci	r21, 0x00	; 0
    1584:	9a f0       	brmi	.+38     	; 0x15ac <__mulsf3_pse+0x88>
    1586:	f1 f0       	breq	.+60     	; 0x15c4 <__mulsf3_pse+0xa0>
    1588:	88 23       	and	r24, r24
    158a:	4a f0       	brmi	.+18     	; 0x159e <__mulsf3_pse+0x7a>
    158c:	ee 0f       	add	r30, r30
    158e:	ff 1f       	adc	r31, r31
    1590:	bb 1f       	adc	r27, r27
    1592:	66 1f       	adc	r22, r22
    1594:	77 1f       	adc	r23, r23
    1596:	88 1f       	adc	r24, r24
    1598:	91 50       	subi	r25, 0x01	; 1
    159a:	50 40       	sbci	r21, 0x00	; 0
    159c:	a9 f7       	brne	.-22     	; 0x1588 <__mulsf3_pse+0x64>
    159e:	9e 3f       	cpi	r25, 0xFE	; 254
    15a0:	51 05       	cpc	r21, r1
    15a2:	80 f0       	brcs	.+32     	; 0x15c4 <__mulsf3_pse+0xa0>
    15a4:	0c 94 2b 0a 	jmp	0x1456	; 0x1456 <__fp_inf>
    15a8:	0c 94 76 0a 	jmp	0x14ec	; 0x14ec <__fp_szero>
    15ac:	5f 3f       	cpi	r21, 0xFF	; 255
    15ae:	e4 f3       	brlt	.-8      	; 0x15a8 <__mulsf3_pse+0x84>
    15b0:	98 3e       	cpi	r25, 0xE8	; 232
    15b2:	d4 f3       	brlt	.-12     	; 0x15a8 <__mulsf3_pse+0x84>
    15b4:	86 95       	lsr	r24
    15b6:	77 95       	ror	r23
    15b8:	67 95       	ror	r22
    15ba:	b7 95       	ror	r27
    15bc:	f7 95       	ror	r31
    15be:	e7 95       	ror	r30
    15c0:	9f 5f       	subi	r25, 0xFF	; 255
    15c2:	c1 f7       	brne	.-16     	; 0x15b4 <__mulsf3_pse+0x90>
    15c4:	fe 2b       	or	r31, r30
    15c6:	88 0f       	add	r24, r24
    15c8:	91 1d       	adc	r25, r1
    15ca:	96 95       	lsr	r25
    15cc:	87 95       	ror	r24
    15ce:	97 f9       	bld	r25, 7
    15d0:	08 95       	ret

000015d2 <__umulhisi3>:
    15d2:	a2 9f       	mul	r26, r18
    15d4:	b0 01       	movw	r22, r0
    15d6:	b3 9f       	mul	r27, r19
    15d8:	c0 01       	movw	r24, r0
    15da:	a3 9f       	mul	r26, r19
    15dc:	70 0d       	add	r23, r0
    15de:	81 1d       	adc	r24, r1
    15e0:	11 24       	eor	r1, r1
    15e2:	91 1d       	adc	r25, r1
    15e4:	b2 9f       	mul	r27, r18
    15e6:	70 0d       	add	r23, r0
    15e8:	81 1d       	adc	r24, r1
    15ea:	11 24       	eor	r1, r1
    15ec:	91 1d       	adc	r25, r1
    15ee:	08 95       	ret

000015f0 <_exit>:
    15f0:	f8 94       	cli

000015f2 <__stop_program>:
    15f2:	ff cf       	rjmp	.-2      	; 0x15f2 <__stop_program>
