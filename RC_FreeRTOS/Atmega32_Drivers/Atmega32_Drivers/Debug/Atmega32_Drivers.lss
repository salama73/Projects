
Atmega32_Drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002f92  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000ae  00800060  00002f92  00003026  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000004ca  0080010e  0080010e  000030d4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000030d4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003104  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000708  00000000  00000000  00003140  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007e28  00000000  00000000  00003848  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000204f  00000000  00000000  0000b670  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00004873  00000000  00000000  0000d6bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001524  00000000  00000000  00011f34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000211d  00000000  00000000  00013458  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005726  00000000  00000000  00015575  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000660  00000000  00000000  0001ac9b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__ctors_end>
       4:	0c 94 92 00 	jmp	0x124	; 0x124 <__vector_1>
       8:	0c 94 b9 00 	jmp	0x172	; 0x172 <__vector_2>
       c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__vector_3>
      10:	0c 94 9d 07 	jmp	0xf3a	; 0xf3a <__vector_4>
      14:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      18:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      1c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      20:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__vector_8>
      24:	0c 94 c1 12 	jmp	0x2582	; 0x2582 <__vector_9>
      28:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      2c:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__vector_11>
      30:	0c 94 18 02 	jmp	0x430	; 0x430 <__vector_12>
      34:	0c 94 7c 04 	jmp	0x8f8	; 0x8f8 <__vector_13>
      38:	0c 94 a3 04 	jmp	0x946	; 0x946 <__vector_14>
      3c:	0c 94 ca 04 	jmp	0x994	; 0x994 <__vector_15>
      40:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      44:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      48:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__vector_19>
      50:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      54:	27 13       	cpse	r18, r23
      56:	27 13       	cpse	r18, r23
      58:	27 13       	cpse	r18, r23
      5a:	27 13       	cpse	r18, r23
      5c:	27 13       	cpse	r18, r23
      5e:	27 13       	cpse	r18, r23
      60:	60 13       	cpse	r22, r16
      62:	60 13       	cpse	r22, r16
      64:	60 13       	cpse	r22, r16
      66:	60 13       	cpse	r22, r16
      68:	60 13       	cpse	r22, r16
      6a:	60 13       	cpse	r22, r16
      6c:	60 13       	cpse	r22, r16
      6e:	60 13       	cpse	r22, r16
      70:	60 13       	cpse	r22, r16
      72:	60 13       	cpse	r22, r16
      74:	60 13       	cpse	r22, r16
      76:	60 13       	cpse	r22, r16
      78:	fe 12       	cpse	r15, r30
      7a:	60 13       	cpse	r22, r16
      7c:	60 13       	cpse	r22, r16
      7e:	60 13       	cpse	r22, r16
      80:	fe 12       	cpse	r15, r30
      82:	60 13       	cpse	r22, r16
      84:	60 13       	cpse	r22, r16
      86:	60 13       	cpse	r22, r16
      88:	60 13       	cpse	r22, r16
      8a:	60 13       	cpse	r22, r16
      8c:	fe 12       	cpse	r15, r30
      8e:	60 13       	cpse	r22, r16
      90:	60 13       	cpse	r22, r16
      92:	60 13       	cpse	r22, r16
      94:	60 13       	cpse	r22, r16
      96:	60 13       	cpse	r22, r16
      98:	fe 12       	cpse	r15, r30
      9a:	fe 12       	cpse	r15, r30
      9c:	60 13       	cpse	r22, r16
      9e:	3a 13       	cpse	r19, r26
      a0:	3a 13       	cpse	r19, r26
      a2:	3a 13       	cpse	r19, r26
      a4:	4d 13       	cpse	r20, r29
      a6:	60 13       	cpse	r22, r16
      a8:	60 13       	cpse	r22, r16
      aa:	60 13       	cpse	r22, r16
      ac:	60 13       	cpse	r22, r16
      ae:	60 13       	cpse	r22, r16
      b0:	60 13       	cpse	r22, r16
      b2:	60 13       	cpse	r22, r16
      b4:	60 13       	cpse	r22, r16
      b6:	60 13       	cpse	r22, r16
      b8:	60 13       	cpse	r22, r16
      ba:	60 13       	cpse	r22, r16
      bc:	60 13       	cpse	r22, r16
      be:	60 13       	cpse	r22, r16
      c0:	60 13       	cpse	r22, r16
      c2:	60 13       	cpse	r22, r16
      c4:	60 13       	cpse	r22, r16
      c6:	60 13       	cpse	r22, r16
      c8:	60 13       	cpse	r22, r16
      ca:	60 13       	cpse	r22, r16
      cc:	60 13       	cpse	r22, r16
      ce:	60 13       	cpse	r22, r16
      d0:	60 13       	cpse	r22, r16
      d2:	60 13       	cpse	r22, r16
      d4:	60 13       	cpse	r22, r16
      d6:	60 13       	cpse	r22, r16
      d8:	60 13       	cpse	r22, r16
      da:	60 13       	cpse	r22, r16
      dc:	60 13       	cpse	r22, r16
      de:	3a 13       	cpse	r19, r26
      e0:	3a 13       	cpse	r19, r26
      e2:	3a 13       	cpse	r19, r26
      e4:	4d 13       	cpse	r20, r29

000000e6 <__ctors_end>:
      e6:	11 24       	eor	r1, r1
      e8:	1f be       	out	0x3f, r1	; 63
      ea:	cf e5       	ldi	r28, 0x5F	; 95
      ec:	d8 e0       	ldi	r29, 0x08	; 8
      ee:	de bf       	out	0x3e, r29	; 62
      f0:	cd bf       	out	0x3d, r28	; 61

000000f2 <__do_copy_data>:
      f2:	11 e0       	ldi	r17, 0x01	; 1
      f4:	a0 e6       	ldi	r26, 0x60	; 96
      f6:	b0 e0       	ldi	r27, 0x00	; 0
      f8:	e2 e9       	ldi	r30, 0x92	; 146
      fa:	ff e2       	ldi	r31, 0x2F	; 47
      fc:	02 c0       	rjmp	.+4      	; 0x102 <__do_copy_data+0x10>
      fe:	05 90       	lpm	r0, Z+
     100:	0d 92       	st	X+, r0
     102:	ae 30       	cpi	r26, 0x0E	; 14
     104:	b1 07       	cpc	r27, r17
     106:	d9 f7       	brne	.-10     	; 0xfe <__do_copy_data+0xc>

00000108 <__do_clear_bss>:
     108:	25 e0       	ldi	r18, 0x05	; 5
     10a:	ae e0       	ldi	r26, 0x0E	; 14
     10c:	b1 e0       	ldi	r27, 0x01	; 1
     10e:	01 c0       	rjmp	.+2      	; 0x112 <.do_clear_bss_start>

00000110 <.do_clear_bss_loop>:
     110:	1d 92       	st	X+, r1

00000112 <.do_clear_bss_start>:
     112:	a8 3d       	cpi	r26, 0xD8	; 216
     114:	b2 07       	cpc	r27, r18
     116:	e1 f7       	brne	.-8      	; 0x110 <.do_clear_bss_loop>
     118:	0e 94 e6 12 	call	0x25cc	; 0x25cc <main>
     11c:	0c 94 c7 17 	jmp	0x2f8e	; 0x2f8e <_exit>

00000120 <__bad_interrupt>:
     120:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000124 <__vector_1>:
     124:	1f 92       	push	r1
     126:	0f 92       	push	r0
     128:	0f b6       	in	r0, 0x3f	; 63
     12a:	0f 92       	push	r0
     12c:	11 24       	eor	r1, r1
     12e:	2f 93       	push	r18
     130:	3f 93       	push	r19
     132:	4f 93       	push	r20
     134:	5f 93       	push	r21
     136:	6f 93       	push	r22
     138:	7f 93       	push	r23
     13a:	8f 93       	push	r24
     13c:	9f 93       	push	r25
     13e:	af 93       	push	r26
     140:	bf 93       	push	r27
     142:	ef 93       	push	r30
     144:	ff 93       	push	r31
     146:	e0 91 b8 05 	lds	r30, 0x05B8	; 0x8005b8 <GP_IRQ_CALL>
     14a:	f0 91 b9 05 	lds	r31, 0x05B9	; 0x8005b9 <GP_IRQ_CALL+0x1>
     14e:	09 95       	icall
     150:	ff 91       	pop	r31
     152:	ef 91       	pop	r30
     154:	bf 91       	pop	r27
     156:	af 91       	pop	r26
     158:	9f 91       	pop	r25
     15a:	8f 91       	pop	r24
     15c:	7f 91       	pop	r23
     15e:	6f 91       	pop	r22
     160:	5f 91       	pop	r21
     162:	4f 91       	pop	r20
     164:	3f 91       	pop	r19
     166:	2f 91       	pop	r18
     168:	0f 90       	pop	r0
     16a:	0f be       	out	0x3f, r0	; 63
     16c:	0f 90       	pop	r0
     16e:	1f 90       	pop	r1
     170:	18 95       	reti

00000172 <__vector_2>:
     172:	1f 92       	push	r1
     174:	0f 92       	push	r0
     176:	0f b6       	in	r0, 0x3f	; 63
     178:	0f 92       	push	r0
     17a:	11 24       	eor	r1, r1
     17c:	2f 93       	push	r18
     17e:	3f 93       	push	r19
     180:	4f 93       	push	r20
     182:	5f 93       	push	r21
     184:	6f 93       	push	r22
     186:	7f 93       	push	r23
     188:	8f 93       	push	r24
     18a:	9f 93       	push	r25
     18c:	af 93       	push	r26
     18e:	bf 93       	push	r27
     190:	ef 93       	push	r30
     192:	ff 93       	push	r31
     194:	e0 91 ba 05 	lds	r30, 0x05BA	; 0x8005ba <GP_IRQ_CALL+0x2>
     198:	f0 91 bb 05 	lds	r31, 0x05BB	; 0x8005bb <GP_IRQ_CALL+0x3>
     19c:	09 95       	icall
     19e:	ff 91       	pop	r31
     1a0:	ef 91       	pop	r30
     1a2:	bf 91       	pop	r27
     1a4:	af 91       	pop	r26
     1a6:	9f 91       	pop	r25
     1a8:	8f 91       	pop	r24
     1aa:	7f 91       	pop	r23
     1ac:	6f 91       	pop	r22
     1ae:	5f 91       	pop	r21
     1b0:	4f 91       	pop	r20
     1b2:	3f 91       	pop	r19
     1b4:	2f 91       	pop	r18
     1b6:	0f 90       	pop	r0
     1b8:	0f be       	out	0x3f, r0	; 63
     1ba:	0f 90       	pop	r0
     1bc:	1f 90       	pop	r1
     1be:	18 95       	reti

000001c0 <__vector_3>:
     1c0:	1f 92       	push	r1
     1c2:	0f 92       	push	r0
     1c4:	0f b6       	in	r0, 0x3f	; 63
     1c6:	0f 92       	push	r0
     1c8:	11 24       	eor	r1, r1
     1ca:	2f 93       	push	r18
     1cc:	3f 93       	push	r19
     1ce:	4f 93       	push	r20
     1d0:	5f 93       	push	r21
     1d2:	6f 93       	push	r22
     1d4:	7f 93       	push	r23
     1d6:	8f 93       	push	r24
     1d8:	9f 93       	push	r25
     1da:	af 93       	push	r26
     1dc:	bf 93       	push	r27
     1de:	ef 93       	push	r30
     1e0:	ff 93       	push	r31
     1e2:	e0 91 bc 05 	lds	r30, 0x05BC	; 0x8005bc <GP_IRQ_CALL+0x4>
     1e6:	f0 91 bd 05 	lds	r31, 0x05BD	; 0x8005bd <GP_IRQ_CALL+0x5>
     1ea:	09 95       	icall
     1ec:	ff 91       	pop	r31
     1ee:	ef 91       	pop	r30
     1f0:	bf 91       	pop	r27
     1f2:	af 91       	pop	r26
     1f4:	9f 91       	pop	r25
     1f6:	8f 91       	pop	r24
     1f8:	7f 91       	pop	r23
     1fa:	6f 91       	pop	r22
     1fc:	5f 91       	pop	r21
     1fe:	4f 91       	pop	r20
     200:	3f 91       	pop	r19
     202:	2f 91       	pop	r18
     204:	0f 90       	pop	r0
     206:	0f be       	out	0x3f, r0	; 63
     208:	0f 90       	pop	r0
     20a:	1f 90       	pop	r1
     20c:	18 95       	reti

0000020e <MCAL_GPIO_Init>:
     20e:	fc 01       	movw	r30, r24
     210:	db 01       	movw	r26, r22
     212:	11 96       	adiw	r26, 0x01	; 1
     214:	8c 91       	ld	r24, X
     216:	11 97       	sbiw	r26, 0x01	; 1
     218:	81 30       	cpi	r24, 0x01	; 1
     21a:	59 f4       	brne	.+22     	; 0x232 <MCAL_GPIO_Init+0x24>
     21c:	8c 91       	ld	r24, X
     21e:	80 95       	com	r24
     220:	91 81       	ldd	r25, Z+1	; 0x01
     222:	89 23       	and	r24, r25
     224:	81 83       	std	Z+1, r24	; 0x01
     226:	8c 91       	ld	r24, X
     228:	80 95       	com	r24
     22a:	92 81       	ldd	r25, Z+2	; 0x02
     22c:	89 23       	and	r24, r25
     22e:	82 83       	std	Z+2, r24	; 0x02
     230:	08 95       	ret
     232:	82 30       	cpi	r24, 0x02	; 2
     234:	51 f4       	brne	.+20     	; 0x24a <MCAL_GPIO_Init+0x3c>
     236:	8c 91       	ld	r24, X
     238:	80 95       	com	r24
     23a:	91 81       	ldd	r25, Z+1	; 0x01
     23c:	89 23       	and	r24, r25
     23e:	81 83       	std	Z+1, r24	; 0x01
     240:	8c 91       	ld	r24, X
     242:	92 81       	ldd	r25, Z+2	; 0x02
     244:	89 2b       	or	r24, r25
     246:	82 83       	std	Z+2, r24	; 0x02
     248:	08 95       	ret
     24a:	8c 91       	ld	r24, X
     24c:	91 81       	ldd	r25, Z+1	; 0x01
     24e:	89 2b       	or	r24, r25
     250:	81 83       	std	Z+1, r24	; 0x01
     252:	8c 91       	ld	r24, X
     254:	80 95       	com	r24
     256:	92 81       	ldd	r25, Z+2	; 0x02
     258:	89 23       	and	r24, r25
     25a:	82 83       	std	Z+2, r24	; 0x02
     25c:	08 95       	ret

0000025e <MCAL_GPIO_WritePin>:
     25e:	41 30       	cpi	r20, 0x01	; 1
     260:	29 f4       	brne	.+10     	; 0x26c <MCAL_GPIO_WritePin+0xe>
     262:	fc 01       	movw	r30, r24
     264:	22 81       	ldd	r18, Z+2	; 0x02
     266:	62 2b       	or	r22, r18
     268:	62 83       	std	Z+2, r22	; 0x02
     26a:	08 95       	ret
     26c:	41 11       	cpse	r20, r1
     26e:	05 c0       	rjmp	.+10     	; 0x27a <MCAL_GPIO_WritePin+0x1c>
     270:	60 95       	com	r22
     272:	fc 01       	movw	r30, r24
     274:	22 81       	ldd	r18, Z+2	; 0x02
     276:	62 23       	and	r22, r18
     278:	62 83       	std	Z+2, r22	; 0x02
     27a:	08 95       	ret

0000027c <MCAL_GPIO_WritePort>:
     27c:	fc 01       	movw	r30, r24
     27e:	62 83       	std	Z+2, r22	; 0x02
     280:	08 95       	ret

00000282 <__vector_19>:
     282:	1f 92       	push	r1
     284:	0f 92       	push	r0
     286:	0f b6       	in	r0, 0x3f	; 63
     288:	0f 92       	push	r0
     28a:	11 24       	eor	r1, r1
     28c:	2f 93       	push	r18
     28e:	3f 93       	push	r19
     290:	4f 93       	push	r20
     292:	5f 93       	push	r21
     294:	6f 93       	push	r22
     296:	7f 93       	push	r23
     298:	8f 93       	push	r24
     29a:	9f 93       	push	r25
     29c:	af 93       	push	r26
     29e:	bf 93       	push	r27
     2a0:	ef 93       	push	r30
     2a2:	ff 93       	push	r31
     2a4:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <__data_end>
     2a8:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <__data_end+0x1>
     2ac:	04 80       	ldd	r0, Z+4	; 0x04
     2ae:	f5 81       	ldd	r31, Z+5	; 0x05
     2b0:	e0 2d       	mov	r30, r0
     2b2:	09 95       	icall
     2b4:	ff 91       	pop	r31
     2b6:	ef 91       	pop	r30
     2b8:	bf 91       	pop	r27
     2ba:	af 91       	pop	r26
     2bc:	9f 91       	pop	r25
     2be:	8f 91       	pop	r24
     2c0:	7f 91       	pop	r23
     2c2:	6f 91       	pop	r22
     2c4:	5f 91       	pop	r21
     2c6:	4f 91       	pop	r20
     2c8:	3f 91       	pop	r19
     2ca:	2f 91       	pop	r18
     2cc:	0f 90       	pop	r0
     2ce:	0f be       	out	0x3f, r0	; 63
     2d0:	0f 90       	pop	r0
     2d2:	1f 90       	pop	r1
     2d4:	18 95       	reti

000002d6 <MCAL_PWM_Init>:
     2d6:	ff 92       	push	r15
     2d8:	0f 93       	push	r16
     2da:	1f 93       	push	r17
     2dc:	cf 93       	push	r28
     2de:	df 93       	push	r29
     2e0:	00 d0       	rcall	.+0      	; 0x2e2 <MCAL_PWM_Init+0xc>
     2e2:	cd b7       	in	r28, 0x3d	; 61
     2e4:	de b7       	in	r29, 0x3e	; 62
     2e6:	8c 01       	movw	r16, r24
     2e8:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <g_PWM_Config+0x1>
     2ec:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <g_PWM_Config>
     2f0:	fc 01       	movw	r30, r24
     2f2:	80 81       	ld	r24, Z
     2f4:	f8 2f       	mov	r31, r24
     2f6:	f2 60       	ori	r31, 0x02	; 2
     2f8:	ff 2e       	mov	r15, r31
     2fa:	88 23       	and	r24, r24
     2fc:	59 f0       	breq	.+22     	; 0x314 <MCAL_PWM_Init+0x3e>
     2fe:	80 e2       	ldi	r24, 0x20	; 32
     300:	89 83       	std	Y+1, r24	; 0x01
     302:	83 e0       	ldi	r24, 0x03	; 3
     304:	8a 83       	std	Y+2, r24	; 0x02
     306:	be 01       	movw	r22, r28
     308:	6f 5f       	subi	r22, 0xFF	; 255
     30a:	7f 4f       	sbci	r23, 0xFF	; 255
     30c:	80 e3       	ldi	r24, 0x30	; 48
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
     314:	f8 01       	movw	r30, r16
     316:	81 81       	ldd	r24, Z+1	; 0x01
     318:	f8 2a       	or	r15, r24
     31a:	88 23       	and	r24, r24
     31c:	59 f0       	breq	.+22     	; 0x334 <MCAL_PWM_Init+0x5e>
     31e:	80 e1       	ldi	r24, 0x10	; 16
     320:	89 83       	std	Y+1, r24	; 0x01
     322:	83 e0       	ldi	r24, 0x03	; 3
     324:	8a 83       	std	Y+2, r24	; 0x02
     326:	be 01       	movw	r22, r28
     328:	6f 5f       	subi	r22, 0xFF	; 255
     32a:	7f 4f       	sbci	r23, 0xFF	; 255
     32c:	80 e3       	ldi	r24, 0x30	; 48
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
     334:	f8 01       	movw	r30, r16
     336:	82 81       	ldd	r24, Z+2	; 0x02
     338:	88 61       	ori	r24, 0x18	; 24
     33a:	93 81       	ldd	r25, Z+3	; 0x03
     33c:	91 30       	cpi	r25, 0x01	; 1
     33e:	39 f4       	brne	.+14     	; 0x34e <MCAL_PWM_Init+0x78>
     340:	99 b7       	in	r25, 0x39	; 57
     342:	94 60       	ori	r25, 0x04	; 4
     344:	99 bf       	out	0x39, r25	; 57
     346:	9f b7       	in	r25, 0x3f	; 63
     348:	90 68       	ori	r25, 0x80	; 128
     34a:	9f bf       	out	0x3f, r25	; 63
     34c:	06 c0       	rjmp	.+12     	; 0x35a <MCAL_PWM_Init+0x84>
     34e:	99 b7       	in	r25, 0x39	; 57
     350:	9b 7f       	andi	r25, 0xFB	; 251
     352:	99 bf       	out	0x39, r25	; 57
     354:	9f b7       	in	r25, 0x3f	; 63
     356:	9f 77       	andi	r25, 0x7F	; 127
     358:	9f bf       	out	0x3f, r25	; 63
     35a:	f8 01       	movw	r30, r16
     35c:	94 81       	ldd	r25, Z+4	; 0x04
     35e:	91 30       	cpi	r25, 0x01	; 1
     360:	39 f4       	brne	.+14     	; 0x370 <MCAL_PWM_Init+0x9a>
     362:	99 b7       	in	r25, 0x39	; 57
     364:	90 61       	ori	r25, 0x10	; 16
     366:	99 bf       	out	0x39, r25	; 57
     368:	9f b7       	in	r25, 0x3f	; 63
     36a:	90 68       	ori	r25, 0x80	; 128
     36c:	9f bf       	out	0x3f, r25	; 63
     36e:	06 c0       	rjmp	.+12     	; 0x37c <MCAL_PWM_Init+0xa6>
     370:	99 b7       	in	r25, 0x39	; 57
     372:	9f 7e       	andi	r25, 0xEF	; 239
     374:	99 bf       	out	0x39, r25	; 57
     376:	9f b7       	in	r25, 0x3f	; 63
     378:	9f 77       	andi	r25, 0x7F	; 127
     37a:	9f bf       	out	0x3f, r25	; 63
     37c:	f8 01       	movw	r30, r16
     37e:	94 81       	ldd	r25, Z+4	; 0x04
     380:	91 30       	cpi	r25, 0x01	; 1
     382:	39 f4       	brne	.+14     	; 0x392 <MCAL_PWM_Init+0xbc>
     384:	99 b7       	in	r25, 0x39	; 57
     386:	90 61       	ori	r25, 0x10	; 16
     388:	99 bf       	out	0x39, r25	; 57
     38a:	9f b7       	in	r25, 0x3f	; 63
     38c:	90 68       	ori	r25, 0x80	; 128
     38e:	9f bf       	out	0x3f, r25	; 63
     390:	06 c0       	rjmp	.+12     	; 0x39e <MCAL_PWM_Init+0xc8>
     392:	99 b7       	in	r25, 0x39	; 57
     394:	97 7f       	andi	r25, 0xF7	; 247
     396:	99 bf       	out	0x39, r25	; 57
     398:	9f b7       	in	r25, 0x3f	; 63
     39a:	9f 77       	andi	r25, 0x7F	; 127
     39c:	9f bf       	out	0x3f, r25	; 63
     39e:	f8 01       	movw	r30, r16
     3a0:	93 85       	ldd	r25, Z+11	; 0x0b
     3a2:	97 bd       	out	0x27, r25	; 39
     3a4:	92 85       	ldd	r25, Z+10	; 0x0a
     3a6:	96 bd       	out	0x26, r25	; 38
     3a8:	91 85       	ldd	r25, Z+9	; 0x09
     3aa:	99 bd       	out	0x29, r25	; 41
     3ac:	90 85       	ldd	r25, Z+8	; 0x08
     3ae:	98 bd       	out	0x28, r25	; 40
     3b0:	9f b5       	in	r25, 0x2f	; 47
     3b2:	f9 2a       	or	r15, r25
     3b4:	ff bc       	out	0x2f, r15	; 47
     3b6:	9e b5       	in	r25, 0x2e	; 46
     3b8:	89 2b       	or	r24, r25
     3ba:	8e bd       	out	0x2e, r24	; 46
     3bc:	0f 90       	pop	r0
     3be:	0f 90       	pop	r0
     3c0:	df 91       	pop	r29
     3c2:	cf 91       	pop	r28
     3c4:	1f 91       	pop	r17
     3c6:	0f 91       	pop	r16
     3c8:	ff 90       	pop	r15
     3ca:	08 95       	ret

000003cc <MCAL_PWM_Set_Compare_Value>:
     3cc:	61 11       	cpse	r22, r1
     3ce:	03 c0       	rjmp	.+6      	; 0x3d6 <MCAL_PWM_Set_Compare_Value+0xa>
     3d0:	9b bd       	out	0x2b, r25	; 43
     3d2:	8a bd       	out	0x2a, r24	; 42
     3d4:	08 95       	ret
     3d6:	99 bd       	out	0x29, r25	; 41
     3d8:	88 bd       	out	0x28, r24	; 40
     3da:	08 95       	ret

000003dc <__vector_8>:
     3dc:	1f 92       	push	r1
     3de:	0f 92       	push	r0
     3e0:	0f b6       	in	r0, 0x3f	; 63
     3e2:	0f 92       	push	r0
     3e4:	11 24       	eor	r1, r1
     3e6:	2f 93       	push	r18
     3e8:	3f 93       	push	r19
     3ea:	4f 93       	push	r20
     3ec:	5f 93       	push	r21
     3ee:	6f 93       	push	r22
     3f0:	7f 93       	push	r23
     3f2:	8f 93       	push	r24
     3f4:	9f 93       	push	r25
     3f6:	af 93       	push	r26
     3f8:	bf 93       	push	r27
     3fa:	ef 93       	push	r30
     3fc:	ff 93       	push	r31
     3fe:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <g_PWM_Config>
     402:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <g_PWM_Config+0x1>
     406:	00 88       	ldd	r0, Z+16	; 0x10
     408:	f1 89       	ldd	r31, Z+17	; 0x11
     40a:	e0 2d       	mov	r30, r0
     40c:	09 95       	icall
     40e:	ff 91       	pop	r31
     410:	ef 91       	pop	r30
     412:	bf 91       	pop	r27
     414:	af 91       	pop	r26
     416:	9f 91       	pop	r25
     418:	8f 91       	pop	r24
     41a:	7f 91       	pop	r23
     41c:	6f 91       	pop	r22
     41e:	5f 91       	pop	r21
     420:	4f 91       	pop	r20
     422:	3f 91       	pop	r19
     424:	2f 91       	pop	r18
     426:	0f 90       	pop	r0
     428:	0f be       	out	0x3f, r0	; 63
     42a:	0f 90       	pop	r0
     42c:	1f 90       	pop	r1
     42e:	18 95       	reti

00000430 <__vector_12>:
     430:	1f 92       	push	r1
     432:	0f 92       	push	r0
     434:	0f b6       	in	r0, 0x3f	; 63
     436:	0f 92       	push	r0
     438:	11 24       	eor	r1, r1
     43a:	2f 93       	push	r18
     43c:	3f 93       	push	r19
     43e:	4f 93       	push	r20
     440:	5f 93       	push	r21
     442:	6f 93       	push	r22
     444:	7f 93       	push	r23
     446:	8f 93       	push	r24
     448:	9f 93       	push	r25
     44a:	af 93       	push	r26
     44c:	bf 93       	push	r27
     44e:	ef 93       	push	r30
     450:	ff 93       	push	r31
     452:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <g_SPI_Config>
     456:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <g_SPI_Config+0x1>
     45a:	07 80       	ldd	r0, Z+7	; 0x07
     45c:	f0 85       	ldd	r31, Z+8	; 0x08
     45e:	e0 2d       	mov	r30, r0
     460:	09 95       	icall
     462:	ff 91       	pop	r31
     464:	ef 91       	pop	r30
     466:	bf 91       	pop	r27
     468:	af 91       	pop	r26
     46a:	9f 91       	pop	r25
     46c:	8f 91       	pop	r24
     46e:	7f 91       	pop	r23
     470:	6f 91       	pop	r22
     472:	5f 91       	pop	r21
     474:	4f 91       	pop	r20
     476:	3f 91       	pop	r19
     478:	2f 91       	pop	r18
     47a:	0f 90       	pop	r0
     47c:	0f be       	out	0x3f, r0	; 63
     47e:	0f 90       	pop	r0
     480:	1f 90       	pop	r1
     482:	18 95       	reti

00000484 <MCAL_TIMER0_Init>:
     484:	ff 92       	push	r15
     486:	0f 93       	push	r16
     488:	1f 93       	push	r17
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
     48e:	00 d0       	rcall	.+0      	; 0x490 <MCAL_TIMER0_Init+0xc>
     490:	cd b7       	in	r28, 0x3d	; 61
     492:	de b7       	in	r29, 0x3e	; 62
     494:	8c 01       	movw	r16, r24
     496:	8a e0       	ldi	r24, 0x0A	; 10
     498:	f8 01       	movw	r30, r16
     49a:	ae eb       	ldi	r26, 0xBE	; 190
     49c:	b5 e0       	ldi	r27, 0x05	; 5
     49e:	01 90       	ld	r0, Z+
     4a0:	0d 92       	st	X+, r0
     4a2:	8a 95       	dec	r24
     4a4:	e1 f7       	brne	.-8      	; 0x49e <MCAL_TIMER0_Init+0x1a>
     4a6:	f8 01       	movw	r30, r16
     4a8:	f0 80       	ld	r15, Z
     4aa:	82 81       	ldd	r24, Z+2	; 0x02
     4ac:	f8 2a       	or	r15, r24
     4ae:	81 81       	ldd	r24, Z+1	; 0x01
     4b0:	88 23       	and	r24, r24
     4b2:	61 f0       	breq	.+24     	; 0x4cc <MCAL_TIMER0_Init+0x48>
     4b4:	f8 2a       	or	r15, r24
     4b6:	88 e0       	ldi	r24, 0x08	; 8
     4b8:	89 83       	std	Y+1, r24	; 0x01
     4ba:	83 e0       	ldi	r24, 0x03	; 3
     4bc:	8a 83       	std	Y+2, r24	; 0x02
     4be:	be 01       	movw	r22, r28
     4c0:	6f 5f       	subi	r22, 0xFF	; 255
     4c2:	7f 4f       	sbci	r23, 0xFF	; 255
     4c4:	86 e3       	ldi	r24, 0x36	; 54
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
     4cc:	f8 01       	movw	r30, r16
     4ce:	94 81       	ldd	r25, Z+4	; 0x04
     4d0:	83 81       	ldd	r24, Z+3	; 0x03
     4d2:	89 2b       	or	r24, r25
     4d4:	95 81       	ldd	r25, Z+5	; 0x05
     4d6:	9c bf       	out	0x3c, r25	; 60
     4d8:	94 81       	ldd	r25, Z+4	; 0x04
     4da:	91 30       	cpi	r25, 0x01	; 1
     4dc:	39 f4       	brne	.+14     	; 0x4ec <MCAL_TIMER0_Init+0x68>
     4de:	99 b7       	in	r25, 0x39	; 57
     4e0:	91 60       	ori	r25, 0x01	; 1
     4e2:	99 bf       	out	0x39, r25	; 57
     4e4:	9f b7       	in	r25, 0x3f	; 63
     4e6:	90 68       	ori	r25, 0x80	; 128
     4e8:	9f bf       	out	0x3f, r25	; 63
     4ea:	06 c0       	rjmp	.+12     	; 0x4f8 <MCAL_TIMER0_Init+0x74>
     4ec:	99 b7       	in	r25, 0x39	; 57
     4ee:	9e 7f       	andi	r25, 0xFE	; 254
     4f0:	99 bf       	out	0x39, r25	; 57
     4f2:	9f b7       	in	r25, 0x3f	; 63
     4f4:	9f 77       	andi	r25, 0x7F	; 127
     4f6:	9f bf       	out	0x3f, r25	; 63
     4f8:	f8 01       	movw	r30, r16
     4fa:	93 81       	ldd	r25, Z+3	; 0x03
     4fc:	91 30       	cpi	r25, 0x01	; 1
     4fe:	39 f4       	brne	.+14     	; 0x50e <MCAL_TIMER0_Init+0x8a>
     500:	99 b7       	in	r25, 0x39	; 57
     502:	92 60       	ori	r25, 0x02	; 2
     504:	99 bf       	out	0x39, r25	; 57
     506:	9f b7       	in	r25, 0x3f	; 63
     508:	90 68       	ori	r25, 0x80	; 128
     50a:	9f bf       	out	0x3f, r25	; 63
     50c:	06 c0       	rjmp	.+12     	; 0x51a <MCAL_TIMER0_Init+0x96>
     50e:	99 b7       	in	r25, 0x39	; 57
     510:	9d 7f       	andi	r25, 0xFD	; 253
     512:	99 bf       	out	0x39, r25	; 57
     514:	9f b7       	in	r25, 0x3f	; 63
     516:	9f 77       	andi	r25, 0x7F	; 127
     518:	9f bf       	out	0x3f, r25	; 63
     51a:	f3 be       	out	0x33, r15	; 51
     51c:	89 bf       	out	0x39, r24	; 57
     51e:	0f 90       	pop	r0
     520:	0f 90       	pop	r0
     522:	df 91       	pop	r29
     524:	cf 91       	pop	r28
     526:	1f 91       	pop	r17
     528:	0f 91       	pop	r16
     52a:	ff 90       	pop	r15
     52c:	08 95       	ret

0000052e <MCAL_TIMER0_Stop>:
     52e:	83 b7       	in	r24, 0x33	; 51
     530:	88 7f       	andi	r24, 0xF8	; 248
     532:	83 bf       	out	0x33, r24	; 51
     534:	83 b7       	in	r24, 0x33	; 51
     536:	8f 7c       	andi	r24, 0xCF	; 207
     538:	83 bf       	out	0x33, r24	; 51
     53a:	08 95       	ret

0000053c <MCAL_TIMER0_Start>:
     53c:	83 b7       	in	r24, 0x33	; 51
     53e:	85 60       	ori	r24, 0x05	; 5
     540:	83 bf       	out	0x33, r24	; 51
     542:	93 b7       	in	r25, 0x33	; 51
     544:	80 91 bf 05 	lds	r24, 0x05BF	; 0x8005bf <g_TIM0_Config+0x1>
     548:	89 2b       	or	r24, r25
     54a:	83 bf       	out	0x33, r24	; 51
     54c:	08 95       	ret

0000054e <__vector_11>:
     54e:	1f 92       	push	r1
     550:	0f 92       	push	r0
     552:	0f b6       	in	r0, 0x3f	; 63
     554:	0f 92       	push	r0
     556:	11 24       	eor	r1, r1
     558:	2f 93       	push	r18
     55a:	3f 93       	push	r19
     55c:	4f 93       	push	r20
     55e:	5f 93       	push	r21
     560:	6f 93       	push	r22
     562:	7f 93       	push	r23
     564:	8f 93       	push	r24
     566:	9f 93       	push	r25
     568:	af 93       	push	r26
     56a:	bf 93       	push	r27
     56c:	ef 93       	push	r30
     56e:	ff 93       	push	r31
     570:	e0 91 c4 05 	lds	r30, 0x05C4	; 0x8005c4 <g_TIM0_Config+0x6>
     574:	f0 91 c5 05 	lds	r31, 0x05C5	; 0x8005c5 <g_TIM0_Config+0x7>
     578:	09 95       	icall
     57a:	ff 91       	pop	r31
     57c:	ef 91       	pop	r30
     57e:	bf 91       	pop	r27
     580:	af 91       	pop	r26
     582:	9f 91       	pop	r25
     584:	8f 91       	pop	r24
     586:	7f 91       	pop	r23
     588:	6f 91       	pop	r22
     58a:	5f 91       	pop	r21
     58c:	4f 91       	pop	r20
     58e:	3f 91       	pop	r19
     590:	2f 91       	pop	r18
     592:	0f 90       	pop	r0
     594:	0f be       	out	0x3f, r0	; 63
     596:	0f 90       	pop	r0
     598:	1f 90       	pop	r1
     59a:	18 95       	reti

0000059c <MCAL_USART_Init>:
     59c:	0f 93       	push	r16
     59e:	1f 93       	push	r17
     5a0:	cf 93       	push	r28
     5a2:	df 93       	push	r29
     5a4:	00 d0       	rcall	.+0      	; 0x5a6 <MCAL_USART_Init+0xa>
     5a6:	cd b7       	in	r28, 0x3d	; 61
     5a8:	de b7       	in	r29, 0x3e	; 62
     5aa:	8c 01       	movw	r16, r24
     5ac:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <g_USART_Config+0x1>
     5b0:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <g_USART_Config>
     5b4:	fc 01       	movw	r30, r24
     5b6:	82 81       	ldd	r24, Z+2	; 0x02
     5b8:	9e ef       	ldi	r25, 0xFE	; 254
     5ba:	98 0f       	add	r25, r24
     5bc:	92 30       	cpi	r25, 0x02	; 2
     5be:	b8 f5       	brcc	.+110    	; 0x62e <MCAL_USART_Init+0x92>
     5c0:	80 b5       	in	r24, 0x20	; 32
     5c2:	80 68       	ori	r24, 0x80	; 128
     5c4:	80 bd       	out	0x20, r24	; 32
     5c6:	80 b5       	in	r24, 0x20	; 32
     5c8:	80 64       	ori	r24, 0x40	; 64
     5ca:	80 bd       	out	0x20, r24	; 32
     5cc:	81 81       	ldd	r24, Z+1	; 0x01
     5ce:	81 30       	cpi	r24, 0x01	; 1
     5d0:	41 f4       	brne	.+16     	; 0x5e2 <MCAL_USART_Init+0x46>
     5d2:	80 b5       	in	r24, 0x20	; 32
     5d4:	80 68       	ori	r24, 0x80	; 128
     5d6:	80 bd       	out	0x20, r24	; 32
     5d8:	90 b5       	in	r25, 0x20	; 32
     5da:	81 81       	ldd	r24, Z+1	; 0x01
     5dc:	89 2b       	or	r24, r25
     5de:	80 bd       	out	0x20, r24	; 32
     5e0:	0a c0       	rjmp	.+20     	; 0x5f6 <MCAL_USART_Init+0x5a>
     5e2:	8e 3f       	cpi	r24, 0xFE	; 254
     5e4:	41 f4       	brne	.+16     	; 0x5f6 <MCAL_USART_Init+0x5a>
     5e6:	80 b5       	in	r24, 0x20	; 32
     5e8:	80 68       	ori	r24, 0x80	; 128
     5ea:	80 bd       	out	0x20, r24	; 32
     5ec:	90 b5       	in	r25, 0x20	; 32
     5ee:	f8 01       	movw	r30, r16
     5f0:	81 81       	ldd	r24, Z+1	; 0x01
     5f2:	89 23       	and	r24, r25
     5f4:	80 bd       	out	0x20, r24	; 32
     5f6:	f8 01       	movw	r30, r16
     5f8:	65 81       	ldd	r22, Z+5	; 0x05
     5fa:	76 81       	ldd	r23, Z+6	; 0x06
     5fc:	80 e0       	ldi	r24, 0x00	; 0
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <__floatunsisf>
     604:	9b 01       	movw	r18, r22
     606:	ac 01       	movw	r20, r24
     608:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__addsf3>
     60c:	9b 01       	movw	r18, r22
     60e:	ac 01       	movw	r20, r24
     610:	60 e0       	ldi	r22, 0x00	; 0
     612:	74 e2       	ldi	r23, 0x24	; 36
     614:	84 ef       	ldi	r24, 0xF4	; 244
     616:	9a e4       	ldi	r25, 0x4A	; 74
     618:	0e 94 1c 16 	call	0x2c38	; 0x2c38 <__divsf3>
     61c:	20 e0       	ldi	r18, 0x00	; 0
     61e:	30 e0       	ldi	r19, 0x00	; 0
     620:	40 e0       	ldi	r20, 0x00	; 0
     622:	5f e3       	ldi	r21, 0x3F	; 63
     624:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <__subsf3>
     628:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <__fixunssfsi>
     62c:	4f c0       	rjmp	.+158    	; 0x6cc <MCAL_USART_Init+0x130>
     62e:	81 11       	cpse	r24, r1
     630:	27 c0       	rjmp	.+78     	; 0x680 <MCAL_USART_Init+0xe4>
     632:	80 b5       	in	r24, 0x20	; 32
     634:	80 68       	ori	r24, 0x80	; 128
     636:	80 bd       	out	0x20, r24	; 32
     638:	80 b5       	in	r24, 0x20	; 32
     63a:	8f 7b       	andi	r24, 0xBF	; 191
     63c:	80 bd       	out	0x20, r24	; 32
     63e:	8b b1       	in	r24, 0x0b	; 11
     640:	82 60       	ori	r24, 0x02	; 2
     642:	8b b9       	out	0x0b, r24	; 11
     644:	f8 01       	movw	r30, r16
     646:	65 81       	ldd	r22, Z+5	; 0x05
     648:	76 81       	ldd	r23, Z+6	; 0x06
     64a:	80 e0       	ldi	r24, 0x00	; 0
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <__floatunsisf>
     652:	20 e0       	ldi	r18, 0x00	; 0
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	40 e0       	ldi	r20, 0x00	; 0
     658:	51 e4       	ldi	r21, 0x41	; 65
     65a:	0e 94 4b 17 	call	0x2e96	; 0x2e96 <__mulsf3>
     65e:	9b 01       	movw	r18, r22
     660:	ac 01       	movw	r20, r24
     662:	60 e0       	ldi	r22, 0x00	; 0
     664:	74 e2       	ldi	r23, 0x24	; 36
     666:	84 ef       	ldi	r24, 0xF4	; 244
     668:	9a e4       	ldi	r25, 0x4A	; 74
     66a:	0e 94 1c 16 	call	0x2c38	; 0x2c38 <__divsf3>
     66e:	20 e0       	ldi	r18, 0x00	; 0
     670:	30 e0       	ldi	r19, 0x00	; 0
     672:	40 e0       	ldi	r20, 0x00	; 0
     674:	5f e3       	ldi	r21, 0x3F	; 63
     676:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <__subsf3>
     67a:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <__fixunssfsi>
     67e:	26 c0       	rjmp	.+76     	; 0x6cc <MCAL_USART_Init+0x130>
     680:	80 b5       	in	r24, 0x20	; 32
     682:	80 68       	ori	r24, 0x80	; 128
     684:	80 bd       	out	0x20, r24	; 32
     686:	80 b5       	in	r24, 0x20	; 32
     688:	8f 7b       	andi	r24, 0xBF	; 191
     68a:	80 bd       	out	0x20, r24	; 32
     68c:	8b b1       	in	r24, 0x0b	; 11
     68e:	8d 7f       	andi	r24, 0xFD	; 253
     690:	8b b9       	out	0x0b, r24	; 11
     692:	f8 01       	movw	r30, r16
     694:	65 81       	ldd	r22, Z+5	; 0x05
     696:	76 81       	ldd	r23, Z+6	; 0x06
     698:	80 e0       	ldi	r24, 0x00	; 0
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <__floatunsisf>
     6a0:	20 e0       	ldi	r18, 0x00	; 0
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	40 e8       	ldi	r20, 0x80	; 128
     6a6:	51 e4       	ldi	r21, 0x41	; 65
     6a8:	0e 94 4b 17 	call	0x2e96	; 0x2e96 <__mulsf3>
     6ac:	9b 01       	movw	r18, r22
     6ae:	ac 01       	movw	r20, r24
     6b0:	60 e0       	ldi	r22, 0x00	; 0
     6b2:	74 e2       	ldi	r23, 0x24	; 36
     6b4:	84 ef       	ldi	r24, 0xF4	; 244
     6b6:	9a e4       	ldi	r25, 0x4A	; 74
     6b8:	0e 94 1c 16 	call	0x2c38	; 0x2c38 <__divsf3>
     6bc:	20 e0       	ldi	r18, 0x00	; 0
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	40 e0       	ldi	r20, 0x00	; 0
     6c2:	5f e3       	ldi	r21, 0x3F	; 63
     6c4:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <__subsf3>
     6c8:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <__fixunssfsi>
     6cc:	f8 01       	movw	r30, r16
     6ce:	83 81       	ldd	r24, Z+3	; 0x03
     6d0:	83 30       	cpi	r24, 0x03	; 3
     6d2:	11 f1       	breq	.+68     	; 0x718 <MCAL_USART_Init+0x17c>
     6d4:	28 f4       	brcc	.+10     	; 0x6e0 <MCAL_USART_Init+0x144>
     6d6:	81 30       	cpi	r24, 0x01	; 1
     6d8:	41 f0       	breq	.+16     	; 0x6ea <MCAL_USART_Init+0x14e>
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	81 f0       	breq	.+32     	; 0x6fe <MCAL_USART_Init+0x162>
     6de:	3c c0       	rjmp	.+120    	; 0x758 <MCAL_USART_Init+0x1bc>
     6e0:	84 30       	cpi	r24, 0x04	; 4
     6e2:	39 f1       	breq	.+78     	; 0x732 <MCAL_USART_Init+0x196>
     6e4:	85 30       	cpi	r24, 0x05	; 5
     6e6:	79 f1       	breq	.+94     	; 0x746 <MCAL_USART_Init+0x1aa>
     6e8:	37 c0       	rjmp	.+110    	; 0x758 <MCAL_USART_Init+0x1bc>
     6ea:	8a b1       	in	r24, 0x0a	; 10
     6ec:	8b 7f       	andi	r24, 0xFB	; 251
     6ee:	8a b9       	out	0x0a, r24	; 10
     6f0:	80 b5       	in	r24, 0x20	; 32
     6f2:	80 68       	ori	r24, 0x80	; 128
     6f4:	80 bd       	out	0x20, r24	; 32
     6f6:	80 b5       	in	r24, 0x20	; 32
     6f8:	89 7f       	andi	r24, 0xF9	; 249
     6fa:	80 bd       	out	0x20, r24	; 32
     6fc:	2d c0       	rjmp	.+90     	; 0x758 <MCAL_USART_Init+0x1bc>
     6fe:	8a b1       	in	r24, 0x0a	; 10
     700:	8b 7f       	andi	r24, 0xFB	; 251
     702:	8a b9       	out	0x0a, r24	; 10
     704:	80 b5       	in	r24, 0x20	; 32
     706:	80 68       	ori	r24, 0x80	; 128
     708:	80 bd       	out	0x20, r24	; 32
     70a:	80 b5       	in	r24, 0x20	; 32
     70c:	89 7f       	andi	r24, 0xF9	; 249
     70e:	80 bd       	out	0x20, r24	; 32
     710:	80 b5       	in	r24, 0x20	; 32
     712:	82 60       	ori	r24, 0x02	; 2
     714:	80 bd       	out	0x20, r24	; 32
     716:	20 c0       	rjmp	.+64     	; 0x758 <MCAL_USART_Init+0x1bc>
     718:	8a b1       	in	r24, 0x0a	; 10
     71a:	8b 7f       	andi	r24, 0xFB	; 251
     71c:	8a b9       	out	0x0a, r24	; 10
     71e:	80 b5       	in	r24, 0x20	; 32
     720:	80 68       	ori	r24, 0x80	; 128
     722:	80 bd       	out	0x20, r24	; 32
     724:	80 b5       	in	r24, 0x20	; 32
     726:	89 7f       	andi	r24, 0xF9	; 249
     728:	80 bd       	out	0x20, r24	; 32
     72a:	80 b5       	in	r24, 0x20	; 32
     72c:	84 60       	ori	r24, 0x04	; 4
     72e:	80 bd       	out	0x20, r24	; 32
     730:	13 c0       	rjmp	.+38     	; 0x758 <MCAL_USART_Init+0x1bc>
     732:	8a b1       	in	r24, 0x0a	; 10
     734:	8b 7f       	andi	r24, 0xFB	; 251
     736:	8a b9       	out	0x0a, r24	; 10
     738:	80 b5       	in	r24, 0x20	; 32
     73a:	80 68       	ori	r24, 0x80	; 128
     73c:	80 bd       	out	0x20, r24	; 32
     73e:	80 b5       	in	r24, 0x20	; 32
     740:	86 60       	ori	r24, 0x06	; 6
     742:	80 bd       	out	0x20, r24	; 32
     744:	09 c0       	rjmp	.+18     	; 0x758 <MCAL_USART_Init+0x1bc>
     746:	8a b1       	in	r24, 0x0a	; 10
     748:	84 60       	ori	r24, 0x04	; 4
     74a:	8a b9       	out	0x0a, r24	; 10
     74c:	80 b5       	in	r24, 0x20	; 32
     74e:	80 68       	ori	r24, 0x80	; 128
     750:	80 bd       	out	0x20, r24	; 32
     752:	80 b5       	in	r24, 0x20	; 32
     754:	86 60       	ori	r24, 0x06	; 6
     756:	80 bd       	out	0x20, r24	; 32
     758:	f8 01       	movw	r30, r16
     75a:	84 81       	ldd	r24, Z+4	; 0x04
     75c:	88 30       	cpi	r24, 0x08	; 8
     75e:	51 f0       	breq	.+20     	; 0x774 <MCAL_USART_Init+0x1d8>
     760:	87 3f       	cpi	r24, 0xF7	; 247
     762:	81 f4       	brne	.+32     	; 0x784 <MCAL_USART_Init+0x1e8>
     764:	80 b5       	in	r24, 0x20	; 32
     766:	80 68       	ori	r24, 0x80	; 128
     768:	80 bd       	out	0x20, r24	; 32
     76a:	90 b5       	in	r25, 0x20	; 32
     76c:	84 81       	ldd	r24, Z+4	; 0x04
     76e:	89 23       	and	r24, r25
     770:	80 bd       	out	0x20, r24	; 32
     772:	08 c0       	rjmp	.+16     	; 0x784 <MCAL_USART_Init+0x1e8>
     774:	80 b5       	in	r24, 0x20	; 32
     776:	80 68       	ori	r24, 0x80	; 128
     778:	80 bd       	out	0x20, r24	; 32
     77a:	90 b5       	in	r25, 0x20	; 32
     77c:	f8 01       	movw	r30, r16
     77e:	84 81       	ldd	r24, Z+4	; 0x04
     780:	89 2b       	or	r24, r25
     782:	80 bd       	out	0x20, r24	; 32
     784:	f8 01       	movw	r30, r16
     786:	87 81       	ldd	r24, Z+7	; 0x07
     788:	80 33       	cpi	r24, 0x30	; 48
     78a:	b9 f0       	breq	.+46     	; 0x7ba <MCAL_USART_Init+0x21e>
     78c:	8f 3c       	cpi	r24, 0xCF	; 207
     78e:	19 f0       	breq	.+6      	; 0x796 <MCAL_USART_Init+0x1fa>
     790:	80 32       	cpi	r24, 0x20	; 32
     792:	d9 f4       	brne	.+54     	; 0x7ca <MCAL_USART_Init+0x22e>
     794:	09 c0       	rjmp	.+18     	; 0x7a8 <MCAL_USART_Init+0x20c>
     796:	80 b5       	in	r24, 0x20	; 32
     798:	80 68       	ori	r24, 0x80	; 128
     79a:	80 bd       	out	0x20, r24	; 32
     79c:	90 b5       	in	r25, 0x20	; 32
     79e:	f8 01       	movw	r30, r16
     7a0:	87 81       	ldd	r24, Z+7	; 0x07
     7a2:	89 23       	and	r24, r25
     7a4:	80 bd       	out	0x20, r24	; 32
     7a6:	11 c0       	rjmp	.+34     	; 0x7ca <MCAL_USART_Init+0x22e>
     7a8:	80 b5       	in	r24, 0x20	; 32
     7aa:	80 68       	ori	r24, 0x80	; 128
     7ac:	80 bd       	out	0x20, r24	; 32
     7ae:	90 b5       	in	r25, 0x20	; 32
     7b0:	f8 01       	movw	r30, r16
     7b2:	87 81       	ldd	r24, Z+7	; 0x07
     7b4:	89 2b       	or	r24, r25
     7b6:	80 bd       	out	0x20, r24	; 32
     7b8:	08 c0       	rjmp	.+16     	; 0x7ca <MCAL_USART_Init+0x22e>
     7ba:	80 b5       	in	r24, 0x20	; 32
     7bc:	80 68       	ori	r24, 0x80	; 128
     7be:	80 bd       	out	0x20, r24	; 32
     7c0:	90 b5       	in	r25, 0x20	; 32
     7c2:	f8 01       	movw	r30, r16
     7c4:	87 81       	ldd	r24, Z+7	; 0x07
     7c6:	89 2b       	or	r24, r25
     7c8:	80 bd       	out	0x20, r24	; 32
     7ca:	80 b5       	in	r24, 0x20	; 32
     7cc:	8f 77       	andi	r24, 0x7F	; 127
     7ce:	80 bd       	out	0x20, r24	; 32
     7d0:	70 bd       	out	0x20, r23	; 32
     7d2:	69 b9       	out	0x09, r22	; 9
     7d4:	f8 01       	movw	r30, r16
     7d6:	80 85       	ldd	r24, Z+8	; 0x08
     7d8:	81 30       	cpi	r24, 0x01	; 1
     7da:	69 f0       	breq	.+26     	; 0x7f6 <MCAL_USART_Init+0x25a>
     7dc:	28 f0       	brcs	.+10     	; 0x7e8 <MCAL_USART_Init+0x24c>
     7de:	82 30       	cpi	r24, 0x02	; 2
     7e0:	c1 f0       	breq	.+48     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     7e2:	83 30       	cpi	r24, 0x03	; 3
     7e4:	21 f1       	breq	.+72     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
     7e6:	30 c0       	rjmp	.+96     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     7e8:	8a b1       	in	r24, 0x0a	; 10
     7ea:	8f 71       	andi	r24, 0x1F	; 31
     7ec:	8a b9       	out	0x0a, r24	; 10
     7ee:	8f b7       	in	r24, 0x3f	; 63
     7f0:	8f 77       	andi	r24, 0x7F	; 127
     7f2:	8f bf       	out	0x3f, r24	; 63
     7f4:	29 c0       	rjmp	.+82     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     7f6:	f8 01       	movw	r30, r16
     7f8:	81 85       	ldd	r24, Z+9	; 0x09
     7fa:	92 85       	ldd	r25, Z+10	; 0x0a
     7fc:	90 93 c9 05 	sts	0x05C9, r25	; 0x8005c9 <GPU_IRQ_CALL+0x1>
     800:	80 93 c8 05 	sts	0x05C8, r24	; 0x8005c8 <GPU_IRQ_CALL>
     804:	8a b1       	in	r24, 0x0a	; 10
     806:	80 64       	ori	r24, 0x40	; 64
     808:	8a b9       	out	0x0a, r24	; 10
     80a:	8f b7       	in	r24, 0x3f	; 63
     80c:	80 68       	ori	r24, 0x80	; 128
     80e:	8f bf       	out	0x3f, r24	; 63
     810:	1b c0       	rjmp	.+54     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     812:	f8 01       	movw	r30, r16
     814:	81 85       	ldd	r24, Z+9	; 0x09
     816:	92 85       	ldd	r25, Z+10	; 0x0a
     818:	90 93 cb 05 	sts	0x05CB, r25	; 0x8005cb <GPU_IRQ_CALL+0x3>
     81c:	80 93 ca 05 	sts	0x05CA, r24	; 0x8005ca <GPU_IRQ_CALL+0x2>
     820:	8a b1       	in	r24, 0x0a	; 10
     822:	80 62       	ori	r24, 0x20	; 32
     824:	8a b9       	out	0x0a, r24	; 10
     826:	8f b7       	in	r24, 0x3f	; 63
     828:	80 68       	ori	r24, 0x80	; 128
     82a:	8f bf       	out	0x3f, r24	; 63
     82c:	0d c0       	rjmp	.+26     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     82e:	f8 01       	movw	r30, r16
     830:	81 85       	ldd	r24, Z+9	; 0x09
     832:	92 85       	ldd	r25, Z+10	; 0x0a
     834:	90 93 cd 05 	sts	0x05CD, r25	; 0x8005cd <GPU_IRQ_CALL+0x5>
     838:	80 93 cc 05 	sts	0x05CC, r24	; 0x8005cc <GPU_IRQ_CALL+0x4>
     83c:	8a b1       	in	r24, 0x0a	; 10
     83e:	80 68       	ori	r24, 0x80	; 128
     840:	8a b9       	out	0x0a, r24	; 10
     842:	8f b7       	in	r24, 0x3f	; 63
     844:	80 68       	ori	r24, 0x80	; 128
     846:	8f bf       	out	0x3f, r24	; 63
     848:	f8 01       	movw	r30, r16
     84a:	80 81       	ld	r24, Z
     84c:	9a b1       	in	r25, 0x0a	; 10
     84e:	89 2b       	or	r24, r25
     850:	8a b9       	out	0x0a, r24	; 10
     852:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <g_USART_Config>
     856:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <g_USART_Config+0x1>
     85a:	82 81       	ldd	r24, Z+2	; 0x02
     85c:	82 30       	cpi	r24, 0x02	; 2
     85e:	61 f4       	brne	.+24     	; 0x878 <__stack+0x19>
     860:	81 e0       	ldi	r24, 0x01	; 1
     862:	89 83       	std	Y+1, r24	; 0x01
     864:	83 e0       	ldi	r24, 0x03	; 3
     866:	8a 83       	std	Y+2, r24	; 0x02
     868:	be 01       	movw	r22, r28
     86a:	6f 5f       	subi	r22, 0xFF	; 255
     86c:	7f 4f       	sbci	r23, 0xFF	; 255
     86e:	86 e3       	ldi	r24, 0x36	; 54
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
     876:	0d c0       	rjmp	.+26     	; 0x892 <__stack+0x33>
     878:	83 30       	cpi	r24, 0x03	; 3
     87a:	59 f4       	brne	.+22     	; 0x892 <__stack+0x33>
     87c:	81 e0       	ldi	r24, 0x01	; 1
     87e:	89 83       	std	Y+1, r24	; 0x01
     880:	82 e0       	ldi	r24, 0x02	; 2
     882:	8a 83       	std	Y+2, r24	; 0x02
     884:	be 01       	movw	r22, r28
     886:	6f 5f       	subi	r22, 0xFF	; 255
     888:	7f 4f       	sbci	r23, 0xFF	; 255
     88a:	86 e3       	ldi	r24, 0x36	; 54
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
     892:	0f 90       	pop	r0
     894:	0f 90       	pop	r0
     896:	df 91       	pop	r29
     898:	cf 91       	pop	r28
     89a:	1f 91       	pop	r17
     89c:	0f 91       	pop	r16
     89e:	08 95       	ret

000008a0 <MCAL_USART_ReceiveData>:
     8a0:	61 11       	cpse	r22, r1
     8a2:	15 c0       	rjmp	.+42     	; 0x8ce <MCAL_USART_ReceiveData+0x2e>
     8a4:	5f 9b       	sbis	0x0b, 7	; 11
     8a6:	fe cf       	rjmp	.-4      	; 0x8a4 <MCAL_USART_ReceiveData+0x4>
     8a8:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <g_USART_Config>
     8ac:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <g_USART_Config+0x1>
     8b0:	23 81       	ldd	r18, Z+3	; 0x03
     8b2:	25 30       	cpi	r18, 0x05	; 5
     8b4:	31 f4       	brne	.+12     	; 0x8c2 <MCAL_USART_ReceiveData+0x22>
     8b6:	2a b1       	in	r18, 0x0a	; 10
     8b8:	26 95       	lsr	r18
     8ba:	21 70       	andi	r18, 0x01	; 1
     8bc:	fc 01       	movw	r30, r24
     8be:	10 82       	st	Z, r1
     8c0:	21 83       	std	Z+1, r18	; 0x01
     8c2:	2c b1       	in	r18, 0x0c	; 12
     8c4:	30 e0       	ldi	r19, 0x00	; 0
     8c6:	fc 01       	movw	r30, r24
     8c8:	31 83       	std	Z+1, r19	; 0x01
     8ca:	20 83       	st	Z, r18
     8cc:	08 95       	ret
     8ce:	5f 9b       	sbis	0x0b, 7	; 11
     8d0:	12 c0       	rjmp	.+36     	; 0x8f6 <MCAL_USART_ReceiveData+0x56>
     8d2:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <g_USART_Config>
     8d6:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <g_USART_Config+0x1>
     8da:	23 81       	ldd	r18, Z+3	; 0x03
     8dc:	25 30       	cpi	r18, 0x05	; 5
     8de:	31 f4       	brne	.+12     	; 0x8ec <MCAL_USART_ReceiveData+0x4c>
     8e0:	2a b1       	in	r18, 0x0a	; 10
     8e2:	26 95       	lsr	r18
     8e4:	21 70       	andi	r18, 0x01	; 1
     8e6:	fc 01       	movw	r30, r24
     8e8:	10 82       	st	Z, r1
     8ea:	21 83       	std	Z+1, r18	; 0x01
     8ec:	2c b1       	in	r18, 0x0c	; 12
     8ee:	30 e0       	ldi	r19, 0x00	; 0
     8f0:	fc 01       	movw	r30, r24
     8f2:	31 83       	std	Z+1, r19	; 0x01
     8f4:	20 83       	st	Z, r18
     8f6:	08 95       	ret

000008f8 <__vector_13>:
     8f8:	1f 92       	push	r1
     8fa:	0f 92       	push	r0
     8fc:	0f b6       	in	r0, 0x3f	; 63
     8fe:	0f 92       	push	r0
     900:	11 24       	eor	r1, r1
     902:	2f 93       	push	r18
     904:	3f 93       	push	r19
     906:	4f 93       	push	r20
     908:	5f 93       	push	r21
     90a:	6f 93       	push	r22
     90c:	7f 93       	push	r23
     90e:	8f 93       	push	r24
     910:	9f 93       	push	r25
     912:	af 93       	push	r26
     914:	bf 93       	push	r27
     916:	ef 93       	push	r30
     918:	ff 93       	push	r31
     91a:	e0 91 cc 05 	lds	r30, 0x05CC	; 0x8005cc <GPU_IRQ_CALL+0x4>
     91e:	f0 91 cd 05 	lds	r31, 0x05CD	; 0x8005cd <GPU_IRQ_CALL+0x5>
     922:	09 95       	icall
     924:	ff 91       	pop	r31
     926:	ef 91       	pop	r30
     928:	bf 91       	pop	r27
     92a:	af 91       	pop	r26
     92c:	9f 91       	pop	r25
     92e:	8f 91       	pop	r24
     930:	7f 91       	pop	r23
     932:	6f 91       	pop	r22
     934:	5f 91       	pop	r21
     936:	4f 91       	pop	r20
     938:	3f 91       	pop	r19
     93a:	2f 91       	pop	r18
     93c:	0f 90       	pop	r0
     93e:	0f be       	out	0x3f, r0	; 63
     940:	0f 90       	pop	r0
     942:	1f 90       	pop	r1
     944:	18 95       	reti

00000946 <__vector_14>:
     946:	1f 92       	push	r1
     948:	0f 92       	push	r0
     94a:	0f b6       	in	r0, 0x3f	; 63
     94c:	0f 92       	push	r0
     94e:	11 24       	eor	r1, r1
     950:	2f 93       	push	r18
     952:	3f 93       	push	r19
     954:	4f 93       	push	r20
     956:	5f 93       	push	r21
     958:	6f 93       	push	r22
     95a:	7f 93       	push	r23
     95c:	8f 93       	push	r24
     95e:	9f 93       	push	r25
     960:	af 93       	push	r26
     962:	bf 93       	push	r27
     964:	ef 93       	push	r30
     966:	ff 93       	push	r31
     968:	e0 91 ca 05 	lds	r30, 0x05CA	; 0x8005ca <GPU_IRQ_CALL+0x2>
     96c:	f0 91 cb 05 	lds	r31, 0x05CB	; 0x8005cb <GPU_IRQ_CALL+0x3>
     970:	09 95       	icall
     972:	ff 91       	pop	r31
     974:	ef 91       	pop	r30
     976:	bf 91       	pop	r27
     978:	af 91       	pop	r26
     97a:	9f 91       	pop	r25
     97c:	8f 91       	pop	r24
     97e:	7f 91       	pop	r23
     980:	6f 91       	pop	r22
     982:	5f 91       	pop	r21
     984:	4f 91       	pop	r20
     986:	3f 91       	pop	r19
     988:	2f 91       	pop	r18
     98a:	0f 90       	pop	r0
     98c:	0f be       	out	0x3f, r0	; 63
     98e:	0f 90       	pop	r0
     990:	1f 90       	pop	r1
     992:	18 95       	reti

00000994 <__vector_15>:
     994:	1f 92       	push	r1
     996:	0f 92       	push	r0
     998:	0f b6       	in	r0, 0x3f	; 63
     99a:	0f 92       	push	r0
     99c:	11 24       	eor	r1, r1
     99e:	2f 93       	push	r18
     9a0:	3f 93       	push	r19
     9a2:	4f 93       	push	r20
     9a4:	5f 93       	push	r21
     9a6:	6f 93       	push	r22
     9a8:	7f 93       	push	r23
     9aa:	8f 93       	push	r24
     9ac:	9f 93       	push	r25
     9ae:	af 93       	push	r26
     9b0:	bf 93       	push	r27
     9b2:	ef 93       	push	r30
     9b4:	ff 93       	push	r31
     9b6:	e0 91 c8 05 	lds	r30, 0x05C8	; 0x8005c8 <GPU_IRQ_CALL>
     9ba:	f0 91 c9 05 	lds	r31, 0x05C9	; 0x8005c9 <GPU_IRQ_CALL+0x1>
     9be:	09 95       	icall
     9c0:	ff 91       	pop	r31
     9c2:	ef 91       	pop	r30
     9c4:	bf 91       	pop	r27
     9c6:	af 91       	pop	r26
     9c8:	9f 91       	pop	r25
     9ca:	8f 91       	pop	r24
     9cc:	7f 91       	pop	r23
     9ce:	6f 91       	pop	r22
     9d0:	5f 91       	pop	r21
     9d2:	4f 91       	pop	r20
     9d4:	3f 91       	pop	r19
     9d6:	2f 91       	pop	r18
     9d8:	0f 90       	pop	r0
     9da:	0f be       	out	0x3f, r0	; 63
     9dc:	0f 90       	pop	r0
     9de:	1f 90       	pop	r1
     9e0:	18 95       	reti

000009e2 <prvHeapInit>:
     9e2:	eb e1       	ldi	r30, 0x1B	; 27
     9e4:	f1 e0       	ldi	r31, 0x01	; 1
     9e6:	80 e2       	ldi	r24, 0x20	; 32
     9e8:	91 e0       	ldi	r25, 0x01	; 1
     9ea:	91 83       	std	Z+1, r25	; 0x01
     9ec:	80 83       	st	Z, r24
     9ee:	13 82       	std	Z+3, r1	; 0x03
     9f0:	12 82       	std	Z+2, r1	; 0x02
     9f2:	e7 e1       	ldi	r30, 0x17	; 23
     9f4:	f1 e0       	ldi	r31, 0x01	; 1
     9f6:	87 ee       	ldi	r24, 0xE7	; 231
     9f8:	93 e0       	ldi	r25, 0x03	; 3
     9fa:	93 83       	std	Z+3, r25	; 0x03
     9fc:	82 83       	std	Z+2, r24	; 0x02
     9fe:	11 82       	std	Z+1, r1	; 0x01
     a00:	10 82       	st	Z, r1
     a02:	af e1       	ldi	r26, 0x1F	; 31
     a04:	b1 e0       	ldi	r27, 0x01	; 1
     a06:	14 96       	adiw	r26, 0x04	; 4
     a08:	9c 93       	st	X, r25
     a0a:	8e 93       	st	-X, r24
     a0c:	13 97       	sbiw	r26, 0x03	; 3
     a0e:	12 96       	adiw	r26, 0x02	; 2
     a10:	fc 93       	st	X, r31
     a12:	ee 93       	st	-X, r30
     a14:	11 97       	sbiw	r26, 0x01	; 1
     a16:	08 95       	ret

00000a18 <pvPortMalloc>:
     a18:	0f 93       	push	r16
     a1a:	1f 93       	push	r17
     a1c:	cf 93       	push	r28
     a1e:	df 93       	push	r29
     a20:	ec 01       	movw	r28, r24
     a22:	0e 94 bc 0c 	call	0x1978	; 0x1978 <vTaskSuspendAll>
     a26:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <xHeapHasBeenInitialised.2079>
     a2a:	81 11       	cpse	r24, r1
     a2c:	05 c0       	rjmp	.+10     	; 0xa38 <pvPortMalloc+0x20>
     a2e:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <prvHeapInit>
     a32:	81 e0       	ldi	r24, 0x01	; 1
     a34:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <xHeapHasBeenInitialised.2079>
     a38:	20 97       	sbiw	r28, 0x00	; 0
     a3a:	09 f0       	breq	.+2      	; 0xa3e <pvPortMalloc+0x26>
     a3c:	24 96       	adiw	r28, 0x04	; 4
     a3e:	ce 01       	movw	r24, r28
     a40:	01 97       	sbiw	r24, 0x01	; 1
     a42:	86 3e       	cpi	r24, 0xE6	; 230
     a44:	93 40       	sbci	r25, 0x03	; 3
     a46:	08 f0       	brcs	.+2      	; 0xa4a <pvPortMalloc+0x32>
     a48:	56 c0       	rjmp	.+172    	; 0xaf6 <pvPortMalloc+0xde>
     a4a:	e0 91 1b 01 	lds	r30, 0x011B	; 0x80011b <xStart>
     a4e:	f0 91 1c 01 	lds	r31, 0x011C	; 0x80011c <xStart+0x1>
     a52:	ab e1       	ldi	r26, 0x1B	; 27
     a54:	b1 e0       	ldi	r27, 0x01	; 1
     a56:	02 c0       	rjmp	.+4      	; 0xa5c <pvPortMalloc+0x44>
     a58:	df 01       	movw	r26, r30
     a5a:	fc 01       	movw	r30, r24
     a5c:	82 81       	ldd	r24, Z+2	; 0x02
     a5e:	93 81       	ldd	r25, Z+3	; 0x03
     a60:	8c 17       	cp	r24, r28
     a62:	9d 07       	cpc	r25, r29
     a64:	20 f4       	brcc	.+8      	; 0xa6e <pvPortMalloc+0x56>
     a66:	80 81       	ld	r24, Z
     a68:	91 81       	ldd	r25, Z+1	; 0x01
     a6a:	00 97       	sbiw	r24, 0x00	; 0
     a6c:	a9 f7       	brne	.-22     	; 0xa58 <pvPortMalloc+0x40>
     a6e:	81 e0       	ldi	r24, 0x01	; 1
     a70:	e7 31       	cpi	r30, 0x17	; 23
     a72:	f8 07       	cpc	r31, r24
     a74:	09 f4       	brne	.+2      	; 0xa78 <pvPortMalloc+0x60>
     a76:	42 c0       	rjmp	.+132    	; 0xafc <pvPortMalloc+0xe4>
     a78:	0d 91       	ld	r16, X+
     a7a:	1c 91       	ld	r17, X
     a7c:	11 97       	sbiw	r26, 0x01	; 1
     a7e:	0c 5f       	subi	r16, 0xFC	; 252
     a80:	1f 4f       	sbci	r17, 0xFF	; 255
     a82:	80 81       	ld	r24, Z
     a84:	91 81       	ldd	r25, Z+1	; 0x01
     a86:	8d 93       	st	X+, r24
     a88:	9c 93       	st	X, r25
     a8a:	82 81       	ldd	r24, Z+2	; 0x02
     a8c:	93 81       	ldd	r25, Z+3	; 0x03
     a8e:	8c 1b       	sub	r24, r28
     a90:	9d 0b       	sbc	r25, r29
     a92:	89 30       	cpi	r24, 0x09	; 9
     a94:	91 05       	cpc	r25, r1
     a96:	10 f1       	brcs	.+68     	; 0xadc <pvPortMalloc+0xc4>
     a98:	af 01       	movw	r20, r30
     a9a:	4c 0f       	add	r20, r28
     a9c:	5d 1f       	adc	r21, r29
     a9e:	da 01       	movw	r26, r20
     aa0:	13 96       	adiw	r26, 0x03	; 3
     aa2:	9c 93       	st	X, r25
     aa4:	8e 93       	st	-X, r24
     aa6:	12 97       	sbiw	r26, 0x02	; 2
     aa8:	d3 83       	std	Z+3, r29	; 0x03
     aaa:	c2 83       	std	Z+2, r28	; 0x02
     aac:	12 96       	adiw	r26, 0x02	; 2
     aae:	2d 91       	ld	r18, X+
     ab0:	3c 91       	ld	r19, X
     ab2:	13 97       	sbiw	r26, 0x03	; 3
     ab4:	6b e1       	ldi	r22, 0x1B	; 27
     ab6:	71 e0       	ldi	r23, 0x01	; 1
     ab8:	01 c0       	rjmp	.+2      	; 0xabc <pvPortMalloc+0xa4>
     aba:	bd 01       	movw	r22, r26
     abc:	eb 01       	movw	r28, r22
     abe:	a8 81       	ld	r26, Y
     ac0:	b9 81       	ldd	r27, Y+1	; 0x01
     ac2:	12 96       	adiw	r26, 0x02	; 2
     ac4:	8d 91       	ld	r24, X+
     ac6:	9c 91       	ld	r25, X
     ac8:	13 97       	sbiw	r26, 0x03	; 3
     aca:	82 17       	cp	r24, r18
     acc:	93 07       	cpc	r25, r19
     ace:	a8 f3       	brcs	.-22     	; 0xaba <pvPortMalloc+0xa2>
     ad0:	ea 01       	movw	r28, r20
     ad2:	b9 83       	std	Y+1, r27	; 0x01
     ad4:	a8 83       	st	Y, r26
     ad6:	db 01       	movw	r26, r22
     ad8:	4d 93       	st	X+, r20
     ada:	5c 93       	st	X, r21
     adc:	22 81       	ldd	r18, Z+2	; 0x02
     ade:	33 81       	ldd	r19, Z+3	; 0x03
     ae0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     ae4:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     ae8:	82 1b       	sub	r24, r18
     aea:	93 0b       	sbc	r25, r19
     aec:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     af0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     af4:	05 c0       	rjmp	.+10     	; 0xb00 <pvPortMalloc+0xe8>
     af6:	00 e0       	ldi	r16, 0x00	; 0
     af8:	10 e0       	ldi	r17, 0x00	; 0
     afa:	02 c0       	rjmp	.+4      	; 0xb00 <pvPortMalloc+0xe8>
     afc:	00 e0       	ldi	r16, 0x00	; 0
     afe:	10 e0       	ldi	r17, 0x00	; 0
     b00:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <xTaskResumeAll>
     b04:	c8 01       	movw	r24, r16
     b06:	df 91       	pop	r29
     b08:	cf 91       	pop	r28
     b0a:	1f 91       	pop	r17
     b0c:	0f 91       	pop	r16
     b0e:	08 95       	ret

00000b10 <vPortFree>:
     b10:	0f 93       	push	r16
     b12:	1f 93       	push	r17
     b14:	cf 93       	push	r28
     b16:	df 93       	push	r29
     b18:	00 97       	sbiw	r24, 0x00	; 0
     b1a:	41 f1       	breq	.+80     	; 0xb6c <vPortFree+0x5c>
     b1c:	ec 01       	movw	r28, r24
     b1e:	8c 01       	movw	r16, r24
     b20:	04 50       	subi	r16, 0x04	; 4
     b22:	11 09       	sbc	r17, r1
     b24:	0e 94 bc 0c 	call	0x1978	; 0x1978 <vTaskSuspendAll>
     b28:	f8 01       	movw	r30, r16
     b2a:	42 81       	ldd	r20, Z+2	; 0x02
     b2c:	53 81       	ldd	r21, Z+3	; 0x03
     b2e:	ab e1       	ldi	r26, 0x1B	; 27
     b30:	b1 e0       	ldi	r27, 0x01	; 1
     b32:	01 c0       	rjmp	.+2      	; 0xb36 <vPortFree+0x26>
     b34:	df 01       	movw	r26, r30
     b36:	ed 91       	ld	r30, X+
     b38:	fc 91       	ld	r31, X
     b3a:	11 97       	sbiw	r26, 0x01	; 1
     b3c:	22 81       	ldd	r18, Z+2	; 0x02
     b3e:	33 81       	ldd	r19, Z+3	; 0x03
     b40:	24 17       	cp	r18, r20
     b42:	35 07       	cpc	r19, r21
     b44:	b8 f3       	brcs	.-18     	; 0xb34 <vPortFree+0x24>
     b46:	24 97       	sbiw	r28, 0x04	; 4
     b48:	f9 83       	std	Y+1, r31	; 0x01
     b4a:	e8 83       	st	Y, r30
     b4c:	0d 93       	st	X+, r16
     b4e:	1c 93       	st	X, r17
     b50:	8a 81       	ldd	r24, Y+2	; 0x02
     b52:	9b 81       	ldd	r25, Y+3	; 0x03
     b54:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     b58:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     b5c:	82 0f       	add	r24, r18
     b5e:	93 1f       	adc	r25, r19
     b60:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     b64:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     b68:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <xTaskResumeAll>
     b6c:	df 91       	pop	r29
     b6e:	cf 91       	pop	r28
     b70:	1f 91       	pop	r17
     b72:	0f 91       	pop	r16
     b74:	08 95       	ret

00000b76 <vListInitialise>:
     b76:	fc 01       	movw	r30, r24
     b78:	03 96       	adiw	r24, 0x03	; 3
     b7a:	92 83       	std	Z+2, r25	; 0x02
     b7c:	81 83       	std	Z+1, r24	; 0x01
     b7e:	2f ef       	ldi	r18, 0xFF	; 255
     b80:	3f ef       	ldi	r19, 0xFF	; 255
     b82:	34 83       	std	Z+4, r19	; 0x04
     b84:	23 83       	std	Z+3, r18	; 0x03
     b86:	96 83       	std	Z+6, r25	; 0x06
     b88:	85 83       	std	Z+5, r24	; 0x05
     b8a:	90 87       	std	Z+8, r25	; 0x08
     b8c:	87 83       	std	Z+7, r24	; 0x07
     b8e:	10 82       	st	Z, r1
     b90:	08 95       	ret

00000b92 <vListInitialiseItem>:
     b92:	fc 01       	movw	r30, r24
     b94:	11 86       	std	Z+9, r1	; 0x09
     b96:	10 86       	std	Z+8, r1	; 0x08
     b98:	08 95       	ret

00000b9a <vListInsertEnd>:
     b9a:	cf 93       	push	r28
     b9c:	df 93       	push	r29
     b9e:	9c 01       	movw	r18, r24
     ba0:	fb 01       	movw	r30, r22
     ba2:	dc 01       	movw	r26, r24
     ba4:	11 96       	adiw	r26, 0x01	; 1
     ba6:	cd 91       	ld	r28, X+
     ba8:	dc 91       	ld	r29, X
     baa:	12 97       	sbiw	r26, 0x02	; 2
     bac:	d3 83       	std	Z+3, r29	; 0x03
     bae:	c2 83       	std	Z+2, r28	; 0x02
     bb0:	8c 81       	ldd	r24, Y+4	; 0x04
     bb2:	9d 81       	ldd	r25, Y+5	; 0x05
     bb4:	95 83       	std	Z+5, r25	; 0x05
     bb6:	84 83       	std	Z+4, r24	; 0x04
     bb8:	8c 81       	ldd	r24, Y+4	; 0x04
     bba:	9d 81       	ldd	r25, Y+5	; 0x05
     bbc:	dc 01       	movw	r26, r24
     bbe:	13 96       	adiw	r26, 0x03	; 3
     bc0:	7c 93       	st	X, r23
     bc2:	6e 93       	st	-X, r22
     bc4:	12 97       	sbiw	r26, 0x02	; 2
     bc6:	7d 83       	std	Y+5, r23	; 0x05
     bc8:	6c 83       	std	Y+4, r22	; 0x04
     bca:	31 87       	std	Z+9, r19	; 0x09
     bcc:	20 87       	std	Z+8, r18	; 0x08
     bce:	f9 01       	movw	r30, r18
     bd0:	80 81       	ld	r24, Z
     bd2:	8f 5f       	subi	r24, 0xFF	; 255
     bd4:	80 83       	st	Z, r24
     bd6:	df 91       	pop	r29
     bd8:	cf 91       	pop	r28
     bda:	08 95       	ret

00000bdc <vListInsert>:
     bdc:	cf 93       	push	r28
     bde:	df 93       	push	r29
     be0:	eb 01       	movw	r28, r22
     be2:	48 81       	ld	r20, Y
     be4:	59 81       	ldd	r21, Y+1	; 0x01
     be6:	4f 3f       	cpi	r20, 0xFF	; 255
     be8:	2f ef       	ldi	r18, 0xFF	; 255
     bea:	52 07       	cpc	r21, r18
     bec:	21 f4       	brne	.+8      	; 0xbf6 <vListInsert+0x1a>
     bee:	fc 01       	movw	r30, r24
     bf0:	a7 81       	ldd	r26, Z+7	; 0x07
     bf2:	b0 85       	ldd	r27, Z+8	; 0x08
     bf4:	0d c0       	rjmp	.+26     	; 0xc10 <vListInsert+0x34>
     bf6:	dc 01       	movw	r26, r24
     bf8:	13 96       	adiw	r26, 0x03	; 3
     bfa:	01 c0       	rjmp	.+2      	; 0xbfe <vListInsert+0x22>
     bfc:	df 01       	movw	r26, r30
     bfe:	12 96       	adiw	r26, 0x02	; 2
     c00:	ed 91       	ld	r30, X+
     c02:	fc 91       	ld	r31, X
     c04:	13 97       	sbiw	r26, 0x03	; 3
     c06:	20 81       	ld	r18, Z
     c08:	31 81       	ldd	r19, Z+1	; 0x01
     c0a:	42 17       	cp	r20, r18
     c0c:	53 07       	cpc	r21, r19
     c0e:	b0 f7       	brcc	.-20     	; 0xbfc <vListInsert+0x20>
     c10:	12 96       	adiw	r26, 0x02	; 2
     c12:	ed 91       	ld	r30, X+
     c14:	fc 91       	ld	r31, X
     c16:	13 97       	sbiw	r26, 0x03	; 3
     c18:	fb 83       	std	Y+3, r31	; 0x03
     c1a:	ea 83       	std	Y+2, r30	; 0x02
     c1c:	d5 83       	std	Z+5, r29	; 0x05
     c1e:	c4 83       	std	Z+4, r28	; 0x04
     c20:	bd 83       	std	Y+5, r27	; 0x05
     c22:	ac 83       	std	Y+4, r26	; 0x04
     c24:	13 96       	adiw	r26, 0x03	; 3
     c26:	dc 93       	st	X, r29
     c28:	ce 93       	st	-X, r28
     c2a:	12 97       	sbiw	r26, 0x02	; 2
     c2c:	99 87       	std	Y+9, r25	; 0x09
     c2e:	88 87       	std	Y+8, r24	; 0x08
     c30:	fc 01       	movw	r30, r24
     c32:	20 81       	ld	r18, Z
     c34:	2f 5f       	subi	r18, 0xFF	; 255
     c36:	20 83       	st	Z, r18
     c38:	df 91       	pop	r29
     c3a:	cf 91       	pop	r28
     c3c:	08 95       	ret

00000c3e <uxListRemove>:
     c3e:	cf 93       	push	r28
     c40:	df 93       	push	r29
     c42:	fc 01       	movw	r30, r24
     c44:	a0 85       	ldd	r26, Z+8	; 0x08
     c46:	b1 85       	ldd	r27, Z+9	; 0x09
     c48:	c2 81       	ldd	r28, Z+2	; 0x02
     c4a:	d3 81       	ldd	r29, Z+3	; 0x03
     c4c:	84 81       	ldd	r24, Z+4	; 0x04
     c4e:	95 81       	ldd	r25, Z+5	; 0x05
     c50:	9d 83       	std	Y+5, r25	; 0x05
     c52:	8c 83       	std	Y+4, r24	; 0x04
     c54:	c4 81       	ldd	r28, Z+4	; 0x04
     c56:	d5 81       	ldd	r29, Z+5	; 0x05
     c58:	82 81       	ldd	r24, Z+2	; 0x02
     c5a:	93 81       	ldd	r25, Z+3	; 0x03
     c5c:	9b 83       	std	Y+3, r25	; 0x03
     c5e:	8a 83       	std	Y+2, r24	; 0x02
     c60:	11 96       	adiw	r26, 0x01	; 1
     c62:	8d 91       	ld	r24, X+
     c64:	9c 91       	ld	r25, X
     c66:	12 97       	sbiw	r26, 0x02	; 2
     c68:	e8 17       	cp	r30, r24
     c6a:	f9 07       	cpc	r31, r25
     c6c:	31 f4       	brne	.+12     	; 0xc7a <uxListRemove+0x3c>
     c6e:	84 81       	ldd	r24, Z+4	; 0x04
     c70:	95 81       	ldd	r25, Z+5	; 0x05
     c72:	12 96       	adiw	r26, 0x02	; 2
     c74:	9c 93       	st	X, r25
     c76:	8e 93       	st	-X, r24
     c78:	11 97       	sbiw	r26, 0x01	; 1
     c7a:	11 86       	std	Z+9, r1	; 0x09
     c7c:	10 86       	std	Z+8, r1	; 0x08
     c7e:	8c 91       	ld	r24, X
     c80:	81 50       	subi	r24, 0x01	; 1
     c82:	8c 93       	st	X, r24
     c84:	df 91       	pop	r29
     c86:	cf 91       	pop	r28
     c88:	08 95       	ret

00000c8a <prvSetupTimerInterrupt>:
     c8a:	8c e7       	ldi	r24, 0x7C	; 124
     c8c:	83 bd       	out	0x23, r24	; 35
     c8e:	84 e4       	ldi	r24, 0x44	; 68
     c90:	85 bd       	out	0x25, r24	; 37
     c92:	89 b7       	in	r24, 0x39	; 57
     c94:	80 68       	ori	r24, 0x80	; 128
     c96:	89 bf       	out	0x39, r24	; 57
     c98:	08 95       	ret

00000c9a <pxPortInitialiseStack>:
     c9a:	31 e1       	ldi	r19, 0x11	; 17
     c9c:	fc 01       	movw	r30, r24
     c9e:	30 83       	st	Z, r19
     ca0:	31 97       	sbiw	r30, 0x01	; 1
     ca2:	22 e2       	ldi	r18, 0x22	; 34
     ca4:	20 83       	st	Z, r18
     ca6:	31 97       	sbiw	r30, 0x01	; 1
     ca8:	a3 e3       	ldi	r26, 0x33	; 51
     caa:	a0 83       	st	Z, r26
     cac:	31 97       	sbiw	r30, 0x01	; 1
     cae:	60 83       	st	Z, r22
     cb0:	31 97       	sbiw	r30, 0x01	; 1
     cb2:	70 83       	st	Z, r23
     cb4:	31 97       	sbiw	r30, 0x01	; 1
     cb6:	10 82       	st	Z, r1
     cb8:	31 97       	sbiw	r30, 0x01	; 1
     cba:	60 e8       	ldi	r22, 0x80	; 128
     cbc:	60 83       	st	Z, r22
     cbe:	31 97       	sbiw	r30, 0x01	; 1
     cc0:	10 82       	st	Z, r1
     cc2:	31 97       	sbiw	r30, 0x01	; 1
     cc4:	62 e0       	ldi	r22, 0x02	; 2
     cc6:	60 83       	st	Z, r22
     cc8:	31 97       	sbiw	r30, 0x01	; 1
     cca:	63 e0       	ldi	r22, 0x03	; 3
     ccc:	60 83       	st	Z, r22
     cce:	31 97       	sbiw	r30, 0x01	; 1
     cd0:	64 e0       	ldi	r22, 0x04	; 4
     cd2:	60 83       	st	Z, r22
     cd4:	31 97       	sbiw	r30, 0x01	; 1
     cd6:	65 e0       	ldi	r22, 0x05	; 5
     cd8:	60 83       	st	Z, r22
     cda:	31 97       	sbiw	r30, 0x01	; 1
     cdc:	66 e0       	ldi	r22, 0x06	; 6
     cde:	60 83       	st	Z, r22
     ce0:	31 97       	sbiw	r30, 0x01	; 1
     ce2:	67 e0       	ldi	r22, 0x07	; 7
     ce4:	60 83       	st	Z, r22
     ce6:	31 97       	sbiw	r30, 0x01	; 1
     ce8:	68 e0       	ldi	r22, 0x08	; 8
     cea:	60 83       	st	Z, r22
     cec:	31 97       	sbiw	r30, 0x01	; 1
     cee:	69 e0       	ldi	r22, 0x09	; 9
     cf0:	60 83       	st	Z, r22
     cf2:	31 97       	sbiw	r30, 0x01	; 1
     cf4:	60 e1       	ldi	r22, 0x10	; 16
     cf6:	60 83       	st	Z, r22
     cf8:	31 97       	sbiw	r30, 0x01	; 1
     cfa:	30 83       	st	Z, r19
     cfc:	31 97       	sbiw	r30, 0x01	; 1
     cfe:	32 e1       	ldi	r19, 0x12	; 18
     d00:	30 83       	st	Z, r19
     d02:	31 97       	sbiw	r30, 0x01	; 1
     d04:	33 e1       	ldi	r19, 0x13	; 19
     d06:	30 83       	st	Z, r19
     d08:	31 97       	sbiw	r30, 0x01	; 1
     d0a:	34 e1       	ldi	r19, 0x14	; 20
     d0c:	30 83       	st	Z, r19
     d0e:	31 97       	sbiw	r30, 0x01	; 1
     d10:	35 e1       	ldi	r19, 0x15	; 21
     d12:	30 83       	st	Z, r19
     d14:	31 97       	sbiw	r30, 0x01	; 1
     d16:	36 e1       	ldi	r19, 0x16	; 22
     d18:	30 83       	st	Z, r19
     d1a:	31 97       	sbiw	r30, 0x01	; 1
     d1c:	37 e1       	ldi	r19, 0x17	; 23
     d1e:	30 83       	st	Z, r19
     d20:	31 97       	sbiw	r30, 0x01	; 1
     d22:	38 e1       	ldi	r19, 0x18	; 24
     d24:	30 83       	st	Z, r19
     d26:	31 97       	sbiw	r30, 0x01	; 1
     d28:	39 e1       	ldi	r19, 0x19	; 25
     d2a:	30 83       	st	Z, r19
     d2c:	31 97       	sbiw	r30, 0x01	; 1
     d2e:	30 e2       	ldi	r19, 0x20	; 32
     d30:	30 83       	st	Z, r19
     d32:	31 97       	sbiw	r30, 0x01	; 1
     d34:	31 e2       	ldi	r19, 0x21	; 33
     d36:	30 83       	st	Z, r19
     d38:	31 97       	sbiw	r30, 0x01	; 1
     d3a:	20 83       	st	Z, r18
     d3c:	31 97       	sbiw	r30, 0x01	; 1
     d3e:	23 e2       	ldi	r18, 0x23	; 35
     d40:	20 83       	st	Z, r18
     d42:	31 97       	sbiw	r30, 0x01	; 1
     d44:	40 83       	st	Z, r20
     d46:	31 97       	sbiw	r30, 0x01	; 1
     d48:	50 83       	st	Z, r21
     d4a:	31 97       	sbiw	r30, 0x01	; 1
     d4c:	26 e2       	ldi	r18, 0x26	; 38
     d4e:	20 83       	st	Z, r18
     d50:	31 97       	sbiw	r30, 0x01	; 1
     d52:	27 e2       	ldi	r18, 0x27	; 39
     d54:	20 83       	st	Z, r18
     d56:	31 97       	sbiw	r30, 0x01	; 1
     d58:	28 e2       	ldi	r18, 0x28	; 40
     d5a:	20 83       	st	Z, r18
     d5c:	31 97       	sbiw	r30, 0x01	; 1
     d5e:	29 e2       	ldi	r18, 0x29	; 41
     d60:	20 83       	st	Z, r18
     d62:	31 97       	sbiw	r30, 0x01	; 1
     d64:	20 e3       	ldi	r18, 0x30	; 48
     d66:	20 83       	st	Z, r18
     d68:	31 97       	sbiw	r30, 0x01	; 1
     d6a:	21 e3       	ldi	r18, 0x31	; 49
     d6c:	20 83       	st	Z, r18
     d6e:	86 97       	sbiw	r24, 0x26	; 38
     d70:	08 95       	ret

00000d72 <xPortStartScheduler>:
     d72:	0e 94 45 06 	call	0xc8a	; 0xc8a <prvSetupTimerInterrupt>
     d76:	a0 91 98 05 	lds	r26, 0x0598	; 0x800598 <pxCurrentTCB>
     d7a:	b0 91 99 05 	lds	r27, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
     d7e:	cd 91       	ld	r28, X+
     d80:	cd bf       	out	0x3d, r28	; 61
     d82:	dd 91       	ld	r29, X+
     d84:	de bf       	out	0x3e, r29	; 62
     d86:	ff 91       	pop	r31
     d88:	ef 91       	pop	r30
     d8a:	df 91       	pop	r29
     d8c:	cf 91       	pop	r28
     d8e:	bf 91       	pop	r27
     d90:	af 91       	pop	r26
     d92:	9f 91       	pop	r25
     d94:	8f 91       	pop	r24
     d96:	7f 91       	pop	r23
     d98:	6f 91       	pop	r22
     d9a:	5f 91       	pop	r21
     d9c:	4f 91       	pop	r20
     d9e:	3f 91       	pop	r19
     da0:	2f 91       	pop	r18
     da2:	1f 91       	pop	r17
     da4:	0f 91       	pop	r16
     da6:	ff 90       	pop	r15
     da8:	ef 90       	pop	r14
     daa:	df 90       	pop	r13
     dac:	cf 90       	pop	r12
     dae:	bf 90       	pop	r11
     db0:	af 90       	pop	r10
     db2:	9f 90       	pop	r9
     db4:	8f 90       	pop	r8
     db6:	7f 90       	pop	r7
     db8:	6f 90       	pop	r6
     dba:	5f 90       	pop	r5
     dbc:	4f 90       	pop	r4
     dbe:	3f 90       	pop	r3
     dc0:	2f 90       	pop	r2
     dc2:	1f 90       	pop	r1
     dc4:	0f 90       	pop	r0
     dc6:	0f be       	out	0x3f, r0	; 63
     dc8:	0f 90       	pop	r0
     dca:	08 95       	ret
     dcc:	81 e0       	ldi	r24, 0x01	; 1
     dce:	08 95       	ret

00000dd0 <vPortYield>:
     dd0:	0f 92       	push	r0
     dd2:	0f b6       	in	r0, 0x3f	; 63
     dd4:	f8 94       	cli
     dd6:	0f 92       	push	r0
     dd8:	1f 92       	push	r1
     dda:	11 24       	eor	r1, r1
     ddc:	2f 92       	push	r2
     dde:	3f 92       	push	r3
     de0:	4f 92       	push	r4
     de2:	5f 92       	push	r5
     de4:	6f 92       	push	r6
     de6:	7f 92       	push	r7
     de8:	8f 92       	push	r8
     dea:	9f 92       	push	r9
     dec:	af 92       	push	r10
     dee:	bf 92       	push	r11
     df0:	cf 92       	push	r12
     df2:	df 92       	push	r13
     df4:	ef 92       	push	r14
     df6:	ff 92       	push	r15
     df8:	0f 93       	push	r16
     dfa:	1f 93       	push	r17
     dfc:	2f 93       	push	r18
     dfe:	3f 93       	push	r19
     e00:	4f 93       	push	r20
     e02:	5f 93       	push	r21
     e04:	6f 93       	push	r22
     e06:	7f 93       	push	r23
     e08:	8f 93       	push	r24
     e0a:	9f 93       	push	r25
     e0c:	af 93       	push	r26
     e0e:	bf 93       	push	r27
     e10:	cf 93       	push	r28
     e12:	df 93       	push	r29
     e14:	ef 93       	push	r30
     e16:	ff 93       	push	r31
     e18:	a0 91 98 05 	lds	r26, 0x0598	; 0x800598 <pxCurrentTCB>
     e1c:	b0 91 99 05 	lds	r27, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
     e20:	0d b6       	in	r0, 0x3d	; 61
     e22:	0d 92       	st	X+, r0
     e24:	0e b6       	in	r0, 0x3e	; 62
     e26:	0d 92       	st	X+, r0
     e28:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <vTaskSwitchContext>
     e2c:	a0 91 98 05 	lds	r26, 0x0598	; 0x800598 <pxCurrentTCB>
     e30:	b0 91 99 05 	lds	r27, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
     e34:	cd 91       	ld	r28, X+
     e36:	cd bf       	out	0x3d, r28	; 61
     e38:	dd 91       	ld	r29, X+
     e3a:	de bf       	out	0x3e, r29	; 62
     e3c:	ff 91       	pop	r31
     e3e:	ef 91       	pop	r30
     e40:	df 91       	pop	r29
     e42:	cf 91       	pop	r28
     e44:	bf 91       	pop	r27
     e46:	af 91       	pop	r26
     e48:	9f 91       	pop	r25
     e4a:	8f 91       	pop	r24
     e4c:	7f 91       	pop	r23
     e4e:	6f 91       	pop	r22
     e50:	5f 91       	pop	r21
     e52:	4f 91       	pop	r20
     e54:	3f 91       	pop	r19
     e56:	2f 91       	pop	r18
     e58:	1f 91       	pop	r17
     e5a:	0f 91       	pop	r16
     e5c:	ff 90       	pop	r15
     e5e:	ef 90       	pop	r14
     e60:	df 90       	pop	r13
     e62:	cf 90       	pop	r12
     e64:	bf 90       	pop	r11
     e66:	af 90       	pop	r10
     e68:	9f 90       	pop	r9
     e6a:	8f 90       	pop	r8
     e6c:	7f 90       	pop	r7
     e6e:	6f 90       	pop	r6
     e70:	5f 90       	pop	r5
     e72:	4f 90       	pop	r4
     e74:	3f 90       	pop	r3
     e76:	2f 90       	pop	r2
     e78:	1f 90       	pop	r1
     e7a:	0f 90       	pop	r0
     e7c:	0f be       	out	0x3f, r0	; 63
     e7e:	0f 90       	pop	r0
     e80:	08 95       	ret

00000e82 <vPortYieldFromTick>:
     e82:	0f 92       	push	r0
     e84:	0f b6       	in	r0, 0x3f	; 63
     e86:	f8 94       	cli
     e88:	0f 92       	push	r0
     e8a:	1f 92       	push	r1
     e8c:	11 24       	eor	r1, r1
     e8e:	2f 92       	push	r2
     e90:	3f 92       	push	r3
     e92:	4f 92       	push	r4
     e94:	5f 92       	push	r5
     e96:	6f 92       	push	r6
     e98:	7f 92       	push	r7
     e9a:	8f 92       	push	r8
     e9c:	9f 92       	push	r9
     e9e:	af 92       	push	r10
     ea0:	bf 92       	push	r11
     ea2:	cf 92       	push	r12
     ea4:	df 92       	push	r13
     ea6:	ef 92       	push	r14
     ea8:	ff 92       	push	r15
     eaa:	0f 93       	push	r16
     eac:	1f 93       	push	r17
     eae:	2f 93       	push	r18
     eb0:	3f 93       	push	r19
     eb2:	4f 93       	push	r20
     eb4:	5f 93       	push	r21
     eb6:	6f 93       	push	r22
     eb8:	7f 93       	push	r23
     eba:	8f 93       	push	r24
     ebc:	9f 93       	push	r25
     ebe:	af 93       	push	r26
     ec0:	bf 93       	push	r27
     ec2:	cf 93       	push	r28
     ec4:	df 93       	push	r29
     ec6:	ef 93       	push	r30
     ec8:	ff 93       	push	r31
     eca:	a0 91 98 05 	lds	r26, 0x0598	; 0x800598 <pxCurrentTCB>
     ece:	b0 91 99 05 	lds	r27, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
     ed2:	0d b6       	in	r0, 0x3d	; 61
     ed4:	0d 92       	st	X+, r0
     ed6:	0e b6       	in	r0, 0x3e	; 62
     ed8:	0d 92       	st	X+, r0
     eda:	0e 94 c2 0c 	call	0x1984	; 0x1984 <xTaskIncrementTick>
     ede:	81 11       	cpse	r24, r1
     ee0:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <vTaskSwitchContext>
     ee4:	a0 91 98 05 	lds	r26, 0x0598	; 0x800598 <pxCurrentTCB>
     ee8:	b0 91 99 05 	lds	r27, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
     eec:	cd 91       	ld	r28, X+
     eee:	cd bf       	out	0x3d, r28	; 61
     ef0:	dd 91       	ld	r29, X+
     ef2:	de bf       	out	0x3e, r29	; 62
     ef4:	ff 91       	pop	r31
     ef6:	ef 91       	pop	r30
     ef8:	df 91       	pop	r29
     efa:	cf 91       	pop	r28
     efc:	bf 91       	pop	r27
     efe:	af 91       	pop	r26
     f00:	9f 91       	pop	r25
     f02:	8f 91       	pop	r24
     f04:	7f 91       	pop	r23
     f06:	6f 91       	pop	r22
     f08:	5f 91       	pop	r21
     f0a:	4f 91       	pop	r20
     f0c:	3f 91       	pop	r19
     f0e:	2f 91       	pop	r18
     f10:	1f 91       	pop	r17
     f12:	0f 91       	pop	r16
     f14:	ff 90       	pop	r15
     f16:	ef 90       	pop	r14
     f18:	df 90       	pop	r13
     f1a:	cf 90       	pop	r12
     f1c:	bf 90       	pop	r11
     f1e:	af 90       	pop	r10
     f20:	9f 90       	pop	r9
     f22:	8f 90       	pop	r8
     f24:	7f 90       	pop	r7
     f26:	6f 90       	pop	r6
     f28:	5f 90       	pop	r5
     f2a:	4f 90       	pop	r4
     f2c:	3f 90       	pop	r3
     f2e:	2f 90       	pop	r2
     f30:	1f 90       	pop	r1
     f32:	0f 90       	pop	r0
     f34:	0f be       	out	0x3f, r0	; 63
     f36:	0f 90       	pop	r0
     f38:	08 95       	ret

00000f3a <__vector_4>:
     f3a:	0e 94 41 07 	call	0xe82	; 0xe82 <vPortYieldFromTick>
     f3e:	18 95       	reti

00000f40 <prvIsQueueEmpty>:
     f40:	0f b6       	in	r0, 0x3f	; 63
     f42:	f8 94       	cli
     f44:	0f 92       	push	r0
     f46:	fc 01       	movw	r30, r24
     f48:	82 8d       	ldd	r24, Z+26	; 0x1a
     f4a:	81 11       	cpse	r24, r1
     f4c:	02 c0       	rjmp	.+4      	; 0xf52 <prvIsQueueEmpty+0x12>
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	01 c0       	rjmp	.+2      	; 0xf54 <prvIsQueueEmpty+0x14>
     f52:	80 e0       	ldi	r24, 0x00	; 0
     f54:	0f 90       	pop	r0
     f56:	0f be       	out	0x3f, r0	; 63
     f58:	08 95       	ret

00000f5a <prvIsQueueFull>:
     f5a:	0f b6       	in	r0, 0x3f	; 63
     f5c:	f8 94       	cli
     f5e:	0f 92       	push	r0
     f60:	fc 01       	movw	r30, r24
     f62:	22 8d       	ldd	r18, Z+26	; 0x1a
     f64:	83 8d       	ldd	r24, Z+27	; 0x1b
     f66:	28 13       	cpse	r18, r24
     f68:	02 c0       	rjmp	.+4      	; 0xf6e <prvIsQueueFull+0x14>
     f6a:	81 e0       	ldi	r24, 0x01	; 1
     f6c:	01 c0       	rjmp	.+2      	; 0xf70 <prvIsQueueFull+0x16>
     f6e:	80 e0       	ldi	r24, 0x00	; 0
     f70:	0f 90       	pop	r0
     f72:	0f be       	out	0x3f, r0	; 63
     f74:	08 95       	ret

00000f76 <prvCopyDataToQueue>:
     f76:	0f 93       	push	r16
     f78:	1f 93       	push	r17
     f7a:	cf 93       	push	r28
     f7c:	df 93       	push	r29
     f7e:	ec 01       	movw	r28, r24
     f80:	04 2f       	mov	r16, r20
     f82:	1a 8d       	ldd	r17, Y+26	; 0x1a
     f84:	4c 8d       	ldd	r20, Y+28	; 0x1c
     f86:	41 11       	cpse	r20, r1
     f88:	0c c0       	rjmp	.+24     	; 0xfa2 <prvCopyDataToQueue+0x2c>
     f8a:	88 81       	ld	r24, Y
     f8c:	99 81       	ldd	r25, Y+1	; 0x01
     f8e:	89 2b       	or	r24, r25
     f90:	09 f0       	breq	.+2      	; 0xf94 <prvCopyDataToQueue+0x1e>
     f92:	42 c0       	rjmp	.+132    	; 0x1018 <prvCopyDataToQueue+0xa2>
     f94:	8a 81       	ldd	r24, Y+2	; 0x02
     f96:	9b 81       	ldd	r25, Y+3	; 0x03
     f98:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <xTaskPriorityDisinherit>
     f9c:	1b 82       	std	Y+3, r1	; 0x03
     f9e:	1a 82       	std	Y+2, r1	; 0x02
     fa0:	42 c0       	rjmp	.+132    	; 0x1026 <prvCopyDataToQueue+0xb0>
     fa2:	01 11       	cpse	r16, r1
     fa4:	17 c0       	rjmp	.+46     	; 0xfd4 <prvCopyDataToQueue+0x5e>
     fa6:	50 e0       	ldi	r21, 0x00	; 0
     fa8:	8c 81       	ldd	r24, Y+4	; 0x04
     faa:	9d 81       	ldd	r25, Y+5	; 0x05
     fac:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <memcpy>
     fb0:	2c 8d       	ldd	r18, Y+28	; 0x1c
     fb2:	8c 81       	ldd	r24, Y+4	; 0x04
     fb4:	9d 81       	ldd	r25, Y+5	; 0x05
     fb6:	82 0f       	add	r24, r18
     fb8:	91 1d       	adc	r25, r1
     fba:	9d 83       	std	Y+5, r25	; 0x05
     fbc:	8c 83       	std	Y+4, r24	; 0x04
     fbe:	2a 81       	ldd	r18, Y+2	; 0x02
     fc0:	3b 81       	ldd	r19, Y+3	; 0x03
     fc2:	82 17       	cp	r24, r18
     fc4:	93 07       	cpc	r25, r19
     fc6:	50 f1       	brcs	.+84     	; 0x101c <prvCopyDataToQueue+0xa6>
     fc8:	88 81       	ld	r24, Y
     fca:	99 81       	ldd	r25, Y+1	; 0x01
     fcc:	9d 83       	std	Y+5, r25	; 0x05
     fce:	8c 83       	std	Y+4, r24	; 0x04
     fd0:	80 e0       	ldi	r24, 0x00	; 0
     fd2:	29 c0       	rjmp	.+82     	; 0x1026 <prvCopyDataToQueue+0xb0>
     fd4:	50 e0       	ldi	r21, 0x00	; 0
     fd6:	8e 81       	ldd	r24, Y+6	; 0x06
     fd8:	9f 81       	ldd	r25, Y+7	; 0x07
     fda:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <memcpy>
     fde:	8c 8d       	ldd	r24, Y+28	; 0x1c
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	91 95       	neg	r25
     fe4:	81 95       	neg	r24
     fe6:	91 09       	sbc	r25, r1
     fe8:	2e 81       	ldd	r18, Y+6	; 0x06
     fea:	3f 81       	ldd	r19, Y+7	; 0x07
     fec:	28 0f       	add	r18, r24
     fee:	39 1f       	adc	r19, r25
     ff0:	3f 83       	std	Y+7, r19	; 0x07
     ff2:	2e 83       	std	Y+6, r18	; 0x06
     ff4:	48 81       	ld	r20, Y
     ff6:	59 81       	ldd	r21, Y+1	; 0x01
     ff8:	24 17       	cp	r18, r20
     ffa:	35 07       	cpc	r19, r21
     ffc:	30 f4       	brcc	.+12     	; 0x100a <prvCopyDataToQueue+0x94>
     ffe:	2a 81       	ldd	r18, Y+2	; 0x02
    1000:	3b 81       	ldd	r19, Y+3	; 0x03
    1002:	82 0f       	add	r24, r18
    1004:	93 1f       	adc	r25, r19
    1006:	9f 83       	std	Y+7, r25	; 0x07
    1008:	8e 83       	std	Y+6, r24	; 0x06
    100a:	02 30       	cpi	r16, 0x02	; 2
    100c:	49 f4       	brne	.+18     	; 0x1020 <prvCopyDataToQueue+0xaa>
    100e:	11 23       	and	r17, r17
    1010:	49 f0       	breq	.+18     	; 0x1024 <prvCopyDataToQueue+0xae>
    1012:	11 50       	subi	r17, 0x01	; 1
    1014:	80 e0       	ldi	r24, 0x00	; 0
    1016:	07 c0       	rjmp	.+14     	; 0x1026 <prvCopyDataToQueue+0xb0>
    1018:	80 e0       	ldi	r24, 0x00	; 0
    101a:	05 c0       	rjmp	.+10     	; 0x1026 <prvCopyDataToQueue+0xb0>
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	03 c0       	rjmp	.+6      	; 0x1026 <prvCopyDataToQueue+0xb0>
    1020:	80 e0       	ldi	r24, 0x00	; 0
    1022:	01 c0       	rjmp	.+2      	; 0x1026 <prvCopyDataToQueue+0xb0>
    1024:	80 e0       	ldi	r24, 0x00	; 0
    1026:	1f 5f       	subi	r17, 0xFF	; 255
    1028:	1a 8f       	std	Y+26, r17	; 0x1a
    102a:	df 91       	pop	r29
    102c:	cf 91       	pop	r28
    102e:	1f 91       	pop	r17
    1030:	0f 91       	pop	r16
    1032:	08 95       	ret

00001034 <prvCopyDataFromQueue>:
    1034:	fc 01       	movw	r30, r24
    1036:	44 8d       	ldd	r20, Z+28	; 0x1c
    1038:	44 23       	and	r20, r20
    103a:	a9 f0       	breq	.+42     	; 0x1066 <prvCopyDataFromQueue+0x32>
    103c:	50 e0       	ldi	r21, 0x00	; 0
    103e:	26 81       	ldd	r18, Z+6	; 0x06
    1040:	37 81       	ldd	r19, Z+7	; 0x07
    1042:	24 0f       	add	r18, r20
    1044:	35 1f       	adc	r19, r21
    1046:	37 83       	std	Z+7, r19	; 0x07
    1048:	26 83       	std	Z+6, r18	; 0x06
    104a:	82 81       	ldd	r24, Z+2	; 0x02
    104c:	93 81       	ldd	r25, Z+3	; 0x03
    104e:	28 17       	cp	r18, r24
    1050:	39 07       	cpc	r19, r25
    1052:	20 f0       	brcs	.+8      	; 0x105c <prvCopyDataFromQueue+0x28>
    1054:	80 81       	ld	r24, Z
    1056:	91 81       	ldd	r25, Z+1	; 0x01
    1058:	97 83       	std	Z+7, r25	; 0x07
    105a:	86 83       	std	Z+6, r24	; 0x06
    105c:	cb 01       	movw	r24, r22
    105e:	66 81       	ldd	r22, Z+6	; 0x06
    1060:	77 81       	ldd	r23, Z+7	; 0x07
    1062:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <memcpy>
    1066:	08 95       	ret

00001068 <prvUnlockQueue>:
    1068:	1f 93       	push	r17
    106a:	cf 93       	push	r28
    106c:	df 93       	push	r29
    106e:	ec 01       	movw	r28, r24
    1070:	0f b6       	in	r0, 0x3f	; 63
    1072:	f8 94       	cli
    1074:	0f 92       	push	r0
    1076:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1078:	0b c0       	rjmp	.+22     	; 0x1090 <prvUnlockQueue+0x28>
    107a:	89 89       	ldd	r24, Y+17	; 0x11
    107c:	88 23       	and	r24, r24
    107e:	51 f0       	breq	.+20     	; 0x1094 <prvUnlockQueue+0x2c>
    1080:	ce 01       	movw	r24, r28
    1082:	41 96       	adiw	r24, 0x11	; 17
    1084:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <xTaskRemoveFromEventList>
    1088:	81 11       	cpse	r24, r1
    108a:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <vTaskMissedYield>
    108e:	11 50       	subi	r17, 0x01	; 1
    1090:	11 16       	cp	r1, r17
    1092:	9c f3       	brlt	.-26     	; 0x107a <prvUnlockQueue+0x12>
    1094:	8f ef       	ldi	r24, 0xFF	; 255
    1096:	8e 8f       	std	Y+30, r24	; 0x1e
    1098:	0f 90       	pop	r0
    109a:	0f be       	out	0x3f, r0	; 63
    109c:	0f b6       	in	r0, 0x3f	; 63
    109e:	f8 94       	cli
    10a0:	0f 92       	push	r0
    10a2:	1d 8d       	ldd	r17, Y+29	; 0x1d
    10a4:	0b c0       	rjmp	.+22     	; 0x10bc <prvUnlockQueue+0x54>
    10a6:	88 85       	ldd	r24, Y+8	; 0x08
    10a8:	88 23       	and	r24, r24
    10aa:	51 f0       	breq	.+20     	; 0x10c0 <prvUnlockQueue+0x58>
    10ac:	ce 01       	movw	r24, r28
    10ae:	08 96       	adiw	r24, 0x08	; 8
    10b0:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <xTaskRemoveFromEventList>
    10b4:	81 11       	cpse	r24, r1
    10b6:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <vTaskMissedYield>
    10ba:	11 50       	subi	r17, 0x01	; 1
    10bc:	11 16       	cp	r1, r17
    10be:	9c f3       	brlt	.-26     	; 0x10a6 <prvUnlockQueue+0x3e>
    10c0:	8f ef       	ldi	r24, 0xFF	; 255
    10c2:	8d 8f       	std	Y+29, r24	; 0x1d
    10c4:	0f 90       	pop	r0
    10c6:	0f be       	out	0x3f, r0	; 63
    10c8:	df 91       	pop	r29
    10ca:	cf 91       	pop	r28
    10cc:	1f 91       	pop	r17
    10ce:	08 95       	ret

000010d0 <xQueueGenericReset>:
    10d0:	cf 93       	push	r28
    10d2:	df 93       	push	r29
    10d4:	ec 01       	movw	r28, r24
    10d6:	0f b6       	in	r0, 0x3f	; 63
    10d8:	f8 94       	cli
    10da:	0f 92       	push	r0
    10dc:	e8 81       	ld	r30, Y
    10de:	f9 81       	ldd	r31, Y+1	; 0x01
    10e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	2c 8d       	ldd	r18, Y+28	; 0x1c
    10e6:	30 e0       	ldi	r19, 0x00	; 0
    10e8:	82 9f       	mul	r24, r18
    10ea:	a0 01       	movw	r20, r0
    10ec:	83 9f       	mul	r24, r19
    10ee:	50 0d       	add	r21, r0
    10f0:	92 9f       	mul	r25, r18
    10f2:	50 0d       	add	r21, r0
    10f4:	11 24       	eor	r1, r1
    10f6:	4e 0f       	add	r20, r30
    10f8:	5f 1f       	adc	r21, r31
    10fa:	5b 83       	std	Y+3, r21	; 0x03
    10fc:	4a 83       	std	Y+2, r20	; 0x02
    10fe:	1a 8e       	std	Y+26, r1	; 0x1a
    1100:	fd 83       	std	Y+5, r31	; 0x05
    1102:	ec 83       	std	Y+4, r30	; 0x04
    1104:	01 97       	sbiw	r24, 0x01	; 1
    1106:	28 9f       	mul	r18, r24
    1108:	a0 01       	movw	r20, r0
    110a:	29 9f       	mul	r18, r25
    110c:	50 0d       	add	r21, r0
    110e:	38 9f       	mul	r19, r24
    1110:	50 0d       	add	r21, r0
    1112:	11 24       	eor	r1, r1
    1114:	cf 01       	movw	r24, r30
    1116:	84 0f       	add	r24, r20
    1118:	95 1f       	adc	r25, r21
    111a:	9f 83       	std	Y+7, r25	; 0x07
    111c:	8e 83       	std	Y+6, r24	; 0x06
    111e:	8f ef       	ldi	r24, 0xFF	; 255
    1120:	8d 8f       	std	Y+29, r24	; 0x1d
    1122:	8e 8f       	std	Y+30, r24	; 0x1e
    1124:	61 11       	cpse	r22, r1
    1126:	0c c0       	rjmp	.+24     	; 0x1140 <xQueueGenericReset+0x70>
    1128:	88 85       	ldd	r24, Y+8	; 0x08
    112a:	88 23       	and	r24, r24
    112c:	89 f0       	breq	.+34     	; 0x1150 <xQueueGenericReset+0x80>
    112e:	ce 01       	movw	r24, r28
    1130:	08 96       	adiw	r24, 0x08	; 8
    1132:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <xTaskRemoveFromEventList>
    1136:	88 23       	and	r24, r24
    1138:	59 f0       	breq	.+22     	; 0x1150 <xQueueGenericReset+0x80>
    113a:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <vPortYield>
    113e:	08 c0       	rjmp	.+16     	; 0x1150 <xQueueGenericReset+0x80>
    1140:	ce 01       	movw	r24, r28
    1142:	08 96       	adiw	r24, 0x08	; 8
    1144:	0e 94 bb 05 	call	0xb76	; 0xb76 <vListInitialise>
    1148:	ce 01       	movw	r24, r28
    114a:	41 96       	adiw	r24, 0x11	; 17
    114c:	0e 94 bb 05 	call	0xb76	; 0xb76 <vListInitialise>
    1150:	0f 90       	pop	r0
    1152:	0f be       	out	0x3f, r0	; 63
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	df 91       	pop	r29
    1158:	cf 91       	pop	r28
    115a:	08 95       	ret

0000115c <prvInitialiseNewQueue>:
    115c:	0f 93       	push	r16
    115e:	1f 93       	push	r17
    1160:	f8 01       	movw	r30, r16
    1162:	61 11       	cpse	r22, r1
    1164:	03 c0       	rjmp	.+6      	; 0x116c <prvInitialiseNewQueue+0x10>
    1166:	11 83       	std	Z+1, r17	; 0x01
    1168:	00 83       	st	Z, r16
    116a:	02 c0       	rjmp	.+4      	; 0x1170 <prvInitialiseNewQueue+0x14>
    116c:	51 83       	std	Z+1, r21	; 0x01
    116e:	40 83       	st	Z, r20
    1170:	83 8f       	std	Z+27, r24	; 0x1b
    1172:	64 8f       	std	Z+28, r22	; 0x1c
    1174:	61 e0       	ldi	r22, 0x01	; 1
    1176:	cf 01       	movw	r24, r30
    1178:	0e 94 68 08 	call	0x10d0	; 0x10d0 <xQueueGenericReset>
    117c:	1f 91       	pop	r17
    117e:	0f 91       	pop	r16
    1180:	08 95       	ret

00001182 <xQueueGenericCreate>:
    1182:	df 92       	push	r13
    1184:	ef 92       	push	r14
    1186:	ff 92       	push	r15
    1188:	0f 93       	push	r16
    118a:	1f 93       	push	r17
    118c:	cf 93       	push	r28
    118e:	df 93       	push	r29
    1190:	e8 2e       	mov	r14, r24
    1192:	f6 2e       	mov	r15, r22
    1194:	d4 2e       	mov	r13, r20
    1196:	66 23       	and	r22, r22
    1198:	21 f0       	breq	.+8      	; 0x11a2 <xQueueGenericCreate+0x20>
    119a:	86 9f       	mul	r24, r22
    119c:	c0 01       	movw	r24, r0
    119e:	11 24       	eor	r1, r1
    11a0:	02 c0       	rjmp	.+4      	; 0x11a6 <xQueueGenericCreate+0x24>
    11a2:	80 e0       	ldi	r24, 0x00	; 0
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	4f 96       	adiw	r24, 0x1f	; 31
    11a8:	0e 94 0c 05 	call	0xa18	; 0xa18 <pvPortMalloc>
    11ac:	ec 01       	movw	r28, r24
    11ae:	00 97       	sbiw	r24, 0x00	; 0
    11b0:	49 f0       	breq	.+18     	; 0x11c4 <xQueueGenericCreate+0x42>
    11b2:	8c 01       	movw	r16, r24
    11b4:	2d 2d       	mov	r18, r13
    11b6:	ac 01       	movw	r20, r24
    11b8:	41 5e       	subi	r20, 0xE1	; 225
    11ba:	5f 4f       	sbci	r21, 0xFF	; 255
    11bc:	6f 2d       	mov	r22, r15
    11be:	8e 2d       	mov	r24, r14
    11c0:	0e 94 ae 08 	call	0x115c	; 0x115c <prvInitialiseNewQueue>
    11c4:	ce 01       	movw	r24, r28
    11c6:	df 91       	pop	r29
    11c8:	cf 91       	pop	r28
    11ca:	1f 91       	pop	r17
    11cc:	0f 91       	pop	r16
    11ce:	ff 90       	pop	r15
    11d0:	ef 90       	pop	r14
    11d2:	df 90       	pop	r13
    11d4:	08 95       	ret

000011d6 <xQueueGenericSend>:
    11d6:	cf 92       	push	r12
    11d8:	df 92       	push	r13
    11da:	ef 92       	push	r14
    11dc:	ff 92       	push	r15
    11de:	0f 93       	push	r16
    11e0:	1f 93       	push	r17
    11e2:	cf 93       	push	r28
    11e4:	df 93       	push	r29
    11e6:	00 d0       	rcall	.+0      	; 0x11e8 <xQueueGenericSend+0x12>
    11e8:	00 d0       	rcall	.+0      	; 0x11ea <xQueueGenericSend+0x14>
    11ea:	1f 92       	push	r1
    11ec:	cd b7       	in	r28, 0x3d	; 61
    11ee:	de b7       	in	r29, 0x3e	; 62
    11f0:	8c 01       	movw	r16, r24
    11f2:	7b 01       	movw	r14, r22
    11f4:	5d 83       	std	Y+5, r21	; 0x05
    11f6:	4c 83       	std	Y+4, r20	; 0x04
    11f8:	c2 2e       	mov	r12, r18
    11fa:	d1 2c       	mov	r13, r1
    11fc:	0f b6       	in	r0, 0x3f	; 63
    11fe:	f8 94       	cli
    1200:	0f 92       	push	r0
    1202:	f8 01       	movw	r30, r16
    1204:	92 8d       	ldd	r25, Z+26	; 0x1a
    1206:	83 8d       	ldd	r24, Z+27	; 0x1b
    1208:	98 17       	cp	r25, r24
    120a:	18 f0       	brcs	.+6      	; 0x1212 <xQueueGenericSend+0x3c>
    120c:	f2 e0       	ldi	r31, 0x02	; 2
    120e:	cf 12       	cpse	r12, r31
    1210:	19 c0       	rjmp	.+50     	; 0x1244 <xQueueGenericSend+0x6e>
    1212:	4c 2d       	mov	r20, r12
    1214:	b7 01       	movw	r22, r14
    1216:	c8 01       	movw	r24, r16
    1218:	0e 94 bb 07 	call	0xf76	; 0xf76 <prvCopyDataToQueue>
    121c:	f8 01       	movw	r30, r16
    121e:	91 89       	ldd	r25, Z+17	; 0x11
    1220:	99 23       	and	r25, r25
    1222:	49 f0       	breq	.+18     	; 0x1236 <xQueueGenericSend+0x60>
    1224:	c8 01       	movw	r24, r16
    1226:	41 96       	adiw	r24, 0x11	; 17
    1228:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <xTaskRemoveFromEventList>
    122c:	88 23       	and	r24, r24
    122e:	31 f0       	breq	.+12     	; 0x123c <xQueueGenericSend+0x66>
    1230:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <vPortYield>
    1234:	03 c0       	rjmp	.+6      	; 0x123c <xQueueGenericSend+0x66>
    1236:	81 11       	cpse	r24, r1
    1238:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <vPortYield>
    123c:	0f 90       	pop	r0
    123e:	0f be       	out	0x3f, r0	; 63
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	4d c0       	rjmp	.+154    	; 0x12de <xQueueGenericSend+0x108>
    1244:	8c 81       	ldd	r24, Y+4	; 0x04
    1246:	9d 81       	ldd	r25, Y+5	; 0x05
    1248:	89 2b       	or	r24, r25
    124a:	21 f4       	brne	.+8      	; 0x1254 <xQueueGenericSend+0x7e>
    124c:	0f 90       	pop	r0
    124e:	0f be       	out	0x3f, r0	; 63
    1250:	80 e0       	ldi	r24, 0x00	; 0
    1252:	45 c0       	rjmp	.+138    	; 0x12de <xQueueGenericSend+0x108>
    1254:	d1 10       	cpse	r13, r1
    1256:	06 c0       	rjmp	.+12     	; 0x1264 <xQueueGenericSend+0x8e>
    1258:	ce 01       	movw	r24, r28
    125a:	01 96       	adiw	r24, 0x01	; 1
    125c:	0e 94 e3 0e 	call	0x1dc6	; 0x1dc6 <vTaskSetTimeOutState>
    1260:	dd 24       	eor	r13, r13
    1262:	d3 94       	inc	r13
    1264:	0f 90       	pop	r0
    1266:	0f be       	out	0x3f, r0	; 63
    1268:	0e 94 bc 0c 	call	0x1978	; 0x1978 <vTaskSuspendAll>
    126c:	0f b6       	in	r0, 0x3f	; 63
    126e:	f8 94       	cli
    1270:	0f 92       	push	r0
    1272:	f8 01       	movw	r30, r16
    1274:	85 8d       	ldd	r24, Z+29	; 0x1d
    1276:	8f 3f       	cpi	r24, 0xFF	; 255
    1278:	09 f4       	brne	.+2      	; 0x127c <xQueueGenericSend+0xa6>
    127a:	15 8e       	std	Z+29, r1	; 0x1d
    127c:	f8 01       	movw	r30, r16
    127e:	86 8d       	ldd	r24, Z+30	; 0x1e
    1280:	8f 3f       	cpi	r24, 0xFF	; 255
    1282:	09 f4       	brne	.+2      	; 0x1286 <xQueueGenericSend+0xb0>
    1284:	16 8e       	std	Z+30, r1	; 0x1e
    1286:	0f 90       	pop	r0
    1288:	0f be       	out	0x3f, r0	; 63
    128a:	be 01       	movw	r22, r28
    128c:	6c 5f       	subi	r22, 0xFC	; 252
    128e:	7f 4f       	sbci	r23, 0xFF	; 255
    1290:	ce 01       	movw	r24, r28
    1292:	01 96       	adiw	r24, 0x01	; 1
    1294:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <xTaskCheckForTimeOut>
    1298:	81 11       	cpse	r24, r1
    129a:	1b c0       	rjmp	.+54     	; 0x12d2 <xQueueGenericSend+0xfc>
    129c:	c8 01       	movw	r24, r16
    129e:	0e 94 ad 07 	call	0xf5a	; 0xf5a <prvIsQueueFull>
    12a2:	88 23       	and	r24, r24
    12a4:	81 f0       	breq	.+32     	; 0x12c6 <xQueueGenericSend+0xf0>
    12a6:	6c 81       	ldd	r22, Y+4	; 0x04
    12a8:	7d 81       	ldd	r23, Y+5	; 0x05
    12aa:	c8 01       	movw	r24, r16
    12ac:	08 96       	adiw	r24, 0x08	; 8
    12ae:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <vTaskPlaceOnEventList>
    12b2:	c8 01       	movw	r24, r16
    12b4:	0e 94 34 08 	call	0x1068	; 0x1068 <prvUnlockQueue>
    12b8:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <xTaskResumeAll>
    12bc:	81 11       	cpse	r24, r1
    12be:	9e cf       	rjmp	.-196    	; 0x11fc <xQueueGenericSend+0x26>
    12c0:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <vPortYield>
    12c4:	9b cf       	rjmp	.-202    	; 0x11fc <xQueueGenericSend+0x26>
    12c6:	c8 01       	movw	r24, r16
    12c8:	0e 94 34 08 	call	0x1068	; 0x1068 <prvUnlockQueue>
    12cc:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <xTaskResumeAll>
    12d0:	95 cf       	rjmp	.-214    	; 0x11fc <xQueueGenericSend+0x26>
    12d2:	c8 01       	movw	r24, r16
    12d4:	0e 94 34 08 	call	0x1068	; 0x1068 <prvUnlockQueue>
    12d8:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <xTaskResumeAll>
    12dc:	80 e0       	ldi	r24, 0x00	; 0
    12de:	0f 90       	pop	r0
    12e0:	0f 90       	pop	r0
    12e2:	0f 90       	pop	r0
    12e4:	0f 90       	pop	r0
    12e6:	0f 90       	pop	r0
    12e8:	df 91       	pop	r29
    12ea:	cf 91       	pop	r28
    12ec:	1f 91       	pop	r17
    12ee:	0f 91       	pop	r16
    12f0:	ff 90       	pop	r15
    12f2:	ef 90       	pop	r14
    12f4:	df 90       	pop	r13
    12f6:	cf 90       	pop	r12
    12f8:	08 95       	ret

000012fa <xQueueGenericReceive>:
    12fa:	8f 92       	push	r8
    12fc:	9f 92       	push	r9
    12fe:	bf 92       	push	r11
    1300:	cf 92       	push	r12
    1302:	df 92       	push	r13
    1304:	ef 92       	push	r14
    1306:	ff 92       	push	r15
    1308:	0f 93       	push	r16
    130a:	1f 93       	push	r17
    130c:	cf 93       	push	r28
    130e:	df 93       	push	r29
    1310:	00 d0       	rcall	.+0      	; 0x1312 <xQueueGenericReceive+0x18>
    1312:	00 d0       	rcall	.+0      	; 0x1314 <xQueueGenericReceive+0x1a>
    1314:	1f 92       	push	r1
    1316:	cd b7       	in	r28, 0x3d	; 61
    1318:	de b7       	in	r29, 0x3e	; 62
    131a:	8c 01       	movw	r16, r24
    131c:	6b 01       	movw	r12, r22
    131e:	5d 83       	std	Y+5, r21	; 0x05
    1320:	4c 83       	std	Y+4, r20	; 0x04
    1322:	b2 2e       	mov	r11, r18
    1324:	e1 2c       	mov	r14, r1
    1326:	0f b6       	in	r0, 0x3f	; 63
    1328:	f8 94       	cli
    132a:	0f 92       	push	r0
    132c:	f8 01       	movw	r30, r16
    132e:	f2 8c       	ldd	r15, Z+26	; 0x1a
    1330:	ff 20       	and	r15, r15
    1332:	91 f1       	breq	.+100    	; 0x1398 <xQueueGenericReceive+0x9e>
    1334:	86 80       	ldd	r8, Z+6	; 0x06
    1336:	97 80       	ldd	r9, Z+7	; 0x07
    1338:	b6 01       	movw	r22, r12
    133a:	c8 01       	movw	r24, r16
    133c:	0e 94 1a 08 	call	0x1034	; 0x1034 <prvCopyDataFromQueue>
    1340:	b1 10       	cpse	r11, r1
    1342:	19 c0       	rjmp	.+50     	; 0x1376 <xQueueGenericReceive+0x7c>
    1344:	fa 94       	dec	r15
    1346:	f8 01       	movw	r30, r16
    1348:	f2 8e       	std	Z+26, r15	; 0x1a
    134a:	80 81       	ld	r24, Z
    134c:	91 81       	ldd	r25, Z+1	; 0x01
    134e:	89 2b       	or	r24, r25
    1350:	29 f4       	brne	.+10     	; 0x135c <xQueueGenericReceive+0x62>
    1352:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <pvTaskIncrementMutexHeldCount>
    1356:	f8 01       	movw	r30, r16
    1358:	93 83       	std	Z+3, r25	; 0x03
    135a:	82 83       	std	Z+2, r24	; 0x02
    135c:	f8 01       	movw	r30, r16
    135e:	80 85       	ldd	r24, Z+8	; 0x08
    1360:	88 23       	and	r24, r24
    1362:	b1 f0       	breq	.+44     	; 0x1390 <xQueueGenericReceive+0x96>
    1364:	c8 01       	movw	r24, r16
    1366:	08 96       	adiw	r24, 0x08	; 8
    1368:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <xTaskRemoveFromEventList>
    136c:	88 23       	and	r24, r24
    136e:	81 f0       	breq	.+32     	; 0x1390 <xQueueGenericReceive+0x96>
    1370:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <vPortYield>
    1374:	0d c0       	rjmp	.+26     	; 0x1390 <xQueueGenericReceive+0x96>
    1376:	f8 01       	movw	r30, r16
    1378:	97 82       	std	Z+7, r9	; 0x07
    137a:	86 82       	std	Z+6, r8	; 0x06
    137c:	81 89       	ldd	r24, Z+17	; 0x11
    137e:	88 23       	and	r24, r24
    1380:	39 f0       	breq	.+14     	; 0x1390 <xQueueGenericReceive+0x96>
    1382:	c8 01       	movw	r24, r16
    1384:	41 96       	adiw	r24, 0x11	; 17
    1386:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <xTaskRemoveFromEventList>
    138a:	81 11       	cpse	r24, r1
    138c:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <vPortYield>
    1390:	0f 90       	pop	r0
    1392:	0f be       	out	0x3f, r0	; 63
    1394:	81 e0       	ldi	r24, 0x01	; 1
    1396:	61 c0       	rjmp	.+194    	; 0x145a <xQueueGenericReceive+0x160>
    1398:	8c 81       	ldd	r24, Y+4	; 0x04
    139a:	9d 81       	ldd	r25, Y+5	; 0x05
    139c:	89 2b       	or	r24, r25
    139e:	21 f4       	brne	.+8      	; 0x13a8 <xQueueGenericReceive+0xae>
    13a0:	0f 90       	pop	r0
    13a2:	0f be       	out	0x3f, r0	; 63
    13a4:	80 e0       	ldi	r24, 0x00	; 0
    13a6:	59 c0       	rjmp	.+178    	; 0x145a <xQueueGenericReceive+0x160>
    13a8:	e1 10       	cpse	r14, r1
    13aa:	06 c0       	rjmp	.+12     	; 0x13b8 <xQueueGenericReceive+0xbe>
    13ac:	ce 01       	movw	r24, r28
    13ae:	01 96       	adiw	r24, 0x01	; 1
    13b0:	0e 94 e3 0e 	call	0x1dc6	; 0x1dc6 <vTaskSetTimeOutState>
    13b4:	ee 24       	eor	r14, r14
    13b6:	e3 94       	inc	r14
    13b8:	0f 90       	pop	r0
    13ba:	0f be       	out	0x3f, r0	; 63
    13bc:	0e 94 bc 0c 	call	0x1978	; 0x1978 <vTaskSuspendAll>
    13c0:	0f b6       	in	r0, 0x3f	; 63
    13c2:	f8 94       	cli
    13c4:	0f 92       	push	r0
    13c6:	f8 01       	movw	r30, r16
    13c8:	85 8d       	ldd	r24, Z+29	; 0x1d
    13ca:	8f 3f       	cpi	r24, 0xFF	; 255
    13cc:	09 f4       	brne	.+2      	; 0x13d0 <xQueueGenericReceive+0xd6>
    13ce:	15 8e       	std	Z+29, r1	; 0x1d
    13d0:	f8 01       	movw	r30, r16
    13d2:	86 8d       	ldd	r24, Z+30	; 0x1e
    13d4:	8f 3f       	cpi	r24, 0xFF	; 255
    13d6:	09 f4       	brne	.+2      	; 0x13da <xQueueGenericReceive+0xe0>
    13d8:	16 8e       	std	Z+30, r1	; 0x1e
    13da:	0f 90       	pop	r0
    13dc:	0f be       	out	0x3f, r0	; 63
    13de:	be 01       	movw	r22, r28
    13e0:	6c 5f       	subi	r22, 0xFC	; 252
    13e2:	7f 4f       	sbci	r23, 0xFF	; 255
    13e4:	ce 01       	movw	r24, r28
    13e6:	01 96       	adiw	r24, 0x01	; 1
    13e8:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <xTaskCheckForTimeOut>
    13ec:	81 11       	cpse	r24, r1
    13ee:	29 c0       	rjmp	.+82     	; 0x1442 <xQueueGenericReceive+0x148>
    13f0:	c8 01       	movw	r24, r16
    13f2:	0e 94 a0 07 	call	0xf40	; 0xf40 <prvIsQueueEmpty>
    13f6:	88 23       	and	r24, r24
    13f8:	f1 f0       	breq	.+60     	; 0x1436 <xQueueGenericReceive+0x13c>
    13fa:	f8 01       	movw	r30, r16
    13fc:	80 81       	ld	r24, Z
    13fe:	91 81       	ldd	r25, Z+1	; 0x01
    1400:	89 2b       	or	r24, r25
    1402:	49 f4       	brne	.+18     	; 0x1416 <xQueueGenericReceive+0x11c>
    1404:	0f b6       	in	r0, 0x3f	; 63
    1406:	f8 94       	cli
    1408:	0f 92       	push	r0
    140a:	82 81       	ldd	r24, Z+2	; 0x02
    140c:	93 81       	ldd	r25, Z+3	; 0x03
    140e:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <vTaskPriorityInherit>
    1412:	0f 90       	pop	r0
    1414:	0f be       	out	0x3f, r0	; 63
    1416:	6c 81       	ldd	r22, Y+4	; 0x04
    1418:	7d 81       	ldd	r23, Y+5	; 0x05
    141a:	c8 01       	movw	r24, r16
    141c:	41 96       	adiw	r24, 0x11	; 17
    141e:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <vTaskPlaceOnEventList>
    1422:	c8 01       	movw	r24, r16
    1424:	0e 94 34 08 	call	0x1068	; 0x1068 <prvUnlockQueue>
    1428:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <xTaskResumeAll>
    142c:	81 11       	cpse	r24, r1
    142e:	7b cf       	rjmp	.-266    	; 0x1326 <xQueueGenericReceive+0x2c>
    1430:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <vPortYield>
    1434:	78 cf       	rjmp	.-272    	; 0x1326 <xQueueGenericReceive+0x2c>
    1436:	c8 01       	movw	r24, r16
    1438:	0e 94 34 08 	call	0x1068	; 0x1068 <prvUnlockQueue>
    143c:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <xTaskResumeAll>
    1440:	72 cf       	rjmp	.-284    	; 0x1326 <xQueueGenericReceive+0x2c>
    1442:	c8 01       	movw	r24, r16
    1444:	0e 94 34 08 	call	0x1068	; 0x1068 <prvUnlockQueue>
    1448:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <xTaskResumeAll>
    144c:	c8 01       	movw	r24, r16
    144e:	0e 94 a0 07 	call	0xf40	; 0xf40 <prvIsQueueEmpty>
    1452:	88 23       	and	r24, r24
    1454:	09 f4       	brne	.+2      	; 0x1458 <xQueueGenericReceive+0x15e>
    1456:	67 cf       	rjmp	.-306    	; 0x1326 <xQueueGenericReceive+0x2c>
    1458:	80 e0       	ldi	r24, 0x00	; 0
    145a:	0f 90       	pop	r0
    145c:	0f 90       	pop	r0
    145e:	0f 90       	pop	r0
    1460:	0f 90       	pop	r0
    1462:	0f 90       	pop	r0
    1464:	df 91       	pop	r29
    1466:	cf 91       	pop	r28
    1468:	1f 91       	pop	r17
    146a:	0f 91       	pop	r16
    146c:	ff 90       	pop	r15
    146e:	ef 90       	pop	r14
    1470:	df 90       	pop	r13
    1472:	cf 90       	pop	r12
    1474:	bf 90       	pop	r11
    1476:	9f 90       	pop	r9
    1478:	8f 90       	pop	r8
    147a:	08 95       	ret

0000147c <prvResetNextTaskUnblockTime>:
    147c:	e0 91 33 05 	lds	r30, 0x0533	; 0x800533 <pxDelayedTaskList>
    1480:	f0 91 34 05 	lds	r31, 0x0534	; 0x800534 <pxDelayedTaskList+0x1>
    1484:	80 81       	ld	r24, Z
    1486:	81 11       	cpse	r24, r1
    1488:	07 c0       	rjmp	.+14     	; 0x1498 <prvResetNextTaskUnblockTime+0x1c>
    148a:	8f ef       	ldi	r24, 0xFF	; 255
    148c:	9f ef       	ldi	r25, 0xFF	; 255
    148e:	90 93 0b 05 	sts	0x050B, r25	; 0x80050b <xNextTaskUnblockTime+0x1>
    1492:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <xNextTaskUnblockTime>
    1496:	08 95       	ret
    1498:	e0 91 33 05 	lds	r30, 0x0533	; 0x800533 <pxDelayedTaskList>
    149c:	f0 91 34 05 	lds	r31, 0x0534	; 0x800534 <pxDelayedTaskList+0x1>
    14a0:	05 80       	ldd	r0, Z+5	; 0x05
    14a2:	f6 81       	ldd	r31, Z+6	; 0x06
    14a4:	e0 2d       	mov	r30, r0
    14a6:	06 80       	ldd	r0, Z+6	; 0x06
    14a8:	f7 81       	ldd	r31, Z+7	; 0x07
    14aa:	e0 2d       	mov	r30, r0
    14ac:	82 81       	ldd	r24, Z+2	; 0x02
    14ae:	93 81       	ldd	r25, Z+3	; 0x03
    14b0:	90 93 0b 05 	sts	0x050B, r25	; 0x80050b <xNextTaskUnblockTime+0x1>
    14b4:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <xNextTaskUnblockTime>
    14b8:	08 95       	ret

000014ba <prvDeleteTCB>:
    14ba:	cf 93       	push	r28
    14bc:	df 93       	push	r29
    14be:	ec 01       	movw	r28, r24
    14c0:	8f 89       	ldd	r24, Y+23	; 0x17
    14c2:	98 8d       	ldd	r25, Y+24	; 0x18
    14c4:	0e 94 88 05 	call	0xb10	; 0xb10 <vPortFree>
    14c8:	ce 01       	movw	r24, r28
    14ca:	0e 94 88 05 	call	0xb10	; 0xb10 <vPortFree>
    14ce:	df 91       	pop	r29
    14d0:	cf 91       	pop	r28
    14d2:	08 95       	ret

000014d4 <prvInitialiseNewTask>:
    14d4:	6f 92       	push	r6
    14d6:	7f 92       	push	r7
    14d8:	8f 92       	push	r8
    14da:	9f 92       	push	r9
    14dc:	af 92       	push	r10
    14de:	bf 92       	push	r11
    14e0:	cf 92       	push	r12
    14e2:	df 92       	push	r13
    14e4:	ef 92       	push	r14
    14e6:	0f 93       	push	r16
    14e8:	1f 93       	push	r17
    14ea:	cf 93       	push	r28
    14ec:	df 93       	push	r29
    14ee:	cd b7       	in	r28, 0x3d	; 61
    14f0:	de b7       	in	r29, 0x3e	; 62
    14f2:	4c 01       	movw	r8, r24
    14f4:	f5 01       	movw	r30, r10
    14f6:	87 89       	ldd	r24, Z+23	; 0x17
    14f8:	90 8d       	ldd	r25, Z+24	; 0x18
    14fa:	21 50       	subi	r18, 0x01	; 1
    14fc:	31 09       	sbc	r19, r1
    14fe:	3c 01       	movw	r6, r24
    1500:	62 0e       	add	r6, r18
    1502:	73 1e       	adc	r7, r19
    1504:	20 e0       	ldi	r18, 0x00	; 0
    1506:	0f c0       	rjmp	.+30     	; 0x1526 <prvInitialiseNewTask+0x52>
    1508:	82 2f       	mov	r24, r18
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	fb 01       	movw	r30, r22
    150e:	e8 0f       	add	r30, r24
    1510:	f9 1f       	adc	r31, r25
    1512:	30 81       	ld	r19, Z
    1514:	d5 01       	movw	r26, r10
    1516:	a8 0f       	add	r26, r24
    1518:	b9 1f       	adc	r27, r25
    151a:	59 96       	adiw	r26, 0x19	; 25
    151c:	3c 93       	st	X, r19
    151e:	80 81       	ld	r24, Z
    1520:	88 23       	and	r24, r24
    1522:	19 f0       	breq	.+6      	; 0x152a <prvInitialiseNewTask+0x56>
    1524:	2f 5f       	subi	r18, 0xFF	; 255
    1526:	28 30       	cpi	r18, 0x08	; 8
    1528:	78 f3       	brcs	.-34     	; 0x1508 <prvInitialiseNewTask+0x34>
    152a:	f5 01       	movw	r30, r10
    152c:	10 a2       	std	Z+32, r1	; 0x20
    152e:	f8 e0       	ldi	r31, 0x08	; 8
    1530:	fe 15       	cp	r31, r14
    1532:	18 f4       	brcc	.+6      	; 0x153a <prvInitialiseNewTask+0x66>
    1534:	68 94       	set
    1536:	ee 24       	eor	r14, r14
    1538:	e3 f8       	bld	r14, 3
    153a:	f5 01       	movw	r30, r10
    153c:	e6 8a       	std	Z+22, r14	; 0x16
    153e:	e1 a2       	std	Z+33, r14	; 0x21
    1540:	12 a2       	std	Z+34, r1	; 0x22
    1542:	c5 01       	movw	r24, r10
    1544:	02 96       	adiw	r24, 0x02	; 2
    1546:	0e 94 c9 05 	call	0xb92	; 0xb92 <vListInitialiseItem>
    154a:	c5 01       	movw	r24, r10
    154c:	0c 96       	adiw	r24, 0x0c	; 12
    154e:	0e 94 c9 05 	call	0xb92	; 0xb92 <vListInitialiseItem>
    1552:	f5 01       	movw	r30, r10
    1554:	b1 86       	std	Z+9, r11	; 0x09
    1556:	a0 86       	std	Z+8, r10	; 0x08
    1558:	89 e0       	ldi	r24, 0x09	; 9
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	8e 19       	sub	r24, r14
    155e:	91 09       	sbc	r25, r1
    1560:	95 87       	std	Z+13, r25	; 0x0d
    1562:	84 87       	std	Z+12, r24	; 0x0c
    1564:	b3 8a       	std	Z+19, r11	; 0x13
    1566:	a2 8a       	std	Z+18, r10	; 0x12
    1568:	13 a2       	std	Z+35, r1	; 0x23
    156a:	14 a2       	std	Z+36, r1	; 0x24
    156c:	15 a2       	std	Z+37, r1	; 0x25
    156e:	16 a2       	std	Z+38, r1	; 0x26
    1570:	17 a2       	std	Z+39, r1	; 0x27
    1572:	a8 01       	movw	r20, r16
    1574:	b4 01       	movw	r22, r8
    1576:	c3 01       	movw	r24, r6
    1578:	0e 94 4d 06 	call	0xc9a	; 0xc9a <pxPortInitialiseStack>
    157c:	f5 01       	movw	r30, r10
    157e:	91 83       	std	Z+1, r25	; 0x01
    1580:	80 83       	st	Z, r24
    1582:	c1 14       	cp	r12, r1
    1584:	d1 04       	cpc	r13, r1
    1586:	19 f0       	breq	.+6      	; 0x158e <prvInitialiseNewTask+0xba>
    1588:	f6 01       	movw	r30, r12
    158a:	b1 82       	std	Z+1, r11	; 0x01
    158c:	a0 82       	st	Z, r10
    158e:	df 91       	pop	r29
    1590:	cf 91       	pop	r28
    1592:	1f 91       	pop	r17
    1594:	0f 91       	pop	r16
    1596:	ef 90       	pop	r14
    1598:	df 90       	pop	r13
    159a:	cf 90       	pop	r12
    159c:	bf 90       	pop	r11
    159e:	af 90       	pop	r10
    15a0:	9f 90       	pop	r9
    15a2:	8f 90       	pop	r8
    15a4:	7f 90       	pop	r7
    15a6:	6f 90       	pop	r6
    15a8:	08 95       	ret

000015aa <prvInitialiseTaskLists>:
    15aa:	cf 93       	push	r28
    15ac:	c0 e0       	ldi	r28, 0x00	; 0
    15ae:	10 c0       	rjmp	.+32     	; 0x15d0 <prvInitialiseTaskLists+0x26>
    15b0:	8c 2f       	mov	r24, r28
    15b2:	90 e0       	ldi	r25, 0x00	; 0
    15b4:	9c 01       	movw	r18, r24
    15b6:	22 0f       	add	r18, r18
    15b8:	33 1f       	adc	r19, r19
    15ba:	22 0f       	add	r18, r18
    15bc:	33 1f       	adc	r19, r19
    15be:	22 0f       	add	r18, r18
    15c0:	33 1f       	adc	r19, r19
    15c2:	82 0f       	add	r24, r18
    15c4:	93 1f       	adc	r25, r19
    15c6:	89 5b       	subi	r24, 0xB9	; 185
    15c8:	9a 4f       	sbci	r25, 0xFA	; 250
    15ca:	0e 94 bb 05 	call	0xb76	; 0xb76 <vListInitialise>
    15ce:	cf 5f       	subi	r28, 0xFF	; 255
    15d0:	c9 30       	cpi	r28, 0x09	; 9
    15d2:	70 f3       	brcs	.-36     	; 0x15b0 <prvInitialiseTaskLists+0x6>
    15d4:	8e e3       	ldi	r24, 0x3E	; 62
    15d6:	95 e0       	ldi	r25, 0x05	; 5
    15d8:	0e 94 bb 05 	call	0xb76	; 0xb76 <vListInitialise>
    15dc:	85 e3       	ldi	r24, 0x35	; 53
    15de:	95 e0       	ldi	r25, 0x05	; 5
    15e0:	0e 94 bb 05 	call	0xb76	; 0xb76 <vListInitialise>
    15e4:	88 e2       	ldi	r24, 0x28	; 40
    15e6:	95 e0       	ldi	r25, 0x05	; 5
    15e8:	0e 94 bb 05 	call	0xb76	; 0xb76 <vListInitialise>
    15ec:	8f e1       	ldi	r24, 0x1F	; 31
    15ee:	95 e0       	ldi	r25, 0x05	; 5
    15f0:	0e 94 bb 05 	call	0xb76	; 0xb76 <vListInitialise>
    15f4:	85 e1       	ldi	r24, 0x15	; 21
    15f6:	95 e0       	ldi	r25, 0x05	; 5
    15f8:	0e 94 bb 05 	call	0xb76	; 0xb76 <vListInitialise>
    15fc:	8e e3       	ldi	r24, 0x3E	; 62
    15fe:	95 e0       	ldi	r25, 0x05	; 5
    1600:	90 93 34 05 	sts	0x0534, r25	; 0x800534 <pxDelayedTaskList+0x1>
    1604:	80 93 33 05 	sts	0x0533, r24	; 0x800533 <pxDelayedTaskList>
    1608:	85 e3       	ldi	r24, 0x35	; 53
    160a:	95 e0       	ldi	r25, 0x05	; 5
    160c:	90 93 32 05 	sts	0x0532, r25	; 0x800532 <pxOverflowDelayedTaskList+0x1>
    1610:	80 93 31 05 	sts	0x0531, r24	; 0x800531 <pxOverflowDelayedTaskList>
    1614:	cf 91       	pop	r28
    1616:	08 95       	ret

00001618 <prvAddNewTaskToReadyList>:
    1618:	cf 93       	push	r28
    161a:	df 93       	push	r29
    161c:	ec 01       	movw	r28, r24
    161e:	0f b6       	in	r0, 0x3f	; 63
    1620:	f8 94       	cli
    1622:	0f 92       	push	r0
    1624:	80 91 14 05 	lds	r24, 0x0514	; 0x800514 <uxCurrentNumberOfTasks>
    1628:	8f 5f       	subi	r24, 0xFF	; 255
    162a:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <uxCurrentNumberOfTasks>
    162e:	80 91 98 05 	lds	r24, 0x0598	; 0x800598 <pxCurrentTCB>
    1632:	90 91 99 05 	lds	r25, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1636:	89 2b       	or	r24, r25
    1638:	59 f4       	brne	.+22     	; 0x1650 <prvAddNewTaskToReadyList+0x38>
    163a:	d0 93 99 05 	sts	0x0599, r29	; 0x800599 <pxCurrentTCB+0x1>
    163e:	c0 93 98 05 	sts	0x0598, r28	; 0x800598 <pxCurrentTCB>
    1642:	80 91 14 05 	lds	r24, 0x0514	; 0x800514 <uxCurrentNumberOfTasks>
    1646:	81 30       	cpi	r24, 0x01	; 1
    1648:	99 f4       	brne	.+38     	; 0x1670 <prvAddNewTaskToReadyList+0x58>
    164a:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <prvInitialiseTaskLists>
    164e:	10 c0       	rjmp	.+32     	; 0x1670 <prvAddNewTaskToReadyList+0x58>
    1650:	80 91 10 05 	lds	r24, 0x0510	; 0x800510 <xSchedulerRunning>
    1654:	81 11       	cpse	r24, r1
    1656:	0c c0       	rjmp	.+24     	; 0x1670 <prvAddNewTaskToReadyList+0x58>
    1658:	e0 91 98 05 	lds	r30, 0x0598	; 0x800598 <pxCurrentTCB>
    165c:	f0 91 99 05 	lds	r31, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1660:	96 89       	ldd	r25, Z+22	; 0x16
    1662:	8e 89       	ldd	r24, Y+22	; 0x16
    1664:	89 17       	cp	r24, r25
    1666:	20 f0       	brcs	.+8      	; 0x1670 <prvAddNewTaskToReadyList+0x58>
    1668:	d0 93 99 05 	sts	0x0599, r29	; 0x800599 <pxCurrentTCB+0x1>
    166c:	c0 93 98 05 	sts	0x0598, r28	; 0x800598 <pxCurrentTCB>
    1670:	80 91 0c 05 	lds	r24, 0x050C	; 0x80050c <uxTaskNumber>
    1674:	8f 5f       	subi	r24, 0xFF	; 255
    1676:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <uxTaskNumber>
    167a:	8e 89       	ldd	r24, Y+22	; 0x16
    167c:	90 91 11 05 	lds	r25, 0x0511	; 0x800511 <uxTopReadyPriority>
    1680:	98 17       	cp	r25, r24
    1682:	10 f4       	brcc	.+4      	; 0x1688 <prvAddNewTaskToReadyList+0x70>
    1684:	80 93 11 05 	sts	0x0511, r24	; 0x800511 <uxTopReadyPriority>
    1688:	90 e0       	ldi	r25, 0x00	; 0
    168a:	9c 01       	movw	r18, r24
    168c:	22 0f       	add	r18, r18
    168e:	33 1f       	adc	r19, r19
    1690:	22 0f       	add	r18, r18
    1692:	33 1f       	adc	r19, r19
    1694:	22 0f       	add	r18, r18
    1696:	33 1f       	adc	r19, r19
    1698:	82 0f       	add	r24, r18
    169a:	93 1f       	adc	r25, r19
    169c:	be 01       	movw	r22, r28
    169e:	6e 5f       	subi	r22, 0xFE	; 254
    16a0:	7f 4f       	sbci	r23, 0xFF	; 255
    16a2:	89 5b       	subi	r24, 0xB9	; 185
    16a4:	9a 4f       	sbci	r25, 0xFA	; 250
    16a6:	0e 94 cd 05 	call	0xb9a	; 0xb9a <vListInsertEnd>
    16aa:	0f 90       	pop	r0
    16ac:	0f be       	out	0x3f, r0	; 63
    16ae:	80 91 10 05 	lds	r24, 0x0510	; 0x800510 <xSchedulerRunning>
    16b2:	88 23       	and	r24, r24
    16b4:	51 f0       	breq	.+20     	; 0x16ca <prvAddNewTaskToReadyList+0xb2>
    16b6:	e0 91 98 05 	lds	r30, 0x0598	; 0x800598 <pxCurrentTCB>
    16ba:	f0 91 99 05 	lds	r31, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    16be:	96 89       	ldd	r25, Z+22	; 0x16
    16c0:	8e 89       	ldd	r24, Y+22	; 0x16
    16c2:	98 17       	cp	r25, r24
    16c4:	10 f4       	brcc	.+4      	; 0x16ca <prvAddNewTaskToReadyList+0xb2>
    16c6:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <vPortYield>
    16ca:	df 91       	pop	r29
    16cc:	cf 91       	pop	r28
    16ce:	08 95       	ret

000016d0 <prvAddCurrentTaskToDelayedList>:
    16d0:	ff 92       	push	r15
    16d2:	0f 93       	push	r16
    16d4:	1f 93       	push	r17
    16d6:	cf 93       	push	r28
    16d8:	df 93       	push	r29
    16da:	ec 01       	movw	r28, r24
    16dc:	f6 2e       	mov	r15, r22
    16de:	00 91 12 05 	lds	r16, 0x0512	; 0x800512 <xTickCount>
    16e2:	10 91 13 05 	lds	r17, 0x0513	; 0x800513 <xTickCount+0x1>
    16e6:	80 91 98 05 	lds	r24, 0x0598	; 0x800598 <pxCurrentTCB>
    16ea:	90 91 99 05 	lds	r25, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    16ee:	02 96       	adiw	r24, 0x02	; 2
    16f0:	0e 94 1f 06 	call	0xc3e	; 0xc3e <uxListRemove>
    16f4:	cf 3f       	cpi	r28, 0xFF	; 255
    16f6:	8f ef       	ldi	r24, 0xFF	; 255
    16f8:	d8 07       	cpc	r29, r24
    16fa:	69 f4       	brne	.+26     	; 0x1716 <prvAddCurrentTaskToDelayedList+0x46>
    16fc:	ff 20       	and	r15, r15
    16fe:	59 f0       	breq	.+22     	; 0x1716 <prvAddCurrentTaskToDelayedList+0x46>
    1700:	60 91 98 05 	lds	r22, 0x0598	; 0x800598 <pxCurrentTCB>
    1704:	70 91 99 05 	lds	r23, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1708:	6e 5f       	subi	r22, 0xFE	; 254
    170a:	7f 4f       	sbci	r23, 0xFF	; 255
    170c:	85 e1       	ldi	r24, 0x15	; 21
    170e:	95 e0       	ldi	r25, 0x05	; 5
    1710:	0e 94 cd 05 	call	0xb9a	; 0xb9a <vListInsertEnd>
    1714:	2f c0       	rjmp	.+94     	; 0x1774 <prvAddCurrentTaskToDelayedList+0xa4>
    1716:	c0 0f       	add	r28, r16
    1718:	d1 1f       	adc	r29, r17
    171a:	e0 91 98 05 	lds	r30, 0x0598	; 0x800598 <pxCurrentTCB>
    171e:	f0 91 99 05 	lds	r31, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1722:	d3 83       	std	Z+3, r29	; 0x03
    1724:	c2 83       	std	Z+2, r28	; 0x02
    1726:	c0 17       	cp	r28, r16
    1728:	d1 07       	cpc	r29, r17
    172a:	68 f4       	brcc	.+26     	; 0x1746 <prvAddCurrentTaskToDelayedList+0x76>
    172c:	60 91 98 05 	lds	r22, 0x0598	; 0x800598 <pxCurrentTCB>
    1730:	70 91 99 05 	lds	r23, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1734:	80 91 31 05 	lds	r24, 0x0531	; 0x800531 <pxOverflowDelayedTaskList>
    1738:	90 91 32 05 	lds	r25, 0x0532	; 0x800532 <pxOverflowDelayedTaskList+0x1>
    173c:	6e 5f       	subi	r22, 0xFE	; 254
    173e:	7f 4f       	sbci	r23, 0xFF	; 255
    1740:	0e 94 ee 05 	call	0xbdc	; 0xbdc <vListInsert>
    1744:	17 c0       	rjmp	.+46     	; 0x1774 <prvAddCurrentTaskToDelayedList+0xa4>
    1746:	60 91 98 05 	lds	r22, 0x0598	; 0x800598 <pxCurrentTCB>
    174a:	70 91 99 05 	lds	r23, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    174e:	80 91 33 05 	lds	r24, 0x0533	; 0x800533 <pxDelayedTaskList>
    1752:	90 91 34 05 	lds	r25, 0x0534	; 0x800534 <pxDelayedTaskList+0x1>
    1756:	6e 5f       	subi	r22, 0xFE	; 254
    1758:	7f 4f       	sbci	r23, 0xFF	; 255
    175a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <vListInsert>
    175e:	80 91 0a 05 	lds	r24, 0x050A	; 0x80050a <xNextTaskUnblockTime>
    1762:	90 91 0b 05 	lds	r25, 0x050B	; 0x80050b <xNextTaskUnblockTime+0x1>
    1766:	c8 17       	cp	r28, r24
    1768:	d9 07       	cpc	r29, r25
    176a:	20 f4       	brcc	.+8      	; 0x1774 <prvAddCurrentTaskToDelayedList+0xa4>
    176c:	d0 93 0b 05 	sts	0x050B, r29	; 0x80050b <xNextTaskUnblockTime+0x1>
    1770:	c0 93 0a 05 	sts	0x050A, r28	; 0x80050a <xNextTaskUnblockTime>
    1774:	df 91       	pop	r29
    1776:	cf 91       	pop	r28
    1778:	1f 91       	pop	r17
    177a:	0f 91       	pop	r16
    177c:	ff 90       	pop	r15
    177e:	08 95       	ret

00001780 <xTaskCreate>:
    1780:	2f 92       	push	r2
    1782:	3f 92       	push	r3
    1784:	4f 92       	push	r4
    1786:	5f 92       	push	r5
    1788:	6f 92       	push	r6
    178a:	7f 92       	push	r7
    178c:	8f 92       	push	r8
    178e:	9f 92       	push	r9
    1790:	af 92       	push	r10
    1792:	bf 92       	push	r11
    1794:	cf 92       	push	r12
    1796:	df 92       	push	r13
    1798:	ef 92       	push	r14
    179a:	ff 92       	push	r15
    179c:	0f 93       	push	r16
    179e:	1f 93       	push	r17
    17a0:	cf 93       	push	r28
    17a2:	df 93       	push	r29
    17a4:	3c 01       	movw	r6, r24
    17a6:	1b 01       	movw	r2, r22
    17a8:	5a 01       	movw	r10, r20
    17aa:	29 01       	movw	r4, r18
    17ac:	ca 01       	movw	r24, r20
    17ae:	0e 94 0c 05 	call	0xa18	; 0xa18 <pvPortMalloc>
    17b2:	6c 01       	movw	r12, r24
    17b4:	89 2b       	or	r24, r25
    17b6:	71 f0       	breq	.+28     	; 0x17d4 <xTaskCreate+0x54>
    17b8:	88 e2       	ldi	r24, 0x28	; 40
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	0e 94 0c 05 	call	0xa18	; 0xa18 <pvPortMalloc>
    17c0:	ec 01       	movw	r28, r24
    17c2:	89 2b       	or	r24, r25
    17c4:	19 f0       	breq	.+6      	; 0x17cc <xTaskCreate+0x4c>
    17c6:	d8 8e       	std	Y+24, r13	; 0x18
    17c8:	cf 8a       	std	Y+23, r12	; 0x17
    17ca:	06 c0       	rjmp	.+12     	; 0x17d8 <xTaskCreate+0x58>
    17cc:	c6 01       	movw	r24, r12
    17ce:	0e 94 88 05 	call	0xb10	; 0xb10 <vPortFree>
    17d2:	02 c0       	rjmp	.+4      	; 0x17d8 <xTaskCreate+0x58>
    17d4:	c0 e0       	ldi	r28, 0x00	; 0
    17d6:	d0 e0       	ldi	r29, 0x00	; 0
    17d8:	20 97       	sbiw	r28, 0x00	; 0
    17da:	91 f0       	breq	.+36     	; 0x1800 <xTaskCreate+0x80>
    17dc:	95 01       	movw	r18, r10
    17de:	40 e0       	ldi	r20, 0x00	; 0
    17e0:	50 e0       	ldi	r21, 0x00	; 0
    17e2:	81 2c       	mov	r8, r1
    17e4:	91 2c       	mov	r9, r1
    17e6:	5e 01       	movw	r10, r28
    17e8:	67 01       	movw	r12, r14
    17ea:	e0 2e       	mov	r14, r16
    17ec:	82 01       	movw	r16, r4
    17ee:	b1 01       	movw	r22, r2
    17f0:	c3 01       	movw	r24, r6
    17f2:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <prvInitialiseNewTask>
    17f6:	ce 01       	movw	r24, r28
    17f8:	0e 94 0c 0b 	call	0x1618	; 0x1618 <prvAddNewTaskToReadyList>
    17fc:	81 e0       	ldi	r24, 0x01	; 1
    17fe:	01 c0       	rjmp	.+2      	; 0x1802 <xTaskCreate+0x82>
    1800:	8f ef       	ldi	r24, 0xFF	; 255
    1802:	df 91       	pop	r29
    1804:	cf 91       	pop	r28
    1806:	1f 91       	pop	r17
    1808:	0f 91       	pop	r16
    180a:	ff 90       	pop	r15
    180c:	ef 90       	pop	r14
    180e:	df 90       	pop	r13
    1810:	cf 90       	pop	r12
    1812:	bf 90       	pop	r11
    1814:	af 90       	pop	r10
    1816:	9f 90       	pop	r9
    1818:	8f 90       	pop	r8
    181a:	7f 90       	pop	r7
    181c:	6f 90       	pop	r6
    181e:	5f 90       	pop	r5
    1820:	4f 90       	pop	r4
    1822:	3f 90       	pop	r3
    1824:	2f 90       	pop	r2
    1826:	08 95       	ret

00001828 <vTaskPrioritySet>:
    1828:	ef 92       	push	r14
    182a:	ff 92       	push	r15
    182c:	1f 93       	push	r17
    182e:	cf 93       	push	r28
    1830:	df 93       	push	r29
    1832:	ec 01       	movw	r28, r24
    1834:	69 30       	cpi	r22, 0x09	; 9
    1836:	08 f0       	brcs	.+2      	; 0x183a <vTaskPrioritySet+0x12>
    1838:	68 e0       	ldi	r22, 0x08	; 8
    183a:	0f b6       	in	r0, 0x3f	; 63
    183c:	f8 94       	cli
    183e:	0f 92       	push	r0
    1840:	20 97       	sbiw	r28, 0x00	; 0
    1842:	21 f4       	brne	.+8      	; 0x184c <vTaskPrioritySet+0x24>
    1844:	c0 91 98 05 	lds	r28, 0x0598	; 0x800598 <pxCurrentTCB>
    1848:	d0 91 99 05 	lds	r29, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    184c:	99 a1       	ldd	r25, Y+33	; 0x21
    184e:	69 17       	cp	r22, r25
    1850:	09 f4       	brne	.+2      	; 0x1854 <vTaskPrioritySet+0x2c>
    1852:	60 c0       	rjmp	.+192    	; 0x1914 <vTaskPrioritySet+0xec>
    1854:	96 17       	cp	r25, r22
    1856:	80 f4       	brcc	.+32     	; 0x1878 <vTaskPrioritySet+0x50>
    1858:	20 91 98 05 	lds	r18, 0x0598	; 0x800598 <pxCurrentTCB>
    185c:	30 91 99 05 	lds	r19, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1860:	c2 17       	cp	r28, r18
    1862:	d3 07       	cpc	r29, r19
    1864:	91 f0       	breq	.+36     	; 0x188a <vTaskPrioritySet+0x62>
    1866:	e0 91 98 05 	lds	r30, 0x0598	; 0x800598 <pxCurrentTCB>
    186a:	f0 91 99 05 	lds	r31, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    186e:	86 89       	ldd	r24, Z+22	; 0x16
    1870:	68 17       	cp	r22, r24
    1872:	68 f4       	brcc	.+26     	; 0x188e <vTaskPrioritySet+0x66>
    1874:	10 e0       	ldi	r17, 0x00	; 0
    1876:	0e c0       	rjmp	.+28     	; 0x1894 <vTaskPrioritySet+0x6c>
    1878:	20 91 98 05 	lds	r18, 0x0598	; 0x800598 <pxCurrentTCB>
    187c:	30 91 99 05 	lds	r19, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1880:	c2 17       	cp	r28, r18
    1882:	d3 07       	cpc	r29, r19
    1884:	31 f0       	breq	.+12     	; 0x1892 <vTaskPrioritySet+0x6a>
    1886:	10 e0       	ldi	r17, 0x00	; 0
    1888:	05 c0       	rjmp	.+10     	; 0x1894 <vTaskPrioritySet+0x6c>
    188a:	10 e0       	ldi	r17, 0x00	; 0
    188c:	03 c0       	rjmp	.+6      	; 0x1894 <vTaskPrioritySet+0x6c>
    188e:	11 e0       	ldi	r17, 0x01	; 1
    1890:	01 c0       	rjmp	.+2      	; 0x1894 <vTaskPrioritySet+0x6c>
    1892:	11 e0       	ldi	r17, 0x01	; 1
    1894:	8e 89       	ldd	r24, Y+22	; 0x16
    1896:	98 13       	cpse	r25, r24
    1898:	01 c0       	rjmp	.+2      	; 0x189c <vTaskPrioritySet+0x74>
    189a:	6e 8b       	std	Y+22, r22	; 0x16
    189c:	69 a3       	std	Y+33, r22	; 0x21
    189e:	2c 85       	ldd	r18, Y+12	; 0x0c
    18a0:	3d 85       	ldd	r19, Y+13	; 0x0d
    18a2:	33 23       	and	r19, r19
    18a4:	34 f0       	brlt	.+12     	; 0x18b2 <vTaskPrioritySet+0x8a>
    18a6:	29 e0       	ldi	r18, 0x09	; 9
    18a8:	30 e0       	ldi	r19, 0x00	; 0
    18aa:	26 1b       	sub	r18, r22
    18ac:	31 09       	sbc	r19, r1
    18ae:	3d 87       	std	Y+13, r19	; 0x0d
    18b0:	2c 87       	std	Y+12, r18	; 0x0c
    18b2:	2a 85       	ldd	r18, Y+10	; 0x0a
    18b4:	3b 85       	ldd	r19, Y+11	; 0x0b
    18b6:	90 e0       	ldi	r25, 0x00	; 0
    18b8:	ac 01       	movw	r20, r24
    18ba:	44 0f       	add	r20, r20
    18bc:	55 1f       	adc	r21, r21
    18be:	44 0f       	add	r20, r20
    18c0:	55 1f       	adc	r21, r21
    18c2:	44 0f       	add	r20, r20
    18c4:	55 1f       	adc	r21, r21
    18c6:	84 0f       	add	r24, r20
    18c8:	95 1f       	adc	r25, r21
    18ca:	89 5b       	subi	r24, 0xB9	; 185
    18cc:	9a 4f       	sbci	r25, 0xFA	; 250
    18ce:	28 17       	cp	r18, r24
    18d0:	39 07       	cpc	r19, r25
    18d2:	e9 f4       	brne	.+58     	; 0x190e <vTaskPrioritySet+0xe6>
    18d4:	7e 01       	movw	r14, r28
    18d6:	82 e0       	ldi	r24, 0x02	; 2
    18d8:	e8 0e       	add	r14, r24
    18da:	f1 1c       	adc	r15, r1
    18dc:	c7 01       	movw	r24, r14
    18de:	0e 94 1f 06 	call	0xc3e	; 0xc3e <uxListRemove>
    18e2:	8e 89       	ldd	r24, Y+22	; 0x16
    18e4:	90 91 11 05 	lds	r25, 0x0511	; 0x800511 <uxTopReadyPriority>
    18e8:	98 17       	cp	r25, r24
    18ea:	10 f4       	brcc	.+4      	; 0x18f0 <vTaskPrioritySet+0xc8>
    18ec:	80 93 11 05 	sts	0x0511, r24	; 0x800511 <uxTopReadyPriority>
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	9c 01       	movw	r18, r24
    18f4:	22 0f       	add	r18, r18
    18f6:	33 1f       	adc	r19, r19
    18f8:	22 0f       	add	r18, r18
    18fa:	33 1f       	adc	r19, r19
    18fc:	22 0f       	add	r18, r18
    18fe:	33 1f       	adc	r19, r19
    1900:	82 0f       	add	r24, r18
    1902:	93 1f       	adc	r25, r19
    1904:	b7 01       	movw	r22, r14
    1906:	89 5b       	subi	r24, 0xB9	; 185
    1908:	9a 4f       	sbci	r25, 0xFA	; 250
    190a:	0e 94 cd 05 	call	0xb9a	; 0xb9a <vListInsertEnd>
    190e:	11 11       	cpse	r17, r1
    1910:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <vPortYield>
    1914:	0f 90       	pop	r0
    1916:	0f be       	out	0x3f, r0	; 63
    1918:	df 91       	pop	r29
    191a:	cf 91       	pop	r28
    191c:	1f 91       	pop	r17
    191e:	ff 90       	pop	r15
    1920:	ef 90       	pop	r14
    1922:	08 95       	ret

00001924 <vTaskStartScheduler>:
    1924:	ef 92       	push	r14
    1926:	ff 92       	push	r15
    1928:	0f 93       	push	r16
    192a:	0f 2e       	mov	r0, r31
    192c:	f8 e0       	ldi	r31, 0x08	; 8
    192e:	ef 2e       	mov	r14, r31
    1930:	f5 e0       	ldi	r31, 0x05	; 5
    1932:	ff 2e       	mov	r15, r31
    1934:	f0 2d       	mov	r31, r0
    1936:	00 e0       	ldi	r16, 0x00	; 0
    1938:	20 e0       	ldi	r18, 0x00	; 0
    193a:	30 e0       	ldi	r19, 0x00	; 0
    193c:	40 e5       	ldi	r20, 0x50	; 80
    193e:	50 e0       	ldi	r21, 0x00	; 0
    1940:	6d e6       	ldi	r22, 0x6D	; 109
    1942:	70 e0       	ldi	r23, 0x00	; 0
    1944:	82 e3       	ldi	r24, 0x32	; 50
    1946:	9e e0       	ldi	r25, 0x0E	; 14
    1948:	0e 94 c0 0b 	call	0x1780	; 0x1780 <xTaskCreate>
    194c:	81 30       	cpi	r24, 0x01	; 1
    194e:	81 f4       	brne	.+32     	; 0x1970 <vTaskStartScheduler+0x4c>
    1950:	f8 94       	cli
    1952:	8f ef       	ldi	r24, 0xFF	; 255
    1954:	9f ef       	ldi	r25, 0xFF	; 255
    1956:	90 93 0b 05 	sts	0x050B, r25	; 0x80050b <xNextTaskUnblockTime+0x1>
    195a:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <xNextTaskUnblockTime>
    195e:	81 e0       	ldi	r24, 0x01	; 1
    1960:	80 93 10 05 	sts	0x0510, r24	; 0x800510 <xSchedulerRunning>
    1964:	10 92 13 05 	sts	0x0513, r1	; 0x800513 <xTickCount+0x1>
    1968:	10 92 12 05 	sts	0x0512, r1	; 0x800512 <xTickCount>
    196c:	0e 94 b9 06 	call	0xd72	; 0xd72 <xPortStartScheduler>
    1970:	0f 91       	pop	r16
    1972:	ff 90       	pop	r15
    1974:	ef 90       	pop	r14
    1976:	08 95       	ret

00001978 <vTaskSuspendAll>:
    1978:	80 91 07 05 	lds	r24, 0x0507	; 0x800507 <uxSchedulerSuspended>
    197c:	8f 5f       	subi	r24, 0xFF	; 255
    197e:	80 93 07 05 	sts	0x0507, r24	; 0x800507 <uxSchedulerSuspended>
    1982:	08 95       	ret

00001984 <xTaskIncrementTick>:
    1984:	df 92       	push	r13
    1986:	ef 92       	push	r14
    1988:	ff 92       	push	r15
    198a:	0f 93       	push	r16
    198c:	1f 93       	push	r17
    198e:	cf 93       	push	r28
    1990:	df 93       	push	r29
    1992:	80 91 07 05 	lds	r24, 0x0507	; 0x800507 <uxSchedulerSuspended>
    1996:	81 11       	cpse	r24, r1
    1998:	97 c0       	rjmp	.+302    	; 0x1ac8 <xTaskIncrementTick+0x144>
    199a:	e0 90 12 05 	lds	r14, 0x0512	; 0x800512 <xTickCount>
    199e:	f0 90 13 05 	lds	r15, 0x0513	; 0x800513 <xTickCount+0x1>
    19a2:	8f ef       	ldi	r24, 0xFF	; 255
    19a4:	e8 1a       	sub	r14, r24
    19a6:	f8 0a       	sbc	r15, r24
    19a8:	f0 92 13 05 	sts	0x0513, r15	; 0x800513 <xTickCount+0x1>
    19ac:	e0 92 12 05 	sts	0x0512, r14	; 0x800512 <xTickCount>
    19b0:	e1 14       	cp	r14, r1
    19b2:	f1 04       	cpc	r15, r1
    19b4:	b9 f4       	brne	.+46     	; 0x19e4 <xTaskIncrementTick+0x60>
    19b6:	80 91 33 05 	lds	r24, 0x0533	; 0x800533 <pxDelayedTaskList>
    19ba:	90 91 34 05 	lds	r25, 0x0534	; 0x800534 <pxDelayedTaskList+0x1>
    19be:	20 91 31 05 	lds	r18, 0x0531	; 0x800531 <pxOverflowDelayedTaskList>
    19c2:	30 91 32 05 	lds	r19, 0x0532	; 0x800532 <pxOverflowDelayedTaskList+0x1>
    19c6:	30 93 34 05 	sts	0x0534, r19	; 0x800534 <pxDelayedTaskList+0x1>
    19ca:	20 93 33 05 	sts	0x0533, r18	; 0x800533 <pxDelayedTaskList>
    19ce:	90 93 32 05 	sts	0x0532, r25	; 0x800532 <pxOverflowDelayedTaskList+0x1>
    19d2:	80 93 31 05 	sts	0x0531, r24	; 0x800531 <pxOverflowDelayedTaskList>
    19d6:	80 91 0d 05 	lds	r24, 0x050D	; 0x80050d <xNumOfOverflows>
    19da:	8f 5f       	subi	r24, 0xFF	; 255
    19dc:	80 93 0d 05 	sts	0x050D, r24	; 0x80050d <xNumOfOverflows>
    19e0:	0e 94 3e 0a 	call	0x147c	; 0x147c <prvResetNextTaskUnblockTime>
    19e4:	80 91 0a 05 	lds	r24, 0x050A	; 0x80050a <xNextTaskUnblockTime>
    19e8:	90 91 0b 05 	lds	r25, 0x050B	; 0x80050b <xNextTaskUnblockTime+0x1>
    19ec:	e8 16       	cp	r14, r24
    19ee:	f9 06       	cpc	r15, r25
    19f0:	28 f4       	brcc	.+10     	; 0x19fc <xTaskIncrementTick+0x78>
    19f2:	d1 2c       	mov	r13, r1
    19f4:	53 c0       	rjmp	.+166    	; 0x1a9c <xTaskIncrementTick+0x118>
    19f6:	dd 24       	eor	r13, r13
    19f8:	d3 94       	inc	r13
    19fa:	01 c0       	rjmp	.+2      	; 0x19fe <xTaskIncrementTick+0x7a>
    19fc:	d1 2c       	mov	r13, r1
    19fe:	e0 91 33 05 	lds	r30, 0x0533	; 0x800533 <pxDelayedTaskList>
    1a02:	f0 91 34 05 	lds	r31, 0x0534	; 0x800534 <pxDelayedTaskList+0x1>
    1a06:	80 81       	ld	r24, Z
    1a08:	81 11       	cpse	r24, r1
    1a0a:	07 c0       	rjmp	.+14     	; 0x1a1a <xTaskIncrementTick+0x96>
    1a0c:	8f ef       	ldi	r24, 0xFF	; 255
    1a0e:	9f ef       	ldi	r25, 0xFF	; 255
    1a10:	90 93 0b 05 	sts	0x050B, r25	; 0x80050b <xNextTaskUnblockTime+0x1>
    1a14:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <xNextTaskUnblockTime>
    1a18:	41 c0       	rjmp	.+130    	; 0x1a9c <xTaskIncrementTick+0x118>
    1a1a:	e0 91 33 05 	lds	r30, 0x0533	; 0x800533 <pxDelayedTaskList>
    1a1e:	f0 91 34 05 	lds	r31, 0x0534	; 0x800534 <pxDelayedTaskList+0x1>
    1a22:	05 80       	ldd	r0, Z+5	; 0x05
    1a24:	f6 81       	ldd	r31, Z+6	; 0x06
    1a26:	e0 2d       	mov	r30, r0
    1a28:	c6 81       	ldd	r28, Z+6	; 0x06
    1a2a:	d7 81       	ldd	r29, Z+7	; 0x07
    1a2c:	8a 81       	ldd	r24, Y+2	; 0x02
    1a2e:	9b 81       	ldd	r25, Y+3	; 0x03
    1a30:	e8 16       	cp	r14, r24
    1a32:	f9 06       	cpc	r15, r25
    1a34:	28 f4       	brcc	.+10     	; 0x1a40 <xTaskIncrementTick+0xbc>
    1a36:	90 93 0b 05 	sts	0x050B, r25	; 0x80050b <xNextTaskUnblockTime+0x1>
    1a3a:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <xNextTaskUnblockTime>
    1a3e:	2e c0       	rjmp	.+92     	; 0x1a9c <xTaskIncrementTick+0x118>
    1a40:	8e 01       	movw	r16, r28
    1a42:	0e 5f       	subi	r16, 0xFE	; 254
    1a44:	1f 4f       	sbci	r17, 0xFF	; 255
    1a46:	c8 01       	movw	r24, r16
    1a48:	0e 94 1f 06 	call	0xc3e	; 0xc3e <uxListRemove>
    1a4c:	8c 89       	ldd	r24, Y+20	; 0x14
    1a4e:	9d 89       	ldd	r25, Y+21	; 0x15
    1a50:	89 2b       	or	r24, r25
    1a52:	21 f0       	breq	.+8      	; 0x1a5c <xTaskIncrementTick+0xd8>
    1a54:	ce 01       	movw	r24, r28
    1a56:	0c 96       	adiw	r24, 0x0c	; 12
    1a58:	0e 94 1f 06 	call	0xc3e	; 0xc3e <uxListRemove>
    1a5c:	8e 89       	ldd	r24, Y+22	; 0x16
    1a5e:	90 91 11 05 	lds	r25, 0x0511	; 0x800511 <uxTopReadyPriority>
    1a62:	98 17       	cp	r25, r24
    1a64:	10 f4       	brcc	.+4      	; 0x1a6a <xTaskIncrementTick+0xe6>
    1a66:	80 93 11 05 	sts	0x0511, r24	; 0x800511 <uxTopReadyPriority>
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	9c 01       	movw	r18, r24
    1a6e:	22 0f       	add	r18, r18
    1a70:	33 1f       	adc	r19, r19
    1a72:	22 0f       	add	r18, r18
    1a74:	33 1f       	adc	r19, r19
    1a76:	22 0f       	add	r18, r18
    1a78:	33 1f       	adc	r19, r19
    1a7a:	82 0f       	add	r24, r18
    1a7c:	93 1f       	adc	r25, r19
    1a7e:	b8 01       	movw	r22, r16
    1a80:	89 5b       	subi	r24, 0xB9	; 185
    1a82:	9a 4f       	sbci	r25, 0xFA	; 250
    1a84:	0e 94 cd 05 	call	0xb9a	; 0xb9a <vListInsertEnd>
    1a88:	9e 89       	ldd	r25, Y+22	; 0x16
    1a8a:	e0 91 98 05 	lds	r30, 0x0598	; 0x800598 <pxCurrentTCB>
    1a8e:	f0 91 99 05 	lds	r31, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1a92:	86 89       	ldd	r24, Z+22	; 0x16
    1a94:	98 17       	cp	r25, r24
    1a96:	08 f0       	brcs	.+2      	; 0x1a9a <xTaskIncrementTick+0x116>
    1a98:	ae cf       	rjmp	.-164    	; 0x19f6 <xTaskIncrementTick+0x72>
    1a9a:	b1 cf       	rjmp	.-158    	; 0x19fe <xTaskIncrementTick+0x7a>
    1a9c:	e0 91 98 05 	lds	r30, 0x0598	; 0x800598 <pxCurrentTCB>
    1aa0:	f0 91 99 05 	lds	r31, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1aa4:	86 89       	ldd	r24, Z+22	; 0x16
    1aa6:	90 e0       	ldi	r25, 0x00	; 0
    1aa8:	fc 01       	movw	r30, r24
    1aaa:	ee 0f       	add	r30, r30
    1aac:	ff 1f       	adc	r31, r31
    1aae:	ee 0f       	add	r30, r30
    1ab0:	ff 1f       	adc	r31, r31
    1ab2:	ee 0f       	add	r30, r30
    1ab4:	ff 1f       	adc	r31, r31
    1ab6:	8e 0f       	add	r24, r30
    1ab8:	9f 1f       	adc	r25, r31
    1aba:	fc 01       	movw	r30, r24
    1abc:	e9 5b       	subi	r30, 0xB9	; 185
    1abe:	fa 4f       	sbci	r31, 0xFA	; 250
    1ac0:	80 81       	ld	r24, Z
    1ac2:	82 30       	cpi	r24, 0x02	; 2
    1ac4:	40 f4       	brcc	.+16     	; 0x1ad6 <xTaskIncrementTick+0x152>
    1ac6:	09 c0       	rjmp	.+18     	; 0x1ada <xTaskIncrementTick+0x156>
    1ac8:	80 91 0f 05 	lds	r24, 0x050F	; 0x80050f <uxPendedTicks>
    1acc:	8f 5f       	subi	r24, 0xFF	; 255
    1ace:	80 93 0f 05 	sts	0x050F, r24	; 0x80050f <uxPendedTicks>
    1ad2:	d1 2c       	mov	r13, r1
    1ad4:	02 c0       	rjmp	.+4      	; 0x1ada <xTaskIncrementTick+0x156>
    1ad6:	dd 24       	eor	r13, r13
    1ad8:	d3 94       	inc	r13
    1ada:	80 91 0e 05 	lds	r24, 0x050E	; 0x80050e <xYieldPending>
    1ade:	88 23       	and	r24, r24
    1ae0:	11 f0       	breq	.+4      	; 0x1ae6 <xTaskIncrementTick+0x162>
    1ae2:	dd 24       	eor	r13, r13
    1ae4:	d3 94       	inc	r13
    1ae6:	8d 2d       	mov	r24, r13
    1ae8:	df 91       	pop	r29
    1aea:	cf 91       	pop	r28
    1aec:	1f 91       	pop	r17
    1aee:	0f 91       	pop	r16
    1af0:	ff 90       	pop	r15
    1af2:	ef 90       	pop	r14
    1af4:	df 90       	pop	r13
    1af6:	08 95       	ret

00001af8 <xTaskResumeAll>:
    1af8:	0f 93       	push	r16
    1afa:	1f 93       	push	r17
    1afc:	cf 93       	push	r28
    1afe:	df 93       	push	r29
    1b00:	0f b6       	in	r0, 0x3f	; 63
    1b02:	f8 94       	cli
    1b04:	0f 92       	push	r0
    1b06:	80 91 07 05 	lds	r24, 0x0507	; 0x800507 <uxSchedulerSuspended>
    1b0a:	81 50       	subi	r24, 0x01	; 1
    1b0c:	80 93 07 05 	sts	0x0507, r24	; 0x800507 <uxSchedulerSuspended>
    1b10:	80 91 07 05 	lds	r24, 0x0507	; 0x800507 <uxSchedulerSuspended>
    1b14:	81 11       	cpse	r24, r1
    1b16:	58 c0       	rjmp	.+176    	; 0x1bc8 <xTaskResumeAll+0xd0>
    1b18:	80 91 14 05 	lds	r24, 0x0514	; 0x800514 <uxCurrentNumberOfTasks>
    1b1c:	81 11       	cpse	r24, r1
    1b1e:	33 c0       	rjmp	.+102    	; 0x1b86 <xTaskResumeAll+0x8e>
    1b20:	56 c0       	rjmp	.+172    	; 0x1bce <xTaskResumeAll+0xd6>
    1b22:	e0 91 2d 05 	lds	r30, 0x052D	; 0x80052d <xPendingReadyList+0x5>
    1b26:	f0 91 2e 05 	lds	r31, 0x052E	; 0x80052e <xPendingReadyList+0x6>
    1b2a:	c6 81       	ldd	r28, Z+6	; 0x06
    1b2c:	d7 81       	ldd	r29, Z+7	; 0x07
    1b2e:	ce 01       	movw	r24, r28
    1b30:	0c 96       	adiw	r24, 0x0c	; 12
    1b32:	0e 94 1f 06 	call	0xc3e	; 0xc3e <uxListRemove>
    1b36:	8e 01       	movw	r16, r28
    1b38:	0e 5f       	subi	r16, 0xFE	; 254
    1b3a:	1f 4f       	sbci	r17, 0xFF	; 255
    1b3c:	c8 01       	movw	r24, r16
    1b3e:	0e 94 1f 06 	call	0xc3e	; 0xc3e <uxListRemove>
    1b42:	8e 89       	ldd	r24, Y+22	; 0x16
    1b44:	90 91 11 05 	lds	r25, 0x0511	; 0x800511 <uxTopReadyPriority>
    1b48:	98 17       	cp	r25, r24
    1b4a:	10 f4       	brcc	.+4      	; 0x1b50 <xTaskResumeAll+0x58>
    1b4c:	80 93 11 05 	sts	0x0511, r24	; 0x800511 <uxTopReadyPriority>
    1b50:	90 e0       	ldi	r25, 0x00	; 0
    1b52:	9c 01       	movw	r18, r24
    1b54:	22 0f       	add	r18, r18
    1b56:	33 1f       	adc	r19, r19
    1b58:	22 0f       	add	r18, r18
    1b5a:	33 1f       	adc	r19, r19
    1b5c:	22 0f       	add	r18, r18
    1b5e:	33 1f       	adc	r19, r19
    1b60:	82 0f       	add	r24, r18
    1b62:	93 1f       	adc	r25, r19
    1b64:	b8 01       	movw	r22, r16
    1b66:	89 5b       	subi	r24, 0xB9	; 185
    1b68:	9a 4f       	sbci	r25, 0xFA	; 250
    1b6a:	0e 94 cd 05 	call	0xb9a	; 0xb9a <vListInsertEnd>
    1b6e:	9e 89       	ldd	r25, Y+22	; 0x16
    1b70:	e0 91 98 05 	lds	r30, 0x0598	; 0x800598 <pxCurrentTCB>
    1b74:	f0 91 99 05 	lds	r31, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1b78:	86 89       	ldd	r24, Z+22	; 0x16
    1b7a:	98 17       	cp	r25, r24
    1b7c:	30 f0       	brcs	.+12     	; 0x1b8a <xTaskResumeAll+0x92>
    1b7e:	81 e0       	ldi	r24, 0x01	; 1
    1b80:	80 93 0e 05 	sts	0x050E, r24	; 0x80050e <xYieldPending>
    1b84:	02 c0       	rjmp	.+4      	; 0x1b8a <xTaskResumeAll+0x92>
    1b86:	c0 e0       	ldi	r28, 0x00	; 0
    1b88:	d0 e0       	ldi	r29, 0x00	; 0
    1b8a:	80 91 28 05 	lds	r24, 0x0528	; 0x800528 <xPendingReadyList>
    1b8e:	81 11       	cpse	r24, r1
    1b90:	c8 cf       	rjmp	.-112    	; 0x1b22 <xTaskResumeAll+0x2a>
    1b92:	cd 2b       	or	r28, r29
    1b94:	11 f0       	breq	.+4      	; 0x1b9a <xTaskResumeAll+0xa2>
    1b96:	0e 94 3e 0a 	call	0x147c	; 0x147c <prvResetNextTaskUnblockTime>
    1b9a:	c0 91 0f 05 	lds	r28, 0x050F	; 0x80050f <uxPendedTicks>
    1b9e:	cc 23       	and	r28, r28
    1ba0:	59 f0       	breq	.+22     	; 0x1bb8 <xTaskResumeAll+0xc0>
    1ba2:	0e 94 c2 0c 	call	0x1984	; 0x1984 <xTaskIncrementTick>
    1ba6:	88 23       	and	r24, r24
    1ba8:	19 f0       	breq	.+6      	; 0x1bb0 <xTaskResumeAll+0xb8>
    1baa:	81 e0       	ldi	r24, 0x01	; 1
    1bac:	80 93 0e 05 	sts	0x050E, r24	; 0x80050e <xYieldPending>
    1bb0:	c1 50       	subi	r28, 0x01	; 1
    1bb2:	b9 f7       	brne	.-18     	; 0x1ba2 <xTaskResumeAll+0xaa>
    1bb4:	10 92 0f 05 	sts	0x050F, r1	; 0x80050f <uxPendedTicks>
    1bb8:	80 91 0e 05 	lds	r24, 0x050E	; 0x80050e <xYieldPending>
    1bbc:	88 23       	and	r24, r24
    1bbe:	31 f0       	breq	.+12     	; 0x1bcc <xTaskResumeAll+0xd4>
    1bc0:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <vPortYield>
    1bc4:	81 e0       	ldi	r24, 0x01	; 1
    1bc6:	03 c0       	rjmp	.+6      	; 0x1bce <xTaskResumeAll+0xd6>
    1bc8:	80 e0       	ldi	r24, 0x00	; 0
    1bca:	01 c0       	rjmp	.+2      	; 0x1bce <xTaskResumeAll+0xd6>
    1bcc:	80 e0       	ldi	r24, 0x00	; 0
    1bce:	0f 90       	pop	r0
    1bd0:	0f be       	out	0x3f, r0	; 63
    1bd2:	df 91       	pop	r29
    1bd4:	cf 91       	pop	r28
    1bd6:	1f 91       	pop	r17
    1bd8:	0f 91       	pop	r16
    1bda:	08 95       	ret

00001bdc <vTaskDelay>:
    1bdc:	cf 93       	push	r28
    1bde:	df 93       	push	r29
    1be0:	ec 01       	movw	r28, r24
    1be2:	89 2b       	or	r24, r25
    1be4:	49 f0       	breq	.+18     	; 0x1bf8 <vTaskDelay+0x1c>
    1be6:	0e 94 bc 0c 	call	0x1978	; 0x1978 <vTaskSuspendAll>
    1bea:	60 e0       	ldi	r22, 0x00	; 0
    1bec:	ce 01       	movw	r24, r28
    1bee:	0e 94 68 0b 	call	0x16d0	; 0x16d0 <prvAddCurrentTaskToDelayedList>
    1bf2:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <xTaskResumeAll>
    1bf6:	01 c0       	rjmp	.+2      	; 0x1bfa <vTaskDelay+0x1e>
    1bf8:	80 e0       	ldi	r24, 0x00	; 0
    1bfa:	81 11       	cpse	r24, r1
    1bfc:	02 c0       	rjmp	.+4      	; 0x1c02 <vTaskDelay+0x26>
    1bfe:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <vPortYield>
    1c02:	df 91       	pop	r29
    1c04:	cf 91       	pop	r28
    1c06:	08 95       	ret

00001c08 <prvCheckTasksWaitingTermination>:
    1c08:	cf 93       	push	r28
    1c0a:	df 93       	push	r29
    1c0c:	24 c0       	rjmp	.+72     	; 0x1c56 <prvCheckTasksWaitingTermination+0x4e>
    1c0e:	0e 94 bc 0c 	call	0x1978	; 0x1978 <vTaskSuspendAll>
    1c12:	c0 91 1f 05 	lds	r28, 0x051F	; 0x80051f <xTasksWaitingTermination>
    1c16:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <xTaskResumeAll>
    1c1a:	cc 23       	and	r28, r28
    1c1c:	e1 f0       	breq	.+56     	; 0x1c56 <prvCheckTasksWaitingTermination+0x4e>
    1c1e:	0f b6       	in	r0, 0x3f	; 63
    1c20:	f8 94       	cli
    1c22:	0f 92       	push	r0
    1c24:	e0 91 24 05 	lds	r30, 0x0524	; 0x800524 <xTasksWaitingTermination+0x5>
    1c28:	f0 91 25 05 	lds	r31, 0x0525	; 0x800525 <xTasksWaitingTermination+0x6>
    1c2c:	c6 81       	ldd	r28, Z+6	; 0x06
    1c2e:	d7 81       	ldd	r29, Z+7	; 0x07
    1c30:	ce 01       	movw	r24, r28
    1c32:	02 96       	adiw	r24, 0x02	; 2
    1c34:	0e 94 1f 06 	call	0xc3e	; 0xc3e <uxListRemove>
    1c38:	80 91 14 05 	lds	r24, 0x0514	; 0x800514 <uxCurrentNumberOfTasks>
    1c3c:	81 50       	subi	r24, 0x01	; 1
    1c3e:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <uxCurrentNumberOfTasks>
    1c42:	80 91 1e 05 	lds	r24, 0x051E	; 0x80051e <uxDeletedTasksWaitingCleanUp>
    1c46:	81 50       	subi	r24, 0x01	; 1
    1c48:	80 93 1e 05 	sts	0x051E, r24	; 0x80051e <uxDeletedTasksWaitingCleanUp>
    1c4c:	0f 90       	pop	r0
    1c4e:	0f be       	out	0x3f, r0	; 63
    1c50:	ce 01       	movw	r24, r28
    1c52:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <prvDeleteTCB>
    1c56:	80 91 1e 05 	lds	r24, 0x051E	; 0x80051e <uxDeletedTasksWaitingCleanUp>
    1c5a:	81 11       	cpse	r24, r1
    1c5c:	d8 cf       	rjmp	.-80     	; 0x1c0e <prvCheckTasksWaitingTermination+0x6>
    1c5e:	df 91       	pop	r29
    1c60:	cf 91       	pop	r28
    1c62:	08 95       	ret

00001c64 <prvIdleTask>:
    1c64:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <prvCheckTasksWaitingTermination>
    1c68:	fd cf       	rjmp	.-6      	; 0x1c64 <prvIdleTask>

00001c6a <vTaskSwitchContext>:
    1c6a:	80 91 07 05 	lds	r24, 0x0507	; 0x800507 <uxSchedulerSuspended>
    1c6e:	88 23       	and	r24, r24
    1c70:	21 f0       	breq	.+8      	; 0x1c7a <vTaskSwitchContext+0x10>
    1c72:	81 e0       	ldi	r24, 0x01	; 1
    1c74:	80 93 0e 05 	sts	0x050E, r24	; 0x80050e <xYieldPending>
    1c78:	08 95       	ret
    1c7a:	10 92 0e 05 	sts	0x050E, r1	; 0x80050e <xYieldPending>
    1c7e:	20 91 11 05 	lds	r18, 0x0511	; 0x800511 <uxTopReadyPriority>
    1c82:	01 c0       	rjmp	.+2      	; 0x1c86 <vTaskSwitchContext+0x1c>
    1c84:	21 50       	subi	r18, 0x01	; 1
    1c86:	82 2f       	mov	r24, r18
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	fc 01       	movw	r30, r24
    1c8c:	ee 0f       	add	r30, r30
    1c8e:	ff 1f       	adc	r31, r31
    1c90:	ee 0f       	add	r30, r30
    1c92:	ff 1f       	adc	r31, r31
    1c94:	ee 0f       	add	r30, r30
    1c96:	ff 1f       	adc	r31, r31
    1c98:	e8 0f       	add	r30, r24
    1c9a:	f9 1f       	adc	r31, r25
    1c9c:	e9 5b       	subi	r30, 0xB9	; 185
    1c9e:	fa 4f       	sbci	r31, 0xFA	; 250
    1ca0:	30 81       	ld	r19, Z
    1ca2:	33 23       	and	r19, r19
    1ca4:	79 f3       	breq	.-34     	; 0x1c84 <vTaskSwitchContext+0x1a>
    1ca6:	ac 01       	movw	r20, r24
    1ca8:	44 0f       	add	r20, r20
    1caa:	55 1f       	adc	r21, r21
    1cac:	44 0f       	add	r20, r20
    1cae:	55 1f       	adc	r21, r21
    1cb0:	44 0f       	add	r20, r20
    1cb2:	55 1f       	adc	r21, r21
    1cb4:	48 0f       	add	r20, r24
    1cb6:	59 1f       	adc	r21, r25
    1cb8:	df 01       	movw	r26, r30
    1cba:	01 80       	ldd	r0, Z+1	; 0x01
    1cbc:	f2 81       	ldd	r31, Z+2	; 0x02
    1cbe:	e0 2d       	mov	r30, r0
    1cc0:	02 80       	ldd	r0, Z+2	; 0x02
    1cc2:	f3 81       	ldd	r31, Z+3	; 0x03
    1cc4:	e0 2d       	mov	r30, r0
    1cc6:	12 96       	adiw	r26, 0x02	; 2
    1cc8:	fc 93       	st	X, r31
    1cca:	ee 93       	st	-X, r30
    1ccc:	11 97       	sbiw	r26, 0x01	; 1
    1cce:	46 5b       	subi	r20, 0xB6	; 182
    1cd0:	5a 4f       	sbci	r21, 0xFA	; 250
    1cd2:	e4 17       	cp	r30, r20
    1cd4:	f5 07       	cpc	r31, r21
    1cd6:	29 f4       	brne	.+10     	; 0x1ce2 <vTaskSwitchContext+0x78>
    1cd8:	42 81       	ldd	r20, Z+2	; 0x02
    1cda:	53 81       	ldd	r21, Z+3	; 0x03
    1cdc:	fd 01       	movw	r30, r26
    1cde:	52 83       	std	Z+2, r21	; 0x02
    1ce0:	41 83       	std	Z+1, r20	; 0x01
    1ce2:	fc 01       	movw	r30, r24
    1ce4:	ee 0f       	add	r30, r30
    1ce6:	ff 1f       	adc	r31, r31
    1ce8:	ee 0f       	add	r30, r30
    1cea:	ff 1f       	adc	r31, r31
    1cec:	ee 0f       	add	r30, r30
    1cee:	ff 1f       	adc	r31, r31
    1cf0:	8e 0f       	add	r24, r30
    1cf2:	9f 1f       	adc	r25, r31
    1cf4:	fc 01       	movw	r30, r24
    1cf6:	e9 5b       	subi	r30, 0xB9	; 185
    1cf8:	fa 4f       	sbci	r31, 0xFA	; 250
    1cfa:	01 80       	ldd	r0, Z+1	; 0x01
    1cfc:	f2 81       	ldd	r31, Z+2	; 0x02
    1cfe:	e0 2d       	mov	r30, r0
    1d00:	86 81       	ldd	r24, Z+6	; 0x06
    1d02:	97 81       	ldd	r25, Z+7	; 0x07
    1d04:	90 93 99 05 	sts	0x0599, r25	; 0x800599 <pxCurrentTCB+0x1>
    1d08:	80 93 98 05 	sts	0x0598, r24	; 0x800598 <pxCurrentTCB>
    1d0c:	20 93 11 05 	sts	0x0511, r18	; 0x800511 <uxTopReadyPriority>
    1d10:	08 95       	ret

00001d12 <vTaskPlaceOnEventList>:
    1d12:	cf 93       	push	r28
    1d14:	df 93       	push	r29
    1d16:	eb 01       	movw	r28, r22
    1d18:	60 91 98 05 	lds	r22, 0x0598	; 0x800598 <pxCurrentTCB>
    1d1c:	70 91 99 05 	lds	r23, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1d20:	64 5f       	subi	r22, 0xF4	; 244
    1d22:	7f 4f       	sbci	r23, 0xFF	; 255
    1d24:	0e 94 ee 05 	call	0xbdc	; 0xbdc <vListInsert>
    1d28:	61 e0       	ldi	r22, 0x01	; 1
    1d2a:	ce 01       	movw	r24, r28
    1d2c:	0e 94 68 0b 	call	0x16d0	; 0x16d0 <prvAddCurrentTaskToDelayedList>
    1d30:	df 91       	pop	r29
    1d32:	cf 91       	pop	r28
    1d34:	08 95       	ret

00001d36 <xTaskRemoveFromEventList>:
    1d36:	0f 93       	push	r16
    1d38:	1f 93       	push	r17
    1d3a:	cf 93       	push	r28
    1d3c:	df 93       	push	r29
    1d3e:	dc 01       	movw	r26, r24
    1d40:	15 96       	adiw	r26, 0x05	; 5
    1d42:	ed 91       	ld	r30, X+
    1d44:	fc 91       	ld	r31, X
    1d46:	16 97       	sbiw	r26, 0x06	; 6
    1d48:	c6 81       	ldd	r28, Z+6	; 0x06
    1d4a:	d7 81       	ldd	r29, Z+7	; 0x07
    1d4c:	8e 01       	movw	r16, r28
    1d4e:	04 5f       	subi	r16, 0xF4	; 244
    1d50:	1f 4f       	sbci	r17, 0xFF	; 255
    1d52:	c8 01       	movw	r24, r16
    1d54:	0e 94 1f 06 	call	0xc3e	; 0xc3e <uxListRemove>
    1d58:	80 91 07 05 	lds	r24, 0x0507	; 0x800507 <uxSchedulerSuspended>
    1d5c:	81 11       	cpse	r24, r1
    1d5e:	1c c0       	rjmp	.+56     	; 0x1d98 <xTaskRemoveFromEventList+0x62>
    1d60:	0a 50       	subi	r16, 0x0A	; 10
    1d62:	11 09       	sbc	r17, r1
    1d64:	c8 01       	movw	r24, r16
    1d66:	0e 94 1f 06 	call	0xc3e	; 0xc3e <uxListRemove>
    1d6a:	8e 89       	ldd	r24, Y+22	; 0x16
    1d6c:	90 91 11 05 	lds	r25, 0x0511	; 0x800511 <uxTopReadyPriority>
    1d70:	98 17       	cp	r25, r24
    1d72:	10 f4       	brcc	.+4      	; 0x1d78 <xTaskRemoveFromEventList+0x42>
    1d74:	80 93 11 05 	sts	0x0511, r24	; 0x800511 <uxTopReadyPriority>
    1d78:	90 e0       	ldi	r25, 0x00	; 0
    1d7a:	9c 01       	movw	r18, r24
    1d7c:	22 0f       	add	r18, r18
    1d7e:	33 1f       	adc	r19, r19
    1d80:	22 0f       	add	r18, r18
    1d82:	33 1f       	adc	r19, r19
    1d84:	22 0f       	add	r18, r18
    1d86:	33 1f       	adc	r19, r19
    1d88:	82 0f       	add	r24, r18
    1d8a:	93 1f       	adc	r25, r19
    1d8c:	b8 01       	movw	r22, r16
    1d8e:	89 5b       	subi	r24, 0xB9	; 185
    1d90:	9a 4f       	sbci	r25, 0xFA	; 250
    1d92:	0e 94 cd 05 	call	0xb9a	; 0xb9a <vListInsertEnd>
    1d96:	05 c0       	rjmp	.+10     	; 0x1da2 <xTaskRemoveFromEventList+0x6c>
    1d98:	b8 01       	movw	r22, r16
    1d9a:	88 e2       	ldi	r24, 0x28	; 40
    1d9c:	95 e0       	ldi	r25, 0x05	; 5
    1d9e:	0e 94 cd 05 	call	0xb9a	; 0xb9a <vListInsertEnd>
    1da2:	9e 89       	ldd	r25, Y+22	; 0x16
    1da4:	e0 91 98 05 	lds	r30, 0x0598	; 0x800598 <pxCurrentTCB>
    1da8:	f0 91 99 05 	lds	r31, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1dac:	86 89       	ldd	r24, Z+22	; 0x16
    1dae:	89 17       	cp	r24, r25
    1db0:	20 f4       	brcc	.+8      	; 0x1dba <xTaskRemoveFromEventList+0x84>
    1db2:	81 e0       	ldi	r24, 0x01	; 1
    1db4:	80 93 0e 05 	sts	0x050E, r24	; 0x80050e <xYieldPending>
    1db8:	01 c0       	rjmp	.+2      	; 0x1dbc <xTaskRemoveFromEventList+0x86>
    1dba:	80 e0       	ldi	r24, 0x00	; 0
    1dbc:	df 91       	pop	r29
    1dbe:	cf 91       	pop	r28
    1dc0:	1f 91       	pop	r17
    1dc2:	0f 91       	pop	r16
    1dc4:	08 95       	ret

00001dc6 <vTaskSetTimeOutState>:
    1dc6:	20 91 0d 05 	lds	r18, 0x050D	; 0x80050d <xNumOfOverflows>
    1dca:	fc 01       	movw	r30, r24
    1dcc:	20 83       	st	Z, r18
    1dce:	20 91 12 05 	lds	r18, 0x0512	; 0x800512 <xTickCount>
    1dd2:	30 91 13 05 	lds	r19, 0x0513	; 0x800513 <xTickCount+0x1>
    1dd6:	32 83       	std	Z+2, r19	; 0x02
    1dd8:	21 83       	std	Z+1, r18	; 0x01
    1dda:	08 95       	ret

00001ddc <xTaskCheckForTimeOut>:
    1ddc:	0f b6       	in	r0, 0x3f	; 63
    1dde:	f8 94       	cli
    1de0:	0f 92       	push	r0
    1de2:	40 91 12 05 	lds	r20, 0x0512	; 0x800512 <xTickCount>
    1de6:	50 91 13 05 	lds	r21, 0x0513	; 0x800513 <xTickCount+0x1>
    1dea:	db 01       	movw	r26, r22
    1dec:	2d 91       	ld	r18, X+
    1dee:	3c 91       	ld	r19, X
    1df0:	2f 3f       	cpi	r18, 0xFF	; 255
    1df2:	bf ef       	ldi	r27, 0xFF	; 255
    1df4:	3b 07       	cpc	r19, r27
    1df6:	19 f1       	breq	.+70     	; 0x1e3e <xTaskCheckForTimeOut+0x62>
    1df8:	dc 01       	movw	r26, r24
    1dfa:	fc 91       	ld	r31, X
    1dfc:	e0 91 0d 05 	lds	r30, 0x050D	; 0x80050d <xNumOfOverflows>
    1e00:	fe 17       	cp	r31, r30
    1e02:	39 f0       	breq	.+14     	; 0x1e12 <xTaskCheckForTimeOut+0x36>
    1e04:	11 96       	adiw	r26, 0x01	; 1
    1e06:	ed 91       	ld	r30, X+
    1e08:	fc 91       	ld	r31, X
    1e0a:	12 97       	sbiw	r26, 0x02	; 2
    1e0c:	4e 17       	cp	r20, r30
    1e0e:	5f 07       	cpc	r21, r31
    1e10:	c0 f4       	brcc	.+48     	; 0x1e42 <xTaskCheckForTimeOut+0x66>
    1e12:	dc 01       	movw	r26, r24
    1e14:	11 96       	adiw	r26, 0x01	; 1
    1e16:	ed 91       	ld	r30, X+
    1e18:	fc 91       	ld	r31, X
    1e1a:	12 97       	sbiw	r26, 0x02	; 2
    1e1c:	da 01       	movw	r26, r20
    1e1e:	ae 1b       	sub	r26, r30
    1e20:	bf 0b       	sbc	r27, r31
    1e22:	a2 17       	cp	r26, r18
    1e24:	b3 07       	cpc	r27, r19
    1e26:	78 f4       	brcc	.+30     	; 0x1e46 <xTaskCheckForTimeOut+0x6a>
    1e28:	db 01       	movw	r26, r22
    1e2a:	e4 1b       	sub	r30, r20
    1e2c:	f5 0b       	sbc	r31, r21
    1e2e:	2e 0f       	add	r18, r30
    1e30:	3f 1f       	adc	r19, r31
    1e32:	2d 93       	st	X+, r18
    1e34:	3c 93       	st	X, r19
    1e36:	0e 94 e3 0e 	call	0x1dc6	; 0x1dc6 <vTaskSetTimeOutState>
    1e3a:	80 e0       	ldi	r24, 0x00	; 0
    1e3c:	05 c0       	rjmp	.+10     	; 0x1e48 <xTaskCheckForTimeOut+0x6c>
    1e3e:	80 e0       	ldi	r24, 0x00	; 0
    1e40:	03 c0       	rjmp	.+6      	; 0x1e48 <xTaskCheckForTimeOut+0x6c>
    1e42:	81 e0       	ldi	r24, 0x01	; 1
    1e44:	01 c0       	rjmp	.+2      	; 0x1e48 <xTaskCheckForTimeOut+0x6c>
    1e46:	81 e0       	ldi	r24, 0x01	; 1
    1e48:	0f 90       	pop	r0
    1e4a:	0f be       	out	0x3f, r0	; 63
    1e4c:	08 95       	ret

00001e4e <vTaskMissedYield>:
    1e4e:	81 e0       	ldi	r24, 0x01	; 1
    1e50:	80 93 0e 05 	sts	0x050E, r24	; 0x80050e <xYieldPending>
    1e54:	08 95       	ret

00001e56 <vTaskPriorityInherit>:
    1e56:	0f 93       	push	r16
    1e58:	1f 93       	push	r17
    1e5a:	cf 93       	push	r28
    1e5c:	df 93       	push	r29
    1e5e:	fc 01       	movw	r30, r24
    1e60:	89 2b       	or	r24, r25
    1e62:	09 f4       	brne	.+2      	; 0x1e66 <vTaskPriorityInherit+0x10>
    1e64:	55 c0       	rjmp	.+170    	; 0x1f10 <vTaskPriorityInherit+0xba>
    1e66:	26 89       	ldd	r18, Z+22	; 0x16
    1e68:	a0 91 98 05 	lds	r26, 0x0598	; 0x800598 <pxCurrentTCB>
    1e6c:	b0 91 99 05 	lds	r27, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1e70:	56 96       	adiw	r26, 0x16	; 22
    1e72:	8c 91       	ld	r24, X
    1e74:	28 17       	cp	r18, r24
    1e76:	08 f0       	brcs	.+2      	; 0x1e7a <vTaskPriorityInherit+0x24>
    1e78:	4b c0       	rjmp	.+150    	; 0x1f10 <vTaskPriorityInherit+0xba>
    1e7a:	84 85       	ldd	r24, Z+12	; 0x0c
    1e7c:	95 85       	ldd	r25, Z+13	; 0x0d
    1e7e:	99 23       	and	r25, r25
    1e80:	64 f0       	brlt	.+24     	; 0x1e9a <vTaskPriorityInherit+0x44>
    1e82:	a0 91 98 05 	lds	r26, 0x0598	; 0x800598 <pxCurrentTCB>
    1e86:	b0 91 99 05 	lds	r27, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1e8a:	56 96       	adiw	r26, 0x16	; 22
    1e8c:	3c 91       	ld	r19, X
    1e8e:	89 e0       	ldi	r24, 0x09	; 9
    1e90:	90 e0       	ldi	r25, 0x00	; 0
    1e92:	83 1b       	sub	r24, r19
    1e94:	91 09       	sbc	r25, r1
    1e96:	95 87       	std	Z+13, r25	; 0x0d
    1e98:	84 87       	std	Z+12, r24	; 0x0c
    1e9a:	82 85       	ldd	r24, Z+10	; 0x0a
    1e9c:	93 85       	ldd	r25, Z+11	; 0x0b
    1e9e:	30 e0       	ldi	r19, 0x00	; 0
    1ea0:	a9 01       	movw	r20, r18
    1ea2:	44 0f       	add	r20, r20
    1ea4:	55 1f       	adc	r21, r21
    1ea6:	44 0f       	add	r20, r20
    1ea8:	55 1f       	adc	r21, r21
    1eaa:	44 0f       	add	r20, r20
    1eac:	55 1f       	adc	r21, r21
    1eae:	24 0f       	add	r18, r20
    1eb0:	35 1f       	adc	r19, r21
    1eb2:	29 5b       	subi	r18, 0xB9	; 185
    1eb4:	3a 4f       	sbci	r19, 0xFA	; 250
    1eb6:	82 17       	cp	r24, r18
    1eb8:	93 07       	cpc	r25, r19
    1eba:	19 f5       	brne	.+70     	; 0x1f02 <vTaskPriorityInherit+0xac>
    1ebc:	8f 01       	movw	r16, r30
    1ebe:	ef 01       	movw	r28, r30
    1ec0:	22 96       	adiw	r28, 0x02	; 2
    1ec2:	ce 01       	movw	r24, r28
    1ec4:	0e 94 1f 06 	call	0xc3e	; 0xc3e <uxListRemove>
    1ec8:	e0 91 98 05 	lds	r30, 0x0598	; 0x800598 <pxCurrentTCB>
    1ecc:	f0 91 99 05 	lds	r31, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1ed0:	86 89       	ldd	r24, Z+22	; 0x16
    1ed2:	f8 01       	movw	r30, r16
    1ed4:	86 8b       	std	Z+22, r24	; 0x16
    1ed6:	90 91 11 05 	lds	r25, 0x0511	; 0x800511 <uxTopReadyPriority>
    1eda:	98 17       	cp	r25, r24
    1edc:	10 f4       	brcc	.+4      	; 0x1ee2 <vTaskPriorityInherit+0x8c>
    1ede:	80 93 11 05 	sts	0x0511, r24	; 0x800511 <uxTopReadyPriority>
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	9c 01       	movw	r18, r24
    1ee6:	22 0f       	add	r18, r18
    1ee8:	33 1f       	adc	r19, r19
    1eea:	22 0f       	add	r18, r18
    1eec:	33 1f       	adc	r19, r19
    1eee:	22 0f       	add	r18, r18
    1ef0:	33 1f       	adc	r19, r19
    1ef2:	82 0f       	add	r24, r18
    1ef4:	93 1f       	adc	r25, r19
    1ef6:	be 01       	movw	r22, r28
    1ef8:	89 5b       	subi	r24, 0xB9	; 185
    1efa:	9a 4f       	sbci	r25, 0xFA	; 250
    1efc:	0e 94 cd 05 	call	0xb9a	; 0xb9a <vListInsertEnd>
    1f00:	07 c0       	rjmp	.+14     	; 0x1f10 <vTaskPriorityInherit+0xba>
    1f02:	a0 91 98 05 	lds	r26, 0x0598	; 0x800598 <pxCurrentTCB>
    1f06:	b0 91 99 05 	lds	r27, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1f0a:	56 96       	adiw	r26, 0x16	; 22
    1f0c:	8c 91       	ld	r24, X
    1f0e:	86 8b       	std	Z+22, r24	; 0x16
    1f10:	df 91       	pop	r29
    1f12:	cf 91       	pop	r28
    1f14:	1f 91       	pop	r17
    1f16:	0f 91       	pop	r16
    1f18:	08 95       	ret

00001f1a <xTaskPriorityDisinherit>:
    1f1a:	0f 93       	push	r16
    1f1c:	1f 93       	push	r17
    1f1e:	cf 93       	push	r28
    1f20:	df 93       	push	r29
    1f22:	fc 01       	movw	r30, r24
    1f24:	89 2b       	or	r24, r25
    1f26:	79 f1       	breq	.+94     	; 0x1f86 <xTaskPriorityDisinherit+0x6c>
    1f28:	82 a1       	ldd	r24, Z+34	; 0x22
    1f2a:	81 50       	subi	r24, 0x01	; 1
    1f2c:	82 a3       	std	Z+34, r24	; 0x22
    1f2e:	26 89       	ldd	r18, Z+22	; 0x16
    1f30:	91 a1       	ldd	r25, Z+33	; 0x21
    1f32:	29 17       	cp	r18, r25
    1f34:	51 f1       	breq	.+84     	; 0x1f8a <xTaskPriorityDisinherit+0x70>
    1f36:	81 11       	cpse	r24, r1
    1f38:	2a c0       	rjmp	.+84     	; 0x1f8e <xTaskPriorityDisinherit+0x74>
    1f3a:	ef 01       	movw	r28, r30
    1f3c:	8f 01       	movw	r16, r30
    1f3e:	0e 5f       	subi	r16, 0xFE	; 254
    1f40:	1f 4f       	sbci	r17, 0xFF	; 255
    1f42:	c8 01       	movw	r24, r16
    1f44:	0e 94 1f 06 	call	0xc3e	; 0xc3e <uxListRemove>
    1f48:	89 a1       	ldd	r24, Y+33	; 0x21
    1f4a:	8e 8b       	std	Y+22, r24	; 0x16
    1f4c:	29 e0       	ldi	r18, 0x09	; 9
    1f4e:	30 e0       	ldi	r19, 0x00	; 0
    1f50:	28 1b       	sub	r18, r24
    1f52:	31 09       	sbc	r19, r1
    1f54:	3d 87       	std	Y+13, r19	; 0x0d
    1f56:	2c 87       	std	Y+12, r18	; 0x0c
    1f58:	90 91 11 05 	lds	r25, 0x0511	; 0x800511 <uxTopReadyPriority>
    1f5c:	98 17       	cp	r25, r24
    1f5e:	10 f4       	brcc	.+4      	; 0x1f64 <xTaskPriorityDisinherit+0x4a>
    1f60:	80 93 11 05 	sts	0x0511, r24	; 0x800511 <uxTopReadyPriority>
    1f64:	90 e0       	ldi	r25, 0x00	; 0
    1f66:	9c 01       	movw	r18, r24
    1f68:	22 0f       	add	r18, r18
    1f6a:	33 1f       	adc	r19, r19
    1f6c:	22 0f       	add	r18, r18
    1f6e:	33 1f       	adc	r19, r19
    1f70:	22 0f       	add	r18, r18
    1f72:	33 1f       	adc	r19, r19
    1f74:	82 0f       	add	r24, r18
    1f76:	93 1f       	adc	r25, r19
    1f78:	b8 01       	movw	r22, r16
    1f7a:	89 5b       	subi	r24, 0xB9	; 185
    1f7c:	9a 4f       	sbci	r25, 0xFA	; 250
    1f7e:	0e 94 cd 05 	call	0xb9a	; 0xb9a <vListInsertEnd>
    1f82:	81 e0       	ldi	r24, 0x01	; 1
    1f84:	05 c0       	rjmp	.+10     	; 0x1f90 <xTaskPriorityDisinherit+0x76>
    1f86:	80 e0       	ldi	r24, 0x00	; 0
    1f88:	03 c0       	rjmp	.+6      	; 0x1f90 <xTaskPriorityDisinherit+0x76>
    1f8a:	80 e0       	ldi	r24, 0x00	; 0
    1f8c:	01 c0       	rjmp	.+2      	; 0x1f90 <xTaskPriorityDisinherit+0x76>
    1f8e:	80 e0       	ldi	r24, 0x00	; 0
    1f90:	df 91       	pop	r29
    1f92:	cf 91       	pop	r28
    1f94:	1f 91       	pop	r17
    1f96:	0f 91       	pop	r16
    1f98:	08 95       	ret

00001f9a <pvTaskIncrementMutexHeldCount>:
    1f9a:	80 91 98 05 	lds	r24, 0x0598	; 0x800598 <pxCurrentTCB>
    1f9e:	90 91 99 05 	lds	r25, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1fa2:	89 2b       	or	r24, r25
    1fa4:	39 f0       	breq	.+14     	; 0x1fb4 <pvTaskIncrementMutexHeldCount+0x1a>
    1fa6:	e0 91 98 05 	lds	r30, 0x0598	; 0x800598 <pxCurrentTCB>
    1faa:	f0 91 99 05 	lds	r31, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1fae:	82 a1       	ldd	r24, Z+34	; 0x22
    1fb0:	8f 5f       	subi	r24, 0xFF	; 255
    1fb2:	82 a3       	std	Z+34, r24	; 0x22
    1fb4:	80 91 98 05 	lds	r24, 0x0598	; 0x800598 <pxCurrentTCB>
    1fb8:	90 91 99 05 	lds	r25, 0x0599	; 0x800599 <pxCurrentTCB+0x1>
    1fbc:	08 95       	ret

00001fbe <SEG_Init>:
    1fbe:	1f 93       	push	r17
    1fc0:	cf 93       	push	r28
    1fc2:	df 93       	push	r29
    1fc4:	00 d0       	rcall	.+0      	; 0x1fc6 <SEG_Init+0x8>
    1fc6:	cd b7       	in	r28, 0x3d	; 61
    1fc8:	de b7       	in	r29, 0x3e	; 62
    1fca:	82 e0       	ldi	r24, 0x02	; 2
    1fcc:	89 83       	std	Y+1, r24	; 0x01
    1fce:	13 e0       	ldi	r17, 0x03	; 3
    1fd0:	1a 83       	std	Y+2, r17	; 0x02
    1fd2:	be 01       	movw	r22, r28
    1fd4:	6f 5f       	subi	r22, 0xFF	; 255
    1fd6:	7f 4f       	sbci	r23, 0xFF	; 255
    1fd8:	89 e3       	ldi	r24, 0x39	; 57
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    1fe0:	84 e0       	ldi	r24, 0x04	; 4
    1fe2:	89 83       	std	Y+1, r24	; 0x01
    1fe4:	1a 83       	std	Y+2, r17	; 0x02
    1fe6:	be 01       	movw	r22, r28
    1fe8:	6f 5f       	subi	r22, 0xFF	; 255
    1fea:	7f 4f       	sbci	r23, 0xFF	; 255
    1fec:	89 e3       	ldi	r24, 0x39	; 57
    1fee:	90 e0       	ldi	r25, 0x00	; 0
    1ff0:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    1ff4:	88 e0       	ldi	r24, 0x08	; 8
    1ff6:	89 83       	std	Y+1, r24	; 0x01
    1ff8:	1a 83       	std	Y+2, r17	; 0x02
    1ffa:	be 01       	movw	r22, r28
    1ffc:	6f 5f       	subi	r22, 0xFF	; 255
    1ffe:	7f 4f       	sbci	r23, 0xFF	; 255
    2000:	89 e3       	ldi	r24, 0x39	; 57
    2002:	90 e0       	ldi	r25, 0x00	; 0
    2004:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    2008:	80 e1       	ldi	r24, 0x10	; 16
    200a:	89 83       	std	Y+1, r24	; 0x01
    200c:	1a 83       	std	Y+2, r17	; 0x02
    200e:	be 01       	movw	r22, r28
    2010:	6f 5f       	subi	r22, 0xFF	; 255
    2012:	7f 4f       	sbci	r23, 0xFF	; 255
    2014:	89 e3       	ldi	r24, 0x39	; 57
    2016:	90 e0       	ldi	r25, 0x00	; 0
    2018:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    201c:	80 e2       	ldi	r24, 0x20	; 32
    201e:	89 83       	std	Y+1, r24	; 0x01
    2020:	1a 83       	std	Y+2, r17	; 0x02
    2022:	be 01       	movw	r22, r28
    2024:	6f 5f       	subi	r22, 0xFF	; 255
    2026:	7f 4f       	sbci	r23, 0xFF	; 255
    2028:	89 e3       	ldi	r24, 0x39	; 57
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    2030:	80 e4       	ldi	r24, 0x40	; 64
    2032:	89 83       	std	Y+1, r24	; 0x01
    2034:	1a 83       	std	Y+2, r17	; 0x02
    2036:	be 01       	movw	r22, r28
    2038:	6f 5f       	subi	r22, 0xFF	; 255
    203a:	7f 4f       	sbci	r23, 0xFF	; 255
    203c:	89 e3       	ldi	r24, 0x39	; 57
    203e:	90 e0       	ldi	r25, 0x00	; 0
    2040:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    2044:	80 e8       	ldi	r24, 0x80	; 128
    2046:	89 83       	std	Y+1, r24	; 0x01
    2048:	1a 83       	std	Y+2, r17	; 0x02
    204a:	be 01       	movw	r22, r28
    204c:	6f 5f       	subi	r22, 0xFF	; 255
    204e:	7f 4f       	sbci	r23, 0xFF	; 255
    2050:	89 e3       	ldi	r24, 0x39	; 57
    2052:	90 e0       	ldi	r25, 0x00	; 0
    2054:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    2058:	0f 90       	pop	r0
    205a:	0f 90       	pop	r0
    205c:	df 91       	pop	r29
    205e:	cf 91       	pop	r28
    2060:	1f 91       	pop	r17
    2062:	08 95       	ret

00002064 <SEG_Display>:
    2064:	e8 2f       	mov	r30, r24
    2066:	f0 e0       	ldi	r31, 0x00	; 0
    2068:	ee 59       	subi	r30, 0x9E	; 158
    206a:	ff 4f       	sbci	r31, 0xFF	; 255
    206c:	60 81       	ld	r22, Z
    206e:	89 e3       	ldi	r24, 0x39	; 57
    2070:	90 e0       	ldi	r25, 0x00	; 0
    2072:	0e 94 3e 01 	call	0x27c	; 0x27c <MCAL_GPIO_WritePort>
    2076:	08 95       	ret

00002078 <MOTOR_Init>:
    2078:	cf 93       	push	r28
    207a:	df 93       	push	r29
    207c:	cd b7       	in	r28, 0x3d	; 61
    207e:	de b7       	in	r29, 0x3e	; 62
    2080:	62 97       	sbiw	r28, 0x12	; 18
    2082:	0f b6       	in	r0, 0x3f	; 63
    2084:	f8 94       	cli
    2086:	de bf       	out	0x3e, r29	; 62
    2088:	0f be       	out	0x3f, r0	; 63
    208a:	cd bf       	out	0x3d, r28	; 61
    208c:	1a 86       	std	Y+10, r1	; 0x0a
    208e:	19 86       	std	Y+9, r1	; 0x09
    2090:	18 86       	std	Y+8, r1	; 0x08
    2092:	1f 82       	std	Y+7, r1	; 0x07
    2094:	19 82       	std	Y+1, r1	; 0x01
    2096:	80 e2       	ldi	r24, 0x20	; 32
    2098:	8a 83       	std	Y+2, r24	; 0x02
    209a:	83 e0       	ldi	r24, 0x03	; 3
    209c:	8b 83       	std	Y+3, r24	; 0x03
    209e:	83 ec       	ldi	r24, 0xC3	; 195
    20a0:	99 e0       	ldi	r25, 0x09	; 9
    20a2:	9c 87       	std	Y+12, r25	; 0x0c
    20a4:	8b 87       	std	Y+11, r24	; 0x0b
    20a6:	1d 82       	std	Y+5, r1	; 0x05
    20a8:	1e 82       	std	Y+6, r1	; 0x06
    20aa:	1c 82       	std	Y+4, r1	; 0x04
    20ac:	18 8a       	std	Y+16, r1	; 0x10
    20ae:	1f 86       	std	Y+15, r1	; 0x0f
    20b0:	1a 8a       	std	Y+18, r1	; 0x12
    20b2:	19 8a       	std	Y+17, r1	; 0x11
    20b4:	1e 86       	std	Y+14, r1	; 0x0e
    20b6:	1d 86       	std	Y+13, r1	; 0x0d
    20b8:	ce 01       	movw	r24, r28
    20ba:	01 96       	adiw	r24, 0x01	; 1
    20bc:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <MCAL_PWM_Init>
    20c0:	8b 85       	ldd	r24, Y+11	; 0x0b
    20c2:	9c 85       	ldd	r25, Y+12	; 0x0c
    20c4:	01 96       	adiw	r24, 0x01	; 1
    20c6:	90 93 9b 05 	sts	0x059B, r25	; 0x80059b <TOP+0x1>
    20ca:	80 93 9a 05 	sts	0x059A, r24	; 0x80059a <TOP>
    20ce:	62 96       	adiw	r28, 0x12	; 18
    20d0:	0f b6       	in	r0, 0x3f	; 63
    20d2:	f8 94       	cli
    20d4:	de bf       	out	0x3e, r29	; 62
    20d6:	0f be       	out	0x3f, r0	; 63
    20d8:	cd bf       	out	0x3d, r28	; 61
    20da:	df 91       	pop	r29
    20dc:	cf 91       	pop	r28
    20de:	08 95       	ret

000020e0 <MOTOR_Speed>:
    20e0:	61 e0       	ldi	r22, 0x01	; 1
    20e2:	24 ef       	ldi	r18, 0xF4	; 244
    20e4:	31 e0       	ldi	r19, 0x01	; 1
    20e6:	48 2f       	mov	r20, r24
    20e8:	42 9f       	mul	r20, r18
    20ea:	c0 01       	movw	r24, r0
    20ec:	43 9f       	mul	r20, r19
    20ee:	90 0d       	add	r25, r0
    20f0:	11 24       	eor	r1, r1
    20f2:	0e 94 e6 01 	call	0x3cc	; 0x3cc <MCAL_PWM_Set_Compare_Value>
    20f6:	08 95       	ret

000020f8 <MOTOR_Right>:
    20f8:	41 e0       	ldi	r20, 0x01	; 1
    20fa:	60 e1       	ldi	r22, 0x10	; 16
    20fc:	83 e3       	ldi	r24, 0x33	; 51
    20fe:	90 e0       	ldi	r25, 0x00	; 0
    2100:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2104:	40 e0       	ldi	r20, 0x00	; 0
    2106:	60 e2       	ldi	r22, 0x20	; 32
    2108:	83 e3       	ldi	r24, 0x33	; 51
    210a:	90 e0       	ldi	r25, 0x00	; 0
    210c:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2110:	40 e0       	ldi	r20, 0x00	; 0
    2112:	60 e4       	ldi	r22, 0x40	; 64
    2114:	83 e3       	ldi	r24, 0x33	; 51
    2116:	90 e0       	ldi	r25, 0x00	; 0
    2118:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    211c:	41 e0       	ldi	r20, 0x01	; 1
    211e:	60 e8       	ldi	r22, 0x80	; 128
    2120:	83 e3       	ldi	r24, 0x33	; 51
    2122:	90 e0       	ldi	r25, 0x00	; 0
    2124:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2128:	08 95       	ret

0000212a <MOTOR_Left>:
    212a:	40 e0       	ldi	r20, 0x00	; 0
    212c:	60 e1       	ldi	r22, 0x10	; 16
    212e:	83 e3       	ldi	r24, 0x33	; 51
    2130:	90 e0       	ldi	r25, 0x00	; 0
    2132:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2136:	41 e0       	ldi	r20, 0x01	; 1
    2138:	60 e2       	ldi	r22, 0x20	; 32
    213a:	83 e3       	ldi	r24, 0x33	; 51
    213c:	90 e0       	ldi	r25, 0x00	; 0
    213e:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2142:	41 e0       	ldi	r20, 0x01	; 1
    2144:	60 e4       	ldi	r22, 0x40	; 64
    2146:	83 e3       	ldi	r24, 0x33	; 51
    2148:	90 e0       	ldi	r25, 0x00	; 0
    214a:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    214e:	40 e0       	ldi	r20, 0x00	; 0
    2150:	60 e8       	ldi	r22, 0x80	; 128
    2152:	83 e3       	ldi	r24, 0x33	; 51
    2154:	90 e0       	ldi	r25, 0x00	; 0
    2156:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    215a:	08 95       	ret

0000215c <MOTOR_Stop>:
    215c:	40 e0       	ldi	r20, 0x00	; 0
    215e:	60 e1       	ldi	r22, 0x10	; 16
    2160:	83 e3       	ldi	r24, 0x33	; 51
    2162:	90 e0       	ldi	r25, 0x00	; 0
    2164:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2168:	40 e0       	ldi	r20, 0x00	; 0
    216a:	60 e2       	ldi	r22, 0x20	; 32
    216c:	83 e3       	ldi	r24, 0x33	; 51
    216e:	90 e0       	ldi	r25, 0x00	; 0
    2170:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2174:	40 e0       	ldi	r20, 0x00	; 0
    2176:	60 e4       	ldi	r22, 0x40	; 64
    2178:	83 e3       	ldi	r24, 0x33	; 51
    217a:	90 e0       	ldi	r25, 0x00	; 0
    217c:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2180:	40 e0       	ldi	r20, 0x00	; 0
    2182:	60 e8       	ldi	r22, 0x80	; 128
    2184:	83 e3       	ldi	r24, 0x33	; 51
    2186:	90 e0       	ldi	r25, 0x00	; 0
    2188:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    218c:	08 95       	ret

0000218e <MOTOR_Forward>:
    218e:	40 e0       	ldi	r20, 0x00	; 0
    2190:	60 e1       	ldi	r22, 0x10	; 16
    2192:	83 e3       	ldi	r24, 0x33	; 51
    2194:	90 e0       	ldi	r25, 0x00	; 0
    2196:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    219a:	41 e0       	ldi	r20, 0x01	; 1
    219c:	60 e2       	ldi	r22, 0x20	; 32
    219e:	83 e3       	ldi	r24, 0x33	; 51
    21a0:	90 e0       	ldi	r25, 0x00	; 0
    21a2:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    21a6:	40 e0       	ldi	r20, 0x00	; 0
    21a8:	60 e4       	ldi	r22, 0x40	; 64
    21aa:	83 e3       	ldi	r24, 0x33	; 51
    21ac:	90 e0       	ldi	r25, 0x00	; 0
    21ae:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    21b2:	41 e0       	ldi	r20, 0x01	; 1
    21b4:	60 e8       	ldi	r22, 0x80	; 128
    21b6:	83 e3       	ldi	r24, 0x33	; 51
    21b8:	90 e0       	ldi	r25, 0x00	; 0
    21ba:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    21be:	08 95       	ret

000021c0 <MOTOR_Back>:
    21c0:	41 e0       	ldi	r20, 0x01	; 1
    21c2:	60 e1       	ldi	r22, 0x10	; 16
    21c4:	83 e3       	ldi	r24, 0x33	; 51
    21c6:	90 e0       	ldi	r25, 0x00	; 0
    21c8:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    21cc:	40 e0       	ldi	r20, 0x00	; 0
    21ce:	60 e2       	ldi	r22, 0x20	; 32
    21d0:	83 e3       	ldi	r24, 0x33	; 51
    21d2:	90 e0       	ldi	r25, 0x00	; 0
    21d4:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    21d8:	41 e0       	ldi	r20, 0x01	; 1
    21da:	60 e4       	ldi	r22, 0x40	; 64
    21dc:	83 e3       	ldi	r24, 0x33	; 51
    21de:	90 e0       	ldi	r25, 0x00	; 0
    21e0:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    21e4:	40 e0       	ldi	r20, 0x00	; 0
    21e6:	60 e8       	ldi	r22, 0x80	; 128
    21e8:	83 e3       	ldi	r24, 0x33	; 51
    21ea:	90 e0       	ldi	r25, 0x00	; 0
    21ec:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    21f0:	08 95       	ret

000021f2 <ISR_Bluetooth>:
    21f2:	08 95       	ret

000021f4 <Bluetooth_Init>:
    21f4:	ec e9       	ldi	r30, 0x9C	; 156
    21f6:	f5 e0       	ldi	r31, 0x05	; 5
    21f8:	20 e8       	ldi	r18, 0x80	; 128
    21fa:	35 e2       	ldi	r19, 0x25	; 37
    21fc:	36 83       	std	Z+6, r19	; 0x06
    21fe:	25 83       	std	Z+5, r18	; 0x05
    2200:	9e ef       	ldi	r25, 0xFE	; 254
    2202:	91 83       	std	Z+1, r25	; 0x01
    2204:	91 e0       	ldi	r25, 0x01	; 1
    2206:	92 83       	std	Z+2, r25	; 0x02
    2208:	81 11       	cpse	r24, r1
    220a:	07 c0       	rjmp	.+14     	; 0x221a <Bluetooth_Init+0x26>
    220c:	83 e0       	ldi	r24, 0x03	; 3
    220e:	80 87       	std	Z+8, r24	; 0x08
    2210:	89 ef       	ldi	r24, 0xF9	; 249
    2212:	90 e1       	ldi	r25, 0x10	; 16
    2214:	92 87       	std	Z+10, r25	; 0x0a
    2216:	81 87       	std	Z+9, r24	; 0x09
    2218:	05 c0       	rjmp	.+10     	; 0x2224 <Bluetooth_Init+0x30>
    221a:	ec e9       	ldi	r30, 0x9C	; 156
    221c:	f5 e0       	ldi	r31, 0x05	; 5
    221e:	10 86       	std	Z+8, r1	; 0x08
    2220:	12 86       	std	Z+10, r1	; 0x0a
    2222:	11 86       	std	Z+9, r1	; 0x09
    2224:	ec e9       	ldi	r30, 0x9C	; 156
    2226:	f5 e0       	ldi	r31, 0x05	; 5
    2228:	88 e1       	ldi	r24, 0x18	; 24
    222a:	80 83       	st	Z, r24
    222c:	84 e0       	ldi	r24, 0x04	; 4
    222e:	83 83       	std	Z+3, r24	; 0x03
    2230:	87 ef       	ldi	r24, 0xF7	; 247
    2232:	84 83       	std	Z+4, r24	; 0x04
    2234:	8f ec       	ldi	r24, 0xCF	; 207
    2236:	87 83       	std	Z+7, r24	; 0x07
    2238:	cf 01       	movw	r24, r30
    223a:	0e 94 ce 02 	call	0x59c	; 0x59c <MCAL_USART_Init>
    223e:	08 95       	ret

00002240 <Bluetooth_RX_Byte>:
    2240:	60 e0       	ldi	r22, 0x00	; 0
    2242:	0e 94 50 04 	call	0x8a0	; 0x8a0 <MCAL_USART_ReceiveData>
    2246:	08 95       	ret

00002248 <LCD_cmd>:
    2248:	cf 93       	push	r28
    224a:	c8 2f       	mov	r28, r24
    224c:	68 2f       	mov	r22, r24
    224e:	60 7f       	andi	r22, 0xF0	; 240
    2250:	86 e3       	ldi	r24, 0x36	; 54
    2252:	90 e0       	ldi	r25, 0x00	; 0
    2254:	0e 94 3e 01 	call	0x27c	; 0x27c <MCAL_GPIO_WritePort>
    2258:	40 e0       	ldi	r20, 0x00	; 0
    225a:	62 e0       	ldi	r22, 0x02	; 2
    225c:	86 e3       	ldi	r24, 0x36	; 54
    225e:	90 e0       	ldi	r25, 0x00	; 0
    2260:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2264:	40 e0       	ldi	r20, 0x00	; 0
    2266:	61 e0       	ldi	r22, 0x01	; 1
    2268:	86 e3       	ldi	r24, 0x36	; 54
    226a:	90 e0       	ldi	r25, 0x00	; 0
    226c:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2270:	41 e0       	ldi	r20, 0x01	; 1
    2272:	64 e0       	ldi	r22, 0x04	; 4
    2274:	86 e3       	ldi	r24, 0x36	; 54
    2276:	90 e0       	ldi	r25, 0x00	; 0
    2278:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    227c:	82 e0       	ldi	r24, 0x02	; 2
    227e:	8a 95       	dec	r24
    2280:	f1 f7       	brne	.-4      	; 0x227e <LCD_cmd+0x36>
    2282:	00 c0       	rjmp	.+0      	; 0x2284 <LCD_cmd+0x3c>
    2284:	40 e0       	ldi	r20, 0x00	; 0
    2286:	64 e0       	ldi	r22, 0x04	; 4
    2288:	86 e3       	ldi	r24, 0x36	; 54
    228a:	90 e0       	ldi	r25, 0x00	; 0
    228c:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2290:	8f e8       	ldi	r24, 0x8F	; 143
    2292:	91 e0       	ldi	r25, 0x01	; 1
    2294:	01 97       	sbiw	r24, 0x01	; 1
    2296:	f1 f7       	brne	.-4      	; 0x2294 <LCD_cmd+0x4c>
    2298:	00 c0       	rjmp	.+0      	; 0x229a <LCD_cmd+0x52>
    229a:	00 00       	nop
    229c:	90 e1       	ldi	r25, 0x10	; 16
    229e:	c9 9f       	mul	r28, r25
    22a0:	b0 01       	movw	r22, r0
    22a2:	11 24       	eor	r1, r1
    22a4:	86 e3       	ldi	r24, 0x36	; 54
    22a6:	90 e0       	ldi	r25, 0x00	; 0
    22a8:	0e 94 3e 01 	call	0x27c	; 0x27c <MCAL_GPIO_WritePort>
    22ac:	40 e0       	ldi	r20, 0x00	; 0
    22ae:	62 e0       	ldi	r22, 0x02	; 2
    22b0:	86 e3       	ldi	r24, 0x36	; 54
    22b2:	90 e0       	ldi	r25, 0x00	; 0
    22b4:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    22b8:	40 e0       	ldi	r20, 0x00	; 0
    22ba:	61 e0       	ldi	r22, 0x01	; 1
    22bc:	86 e3       	ldi	r24, 0x36	; 54
    22be:	90 e0       	ldi	r25, 0x00	; 0
    22c0:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    22c4:	41 e0       	ldi	r20, 0x01	; 1
    22c6:	64 e0       	ldi	r22, 0x04	; 4
    22c8:	86 e3       	ldi	r24, 0x36	; 54
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    22d0:	82 e0       	ldi	r24, 0x02	; 2
    22d2:	8a 95       	dec	r24
    22d4:	f1 f7       	brne	.-4      	; 0x22d2 <LCD_cmd+0x8a>
    22d6:	00 c0       	rjmp	.+0      	; 0x22d8 <LCD_cmd+0x90>
    22d8:	40 e0       	ldi	r20, 0x00	; 0
    22da:	64 e0       	ldi	r22, 0x04	; 4
    22dc:	86 e3       	ldi	r24, 0x36	; 54
    22de:	90 e0       	ldi	r25, 0x00	; 0
    22e0:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    22e4:	8f e9       	ldi	r24, 0x9F	; 159
    22e6:	9f e0       	ldi	r25, 0x0F	; 15
    22e8:	01 97       	sbiw	r24, 0x01	; 1
    22ea:	f1 f7       	brne	.-4      	; 0x22e8 <LCD_cmd+0xa0>
    22ec:	00 c0       	rjmp	.+0      	; 0x22ee <LCD_cmd+0xa6>
    22ee:	00 00       	nop
    22f0:	cf 91       	pop	r28
    22f2:	08 95       	ret

000022f4 <LCD_init>:
    22f4:	ef 92       	push	r14
    22f6:	ff 92       	push	r15
    22f8:	0f 93       	push	r16
    22fa:	1f 93       	push	r17
    22fc:	cf 93       	push	r28
    22fe:	df 93       	push	r29
    2300:	00 d0       	rcall	.+0      	; 0x2302 <LCD_init+0xe>
    2302:	cd b7       	in	r28, 0x3d	; 61
    2304:	de b7       	in	r29, 0x3e	; 62
    2306:	13 e0       	ldi	r17, 0x03	; 3
    2308:	1a 83       	std	Y+2, r17	; 0x02
    230a:	01 e0       	ldi	r16, 0x01	; 1
    230c:	09 83       	std	Y+1, r16	; 0x01
    230e:	be 01       	movw	r22, r28
    2310:	6f 5f       	subi	r22, 0xFF	; 255
    2312:	7f 4f       	sbci	r23, 0xFF	; 255
    2314:	86 e3       	ldi	r24, 0x36	; 54
    2316:	90 e0       	ldi	r25, 0x00	; 0
    2318:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    231c:	1a 83       	std	Y+2, r17	; 0x02
    231e:	68 94       	set
    2320:	ff 24       	eor	r15, r15
    2322:	f1 f8       	bld	r15, 1
    2324:	f9 82       	std	Y+1, r15	; 0x01
    2326:	be 01       	movw	r22, r28
    2328:	6f 5f       	subi	r22, 0xFF	; 255
    232a:	7f 4f       	sbci	r23, 0xFF	; 255
    232c:	86 e3       	ldi	r24, 0x36	; 54
    232e:	90 e0       	ldi	r25, 0x00	; 0
    2330:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    2334:	1a 83       	std	Y+2, r17	; 0x02
    2336:	68 94       	set
    2338:	ee 24       	eor	r14, r14
    233a:	e2 f8       	bld	r14, 2
    233c:	e9 82       	std	Y+1, r14	; 0x01
    233e:	be 01       	movw	r22, r28
    2340:	6f 5f       	subi	r22, 0xFF	; 255
    2342:	7f 4f       	sbci	r23, 0xFF	; 255
    2344:	86 e3       	ldi	r24, 0x36	; 54
    2346:	90 e0       	ldi	r25, 0x00	; 0
    2348:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    234c:	1a 83       	std	Y+2, r17	; 0x02
    234e:	88 e0       	ldi	r24, 0x08	; 8
    2350:	89 83       	std	Y+1, r24	; 0x01
    2352:	be 01       	movw	r22, r28
    2354:	6f 5f       	subi	r22, 0xFF	; 255
    2356:	7f 4f       	sbci	r23, 0xFF	; 255
    2358:	86 e3       	ldi	r24, 0x36	; 54
    235a:	90 e0       	ldi	r25, 0x00	; 0
    235c:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    2360:	1a 83       	std	Y+2, r17	; 0x02
    2362:	80 e1       	ldi	r24, 0x10	; 16
    2364:	89 83       	std	Y+1, r24	; 0x01
    2366:	be 01       	movw	r22, r28
    2368:	6f 5f       	subi	r22, 0xFF	; 255
    236a:	7f 4f       	sbci	r23, 0xFF	; 255
    236c:	86 e3       	ldi	r24, 0x36	; 54
    236e:	90 e0       	ldi	r25, 0x00	; 0
    2370:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    2374:	1a 83       	std	Y+2, r17	; 0x02
    2376:	80 e2       	ldi	r24, 0x20	; 32
    2378:	89 83       	std	Y+1, r24	; 0x01
    237a:	be 01       	movw	r22, r28
    237c:	6f 5f       	subi	r22, 0xFF	; 255
    237e:	7f 4f       	sbci	r23, 0xFF	; 255
    2380:	86 e3       	ldi	r24, 0x36	; 54
    2382:	90 e0       	ldi	r25, 0x00	; 0
    2384:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    2388:	1a 83       	std	Y+2, r17	; 0x02
    238a:	80 e4       	ldi	r24, 0x40	; 64
    238c:	89 83       	std	Y+1, r24	; 0x01
    238e:	be 01       	movw	r22, r28
    2390:	6f 5f       	subi	r22, 0xFF	; 255
    2392:	7f 4f       	sbci	r23, 0xFF	; 255
    2394:	86 e3       	ldi	r24, 0x36	; 54
    2396:	90 e0       	ldi	r25, 0x00	; 0
    2398:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    239c:	1a 83       	std	Y+2, r17	; 0x02
    239e:	80 e8       	ldi	r24, 0x80	; 128
    23a0:	89 83       	std	Y+1, r24	; 0x01
    23a2:	be 01       	movw	r22, r28
    23a4:	6f 5f       	subi	r22, 0xFF	; 255
    23a6:	7f 4f       	sbci	r23, 0xFF	; 255
    23a8:	86 e3       	ldi	r24, 0x36	; 54
    23aa:	90 e0       	ldi	r25, 0x00	; 0
    23ac:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    23b0:	1a 83       	std	Y+2, r17	; 0x02
    23b2:	e9 82       	std	Y+1, r14	; 0x01
    23b4:	be 01       	movw	r22, r28
    23b6:	6f 5f       	subi	r22, 0xFF	; 255
    23b8:	7f 4f       	sbci	r23, 0xFF	; 255
    23ba:	86 e3       	ldi	r24, 0x36	; 54
    23bc:	90 e0       	ldi	r25, 0x00	; 0
    23be:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    23c2:	1a 83       	std	Y+2, r17	; 0x02
    23c4:	f9 82       	std	Y+1, r15	; 0x01
    23c6:	be 01       	movw	r22, r28
    23c8:	6f 5f       	subi	r22, 0xFF	; 255
    23ca:	7f 4f       	sbci	r23, 0xFF	; 255
    23cc:	86 e3       	ldi	r24, 0x36	; 54
    23ce:	90 e0       	ldi	r25, 0x00	; 0
    23d0:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    23d4:	1a 83       	std	Y+2, r17	; 0x02
    23d6:	09 83       	std	Y+1, r16	; 0x01
    23d8:	be 01       	movw	r22, r28
    23da:	6f 5f       	subi	r22, 0xFF	; 255
    23dc:	7f 4f       	sbci	r23, 0xFF	; 255
    23de:	86 e3       	ldi	r24, 0x36	; 54
    23e0:	90 e0       	ldi	r25, 0x00	; 0
    23e2:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
    23e6:	8f e3       	ldi	r24, 0x3F	; 63
    23e8:	9c e9       	ldi	r25, 0x9C	; 156
    23ea:	01 97       	sbiw	r24, 0x01	; 1
    23ec:	f1 f7       	brne	.-4      	; 0x23ea <LCD_init+0xf6>
    23ee:	00 c0       	rjmp	.+0      	; 0x23f0 <LCD_init+0xfc>
    23f0:	00 00       	nop
    23f2:	82 e0       	ldi	r24, 0x02	; 2
    23f4:	0e 94 24 11 	call	0x2248	; 0x2248 <LCD_cmd>
    23f8:	88 e2       	ldi	r24, 0x28	; 40
    23fa:	0e 94 24 11 	call	0x2248	; 0x2248 <LCD_cmd>
    23fe:	86 e0       	ldi	r24, 0x06	; 6
    2400:	0e 94 24 11 	call	0x2248	; 0x2248 <LCD_cmd>
    2404:	80 e8       	ldi	r24, 0x80	; 128
    2406:	0e 94 24 11 	call	0x2248	; 0x2248 <LCD_cmd>
    240a:	8c e0       	ldi	r24, 0x0C	; 12
    240c:	0e 94 24 11 	call	0x2248	; 0x2248 <LCD_cmd>
    2410:	81 e0       	ldi	r24, 0x01	; 1
    2412:	0e 94 24 11 	call	0x2248	; 0x2248 <LCD_cmd>
    2416:	8f e9       	ldi	r24, 0x9F	; 159
    2418:	9f e0       	ldi	r25, 0x0F	; 15
    241a:	01 97       	sbiw	r24, 0x01	; 1
    241c:	f1 f7       	brne	.-4      	; 0x241a <LCD_init+0x126>
    241e:	00 c0       	rjmp	.+0      	; 0x2420 <LCD_init+0x12c>
    2420:	00 00       	nop
    2422:	0f 90       	pop	r0
    2424:	0f 90       	pop	r0
    2426:	df 91       	pop	r29
    2428:	cf 91       	pop	r28
    242a:	1f 91       	pop	r17
    242c:	0f 91       	pop	r16
    242e:	ff 90       	pop	r15
    2430:	ef 90       	pop	r14
    2432:	08 95       	ret

00002434 <lcd_Clear>:
    2434:	81 e0       	ldi	r24, 0x01	; 1
    2436:	0e 94 24 11 	call	0x2248	; 0x2248 <LCD_cmd>
    243a:	8f e9       	ldi	r24, 0x9F	; 159
    243c:	9f e0       	ldi	r25, 0x0F	; 15
    243e:	01 97       	sbiw	r24, 0x01	; 1
    2440:	f1 f7       	brne	.-4      	; 0x243e <lcd_Clear+0xa>
    2442:	00 c0       	rjmp	.+0      	; 0x2444 <lcd_Clear+0x10>
    2444:	00 00       	nop
    2446:	80 e8       	ldi	r24, 0x80	; 128
    2448:	0e 94 24 11 	call	0x2248	; 0x2248 <LCD_cmd>
    244c:	08 95       	ret

0000244e <GOTO_XY>:
    244e:	81 11       	cpse	r24, r1
    2450:	07 c0       	rjmp	.+14     	; 0x2460 <GOTO_XY+0x12>
    2452:	60 31       	cpi	r22, 0x10	; 16
    2454:	68 f4       	brcc	.+26     	; 0x2470 <GOTO_XY+0x22>
    2456:	80 e8       	ldi	r24, 0x80	; 128
    2458:	86 0f       	add	r24, r22
    245a:	0e 94 24 11 	call	0x2248	; 0x2248 <LCD_cmd>
    245e:	08 95       	ret
    2460:	81 30       	cpi	r24, 0x01	; 1
    2462:	31 f4       	brne	.+12     	; 0x2470 <GOTO_XY+0x22>
    2464:	60 31       	cpi	r22, 0x10	; 16
    2466:	20 f4       	brcc	.+8      	; 0x2470 <GOTO_XY+0x22>
    2468:	80 ec       	ldi	r24, 0xC0	; 192
    246a:	86 0f       	add	r24, r22
    246c:	0e 94 24 11 	call	0x2248	; 0x2248 <LCD_cmd>
    2470:	08 95       	ret

00002472 <LCD_Character>:
    2472:	cf 93       	push	r28
    2474:	c8 2f       	mov	r28, r24
    2476:	68 2f       	mov	r22, r24
    2478:	60 7f       	andi	r22, 0xF0	; 240
    247a:	86 e3       	ldi	r24, 0x36	; 54
    247c:	90 e0       	ldi	r25, 0x00	; 0
    247e:	0e 94 3e 01 	call	0x27c	; 0x27c <MCAL_GPIO_WritePort>
    2482:	41 e0       	ldi	r20, 0x01	; 1
    2484:	62 e0       	ldi	r22, 0x02	; 2
    2486:	86 e3       	ldi	r24, 0x36	; 54
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    248e:	40 e0       	ldi	r20, 0x00	; 0
    2490:	61 e0       	ldi	r22, 0x01	; 1
    2492:	86 e3       	ldi	r24, 0x36	; 54
    2494:	90 e0       	ldi	r25, 0x00	; 0
    2496:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    249a:	41 e0       	ldi	r20, 0x01	; 1
    249c:	64 e0       	ldi	r22, 0x04	; 4
    249e:	86 e3       	ldi	r24, 0x36	; 54
    24a0:	90 e0       	ldi	r25, 0x00	; 0
    24a2:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    24a6:	82 e0       	ldi	r24, 0x02	; 2
    24a8:	8a 95       	dec	r24
    24aa:	f1 f7       	brne	.-4      	; 0x24a8 <LCD_Character+0x36>
    24ac:	00 c0       	rjmp	.+0      	; 0x24ae <LCD_Character+0x3c>
    24ae:	40 e0       	ldi	r20, 0x00	; 0
    24b0:	64 e0       	ldi	r22, 0x04	; 4
    24b2:	86 e3       	ldi	r24, 0x36	; 54
    24b4:	90 e0       	ldi	r25, 0x00	; 0
    24b6:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    24ba:	8f e8       	ldi	r24, 0x8F	; 143
    24bc:	91 e0       	ldi	r25, 0x01	; 1
    24be:	01 97       	sbiw	r24, 0x01	; 1
    24c0:	f1 f7       	brne	.-4      	; 0x24be <LCD_Character+0x4c>
    24c2:	00 c0       	rjmp	.+0      	; 0x24c4 <LCD_Character+0x52>
    24c4:	00 00       	nop
    24c6:	90 e1       	ldi	r25, 0x10	; 16
    24c8:	c9 9f       	mul	r28, r25
    24ca:	b0 01       	movw	r22, r0
    24cc:	11 24       	eor	r1, r1
    24ce:	86 e3       	ldi	r24, 0x36	; 54
    24d0:	90 e0       	ldi	r25, 0x00	; 0
    24d2:	0e 94 3e 01 	call	0x27c	; 0x27c <MCAL_GPIO_WritePort>
    24d6:	41 e0       	ldi	r20, 0x01	; 1
    24d8:	62 e0       	ldi	r22, 0x02	; 2
    24da:	86 e3       	ldi	r24, 0x36	; 54
    24dc:	90 e0       	ldi	r25, 0x00	; 0
    24de:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    24e2:	40 e0       	ldi	r20, 0x00	; 0
    24e4:	61 e0       	ldi	r22, 0x01	; 1
    24e6:	86 e3       	ldi	r24, 0x36	; 54
    24e8:	90 e0       	ldi	r25, 0x00	; 0
    24ea:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    24ee:	41 e0       	ldi	r20, 0x01	; 1
    24f0:	64 e0       	ldi	r22, 0x04	; 4
    24f2:	86 e3       	ldi	r24, 0x36	; 54
    24f4:	90 e0       	ldi	r25, 0x00	; 0
    24f6:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    24fa:	82 e0       	ldi	r24, 0x02	; 2
    24fc:	8a 95       	dec	r24
    24fe:	f1 f7       	brne	.-4      	; 0x24fc <LCD_Character+0x8a>
    2500:	00 c0       	rjmp	.+0      	; 0x2502 <LCD_Character+0x90>
    2502:	40 e0       	ldi	r20, 0x00	; 0
    2504:	64 e0       	ldi	r22, 0x04	; 4
    2506:	86 e3       	ldi	r24, 0x36	; 54
    2508:	90 e0       	ldi	r25, 0x00	; 0
    250a:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    250e:	8f e9       	ldi	r24, 0x9F	; 159
    2510:	9f e0       	ldi	r25, 0x0F	; 15
    2512:	01 97       	sbiw	r24, 0x01	; 1
    2514:	f1 f7       	brne	.-4      	; 0x2512 <LCD_Character+0xa0>
    2516:	00 c0       	rjmp	.+0      	; 0x2518 <LCD_Character+0xa6>
    2518:	00 00       	nop
    251a:	cf 91       	pop	r28
    251c:	08 95       	ret

0000251e <LCD_String>:
    251e:	0f 93       	push	r16
    2520:	1f 93       	push	r17
    2522:	cf 93       	push	r28
    2524:	df 93       	push	r29
    2526:	8c 01       	movw	r16, r24
    2528:	c0 e0       	ldi	r28, 0x00	; 0
    252a:	d0 e0       	ldi	r29, 0x00	; 0
    252c:	21 c0       	rjmp	.+66     	; 0x2570 <LCD_String+0x52>
    252e:	21 96       	adiw	r28, 0x01	; 1
    2530:	0f 5f       	subi	r16, 0xFF	; 255
    2532:	1f 4f       	sbci	r17, 0xFF	; 255
    2534:	0e 94 39 12 	call	0x2472	; 0x2472 <LCD_Character>
    2538:	c0 31       	cpi	r28, 0x10	; 16
    253a:	d1 05       	cpc	r29, r1
    253c:	29 f4       	brne	.+10     	; 0x2548 <LCD_String+0x2a>
    253e:	60 e0       	ldi	r22, 0x00	; 0
    2540:	81 e0       	ldi	r24, 0x01	; 1
    2542:	0e 94 27 12 	call	0x244e	; 0x244e <GOTO_XY>
    2546:	14 c0       	rjmp	.+40     	; 0x2570 <LCD_String+0x52>
    2548:	c0 32       	cpi	r28, 0x20	; 32
    254a:	d1 05       	cpc	r29, r1
    254c:	89 f4       	brne	.+34     	; 0x2570 <LCD_String+0x52>
    254e:	2f ef       	ldi	r18, 0xFF	; 255
    2550:	84 e3       	ldi	r24, 0x34	; 52
    2552:	9c e0       	ldi	r25, 0x0C	; 12
    2554:	21 50       	subi	r18, 0x01	; 1
    2556:	80 40       	sbci	r24, 0x00	; 0
    2558:	90 40       	sbci	r25, 0x00	; 0
    255a:	e1 f7       	brne	.-8      	; 0x2554 <LCD_String+0x36>
    255c:	00 c0       	rjmp	.+0      	; 0x255e <LCD_String+0x40>
    255e:	00 00       	nop
    2560:	0e 94 1a 12 	call	0x2434	; 0x2434 <lcd_Clear>
    2564:	60 e0       	ldi	r22, 0x00	; 0
    2566:	80 e0       	ldi	r24, 0x00	; 0
    2568:	0e 94 27 12 	call	0x244e	; 0x244e <GOTO_XY>
    256c:	c0 e0       	ldi	r28, 0x00	; 0
    256e:	d0 e0       	ldi	r29, 0x00	; 0
    2570:	f8 01       	movw	r30, r16
    2572:	80 81       	ld	r24, Z
    2574:	81 11       	cpse	r24, r1
    2576:	db cf       	rjmp	.-74     	; 0x252e <LCD_String+0x10>
    2578:	df 91       	pop	r29
    257a:	cf 91       	pop	r28
    257c:	1f 91       	pop	r17
    257e:	0f 91       	pop	r16
    2580:	08 95       	ret

00002582 <__vector_9>:
    2582:	1f 92       	push	r1
    2584:	0f 92       	push	r0
    2586:	0f b6       	in	r0, 0x3f	; 63
    2588:	0f 92       	push	r0
    258a:	11 24       	eor	r1, r1
    258c:	8f 93       	push	r24
    258e:	9f 93       	push	r25
    2590:	af 93       	push	r26
    2592:	bf 93       	push	r27
    2594:	80 91 a7 05 	lds	r24, 0x05A7	; 0x8005a7 <TimerOverflow>
    2598:	90 91 a8 05 	lds	r25, 0x05A8	; 0x8005a8 <TimerOverflow+0x1>
    259c:	a0 91 a9 05 	lds	r26, 0x05A9	; 0x8005a9 <TimerOverflow+0x2>
    25a0:	b0 91 aa 05 	lds	r27, 0x05AA	; 0x8005aa <TimerOverflow+0x3>
    25a4:	01 96       	adiw	r24, 0x01	; 1
    25a6:	a1 1d       	adc	r26, r1
    25a8:	b1 1d       	adc	r27, r1
    25aa:	80 93 a7 05 	sts	0x05A7, r24	; 0x8005a7 <TimerOverflow>
    25ae:	90 93 a8 05 	sts	0x05A8, r25	; 0x8005a8 <TimerOverflow+0x1>
    25b2:	a0 93 a9 05 	sts	0x05A9, r26	; 0x8005a9 <TimerOverflow+0x2>
    25b6:	b0 93 aa 05 	sts	0x05AA, r27	; 0x8005aa <TimerOverflow+0x3>
    25ba:	bf 91       	pop	r27
    25bc:	af 91       	pop	r26
    25be:	9f 91       	pop	r25
    25c0:	8f 91       	pop	r24
    25c2:	0f 90       	pop	r0
    25c4:	0f be       	out	0x3f, r0	; 63
    25c6:	0f 90       	pop	r0
    25c8:	1f 90       	pop	r1
    25ca:	18 95       	reti

000025cc <main>:
    25cc:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <Task_init>
    25d0:	0e 94 92 0c 	call	0x1924	; 0x1924 <vTaskStartScheduler>
    25d4:	ff cf       	rjmp	.-2      	; 0x25d4 <main+0x8>

000025d6 <CMD_RX>:
***********************************Task Call Back*********************************
*********************************************************************************/
//receive command from Bluetooth
void CMD_RX(void *pvparam)
{
	uint8_t data=0;
    25d6:	c0 e0       	ldi	r28, 0x00	; 0
	while (1)
	{
		Bluetooth_RX_Byte(&CMD_Data);
    25d8:	87 eb       	ldi	r24, 0xB7	; 183
    25da:	95 e0       	ldi	r25, 0x05	; 5
    25dc:	0e 94 20 11 	call	0x2240	; 0x2240 <Bluetooth_RX_Byte>
		switch(CMD_Data)
    25e0:	20 91 b7 05 	lds	r18, 0x05B7	; 0x8005b7 <CMD_Data>
    25e4:	82 2f       	mov	r24, r18
    25e6:	90 e0       	ldi	r25, 0x00	; 0
    25e8:	fc 01       	movw	r30, r24
    25ea:	f0 97       	sbiw	r30, 0x30	; 48
    25ec:	e9 34       	cpi	r30, 0x49	; 73
    25ee:	f1 05       	cpc	r31, r1
    25f0:	08 f0       	brcs	.+2      	; 0x25f4 <CMD_RX+0x1e>
    25f2:	66 c0       	rjmp	.+204    	; 0x26c0 <CMD_RX+0xea>
    25f4:	e6 5d       	subi	r30, 0xD6	; 214
    25f6:	ff 4f       	sbci	r31, 0xFF	; 255
    25f8:	0c 94 b8 17 	jmp	0x2f70	; 0x2f70 <__tablejump2__>
			case 'F':
			case 'R':
			case 'L':
			case 'S':
			//LCD task Check previous status
			if (data != CMD_Data)
    25fc:	c2 17       	cp	r28, r18
    25fe:	91 f0       	breq	.+36     	; 0x2624 <CMD_RX+0x4e>
			{
				xSemaphoreGive(LCD_Sem);
    2600:	20 e0       	ldi	r18, 0x00	; 0
    2602:	40 e0       	ldi	r20, 0x00	; 0
    2604:	50 e0       	ldi	r21, 0x00	; 0
    2606:	60 e0       	ldi	r22, 0x00	; 0
    2608:	70 e0       	ldi	r23, 0x00	; 0
    260a:	80 91 d0 05 	lds	r24, 0x05D0	; 0x8005d0 <LCD_Sem>
    260e:	90 91 d1 05 	lds	r25, 0x05D1	; 0x8005d1 <LCD_Sem+0x1>
    2612:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <xQueueGenericSend>
				vTaskPrioritySet(Print_State_Handle,2);
    2616:	62 e0       	ldi	r22, 0x02	; 2
    2618:	80 91 af 05 	lds	r24, 0x05AF	; 0x8005af <Print_State_Handle>
    261c:	90 91 b0 05 	lds	r25, 0x05B0	; 0x8005b0 <Print_State_Handle+0x1>
    2620:	0e 94 14 0c 	call	0x1828	; 0x1828 <vTaskPrioritySet>
			}
			data=CMD_Data;
    2624:	c0 91 b7 05 	lds	r28, 0x05B7	; 0x8005b7 <CMD_Data>
			xSemaphoreGive(MOTOR_Sem);
    2628:	20 e0       	ldi	r18, 0x00	; 0
    262a:	40 e0       	ldi	r20, 0x00	; 0
    262c:	50 e0       	ldi	r21, 0x00	; 0
    262e:	60 e0       	ldi	r22, 0x00	; 0
    2630:	70 e0       	ldi	r23, 0x00	; 0
    2632:	80 91 ce 05 	lds	r24, 0x05CE	; 0x8005ce <MOTOR_Sem>
    2636:	90 91 cf 05 	lds	r25, 0x05CF	; 0x8005cf <MOTOR_Sem+0x1>
    263a:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <xQueueGenericSend>
			vTaskPrioritySet(MOTOR_State_Handle,2);
    263e:	62 e0       	ldi	r22, 0x02	; 2
    2640:	80 91 b3 05 	lds	r24, 0x05B3	; 0x8005b3 <MOTOR_State_Handle>
    2644:	90 91 b4 05 	lds	r25, 0x05B4	; 0x8005b4 <MOTOR_State_Handle+0x1>
    2648:	0e 94 14 0c 	call	0x1828	; 0x1828 <vTaskPrioritySet>
			break;
    264c:	3d c0       	rjmp	.+122    	; 0x26c8 <CMD_RX+0xf2>
			case '1':
			case '2':
			case '3':
			case '4':
			case '5':
			xSemaphoreGive(Speed_Sem);
    264e:	20 e0       	ldi	r18, 0x00	; 0
    2650:	40 e0       	ldi	r20, 0x00	; 0
    2652:	50 e0       	ldi	r21, 0x00	; 0
    2654:	60 e0       	ldi	r22, 0x00	; 0
    2656:	70 e0       	ldi	r23, 0x00	; 0
    2658:	80 91 d4 05 	lds	r24, 0x05D4	; 0x8005d4 <Speed_Sem>
    265c:	90 91 d5 05 	lds	r25, 0x05D5	; 0x8005d5 <Speed_Sem+0x1>
    2660:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <xQueueGenericSend>
			vTaskPrioritySet(Set_Speed_Handle,2);
    2664:	62 e0       	ldi	r22, 0x02	; 2
    2666:	80 91 b1 05 	lds	r24, 0x05B1	; 0x8005b1 <Set_Speed_Handle>
    266a:	90 91 b2 05 	lds	r25, 0x05B2	; 0x8005b2 <Set_Speed_Handle+0x1>
    266e:	0e 94 14 0c 	call	0x1828	; 0x1828 <vTaskPrioritySet>
			break;
    2672:	2a c0       	rjmp	.+84     	; 0x26c8 <CMD_RX+0xf2>
			case 'w':
			case 'V':
			case 'v':
			case 'U':
			case 'u':
			xSemaphoreGive(Traffic_Sem);
    2674:	20 e0       	ldi	r18, 0x00	; 0
    2676:	40 e0       	ldi	r20, 0x00	; 0
    2678:	50 e0       	ldi	r21, 0x00	; 0
    267a:	60 e0       	ldi	r22, 0x00	; 0
    267c:	70 e0       	ldi	r23, 0x00	; 0
    267e:	80 91 d6 05 	lds	r24, 0x05D6	; 0x8005d6 <Traffic_Sem>
    2682:	90 91 d7 05 	lds	r25, 0x05D7	; 0x8005d7 <Traffic_Sem+0x1>
    2686:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <xQueueGenericSend>
			vTaskPrioritySet(Traffic_State_Handle,2);
    268a:	62 e0       	ldi	r22, 0x02	; 2
    268c:	80 91 ad 05 	lds	r24, 0x05AD	; 0x8005ad <Traffic_State_Handle>
    2690:	90 91 ae 05 	lds	r25, 0x05AE	; 0x8005ae <Traffic_State_Handle+0x1>
    2694:	0e 94 14 0c 	call	0x1828	; 0x1828 <vTaskPrioritySet>
			break;
    2698:	17 c0       	rjmp	.+46     	; 0x26c8 <CMD_RX+0xf2>
			case 'X':
			case 'x':
			xSemaphoreGive(Turn_Signal_Sem);
    269a:	20 e0       	ldi	r18, 0x00	; 0
    269c:	40 e0       	ldi	r20, 0x00	; 0
    269e:	50 e0       	ldi	r21, 0x00	; 0
    26a0:	60 e0       	ldi	r22, 0x00	; 0
    26a2:	70 e0       	ldi	r23, 0x00	; 0
    26a4:	80 91 d2 05 	lds	r24, 0x05D2	; 0x8005d2 <Turn_Signal_Sem>
    26a8:	90 91 d3 05 	lds	r25, 0x05D3	; 0x8005d3 <Turn_Signal_Sem+0x1>
    26ac:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <xQueueGenericSend>
			vTaskPrioritySet(Turn_Signal_Handle,2);
    26b0:	62 e0       	ldi	r22, 0x02	; 2
    26b2:	80 91 ab 05 	lds	r24, 0x05AB	; 0x8005ab <Turn_Signal_Handle>
    26b6:	90 91 ac 05 	lds	r25, 0x05AC	; 0x8005ac <Turn_Signal_Handle+0x1>
    26ba:	0e 94 14 0c 	call	0x1828	; 0x1828 <vTaskPrioritySet>
			break;
    26be:	04 c0       	rjmp	.+8      	; 0x26c8 <CMD_RX+0xf2>
			default:
			vTaskDelay(10);
    26c0:	8a e0       	ldi	r24, 0x0A	; 10
    26c2:	90 e0       	ldi	r25, 0x00	; 0
    26c4:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <vTaskDelay>
		}
		vTaskDelay(10);
    26c8:	8a e0       	ldi	r24, 0x0A	; 10
    26ca:	90 e0       	ldi	r25, 0x00	; 0
    26cc:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <vTaskDelay>
	}
    26d0:	83 cf       	rjmp	.-250    	; 0x25d8 <CMD_RX+0x2>

000026d2 <Turn_Signal_State>:
//start and stop Turn Signal
void Turn_Signal_State(void *pvparam)
{
	while(1)
	{
		if (xSemaphoreTake(Turn_Signal_Sem,0))
    26d2:	20 e0       	ldi	r18, 0x00	; 0
    26d4:	40 e0       	ldi	r20, 0x00	; 0
    26d6:	50 e0       	ldi	r21, 0x00	; 0
    26d8:	60 e0       	ldi	r22, 0x00	; 0
    26da:	70 e0       	ldi	r23, 0x00	; 0
    26dc:	80 91 d2 05 	lds	r24, 0x05D2	; 0x8005d2 <Turn_Signal_Sem>
    26e0:	90 91 d3 05 	lds	r25, 0x05D3	; 0x8005d3 <Turn_Signal_Sem+0x1>
    26e4:	0e 94 7d 09 	call	0x12fa	; 0x12fa <xQueueGenericReceive>
    26e8:	88 23       	and	r24, r24
    26ea:	59 f0       	breq	.+22     	; 0x2702 <Turn_Signal_State+0x30>
		{
			if (CMD_Data == 'X')
    26ec:	80 91 b7 05 	lds	r24, 0x05B7	; 0x8005b7 <CMD_Data>
    26f0:	88 35       	cpi	r24, 0x58	; 88
    26f2:	19 f4       	brne	.+6      	; 0x26fa <Turn_Signal_State+0x28>
			{
				MCAL_TIMER0_Start();
    26f4:	0e 94 9e 02 	call	0x53c	; 0x53c <MCAL_TIMER0_Start>
    26f8:	04 c0       	rjmp	.+8      	; 0x2702 <Turn_Signal_State+0x30>
			}
			else if(CMD_Data == 'x')
    26fa:	88 37       	cpi	r24, 0x78	; 120
    26fc:	11 f4       	brne	.+4      	; 0x2702 <Turn_Signal_State+0x30>
			{
				MCAL_TIMER0_Stop();
    26fe:	0e 94 97 02 	call	0x52e	; 0x52e <MCAL_TIMER0_Stop>
			}
		}
		vTaskPrioritySet(Turn_Signal_Handle,1);
    2702:	61 e0       	ldi	r22, 0x01	; 1
    2704:	80 91 ab 05 	lds	r24, 0x05AB	; 0x8005ab <Turn_Signal_Handle>
    2708:	90 91 ac 05 	lds	r25, 0x05AC	; 0x8005ac <Turn_Signal_Handle+0x1>
    270c:	0e 94 14 0c 	call	0x1828	; 0x1828 <vTaskPrioritySet>
		vTaskDelay(5);
    2710:	85 e0       	ldi	r24, 0x05	; 5
    2712:	90 e0       	ldi	r25, 0x00	; 0
    2714:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <vTaskDelay>
	}
    2718:	dc cf       	rjmp	.-72     	; 0x26d2 <Turn_Signal_State>

0000271a <Traffic_State>:
//Start and stop sound and light
void Traffic_State(void *pvparam)
{
	while(1)
	{
		if (xSemaphoreTake(Traffic_Sem,0))
    271a:	20 e0       	ldi	r18, 0x00	; 0
    271c:	40 e0       	ldi	r20, 0x00	; 0
    271e:	50 e0       	ldi	r21, 0x00	; 0
    2720:	60 e0       	ldi	r22, 0x00	; 0
    2722:	70 e0       	ldi	r23, 0x00	; 0
    2724:	80 91 d6 05 	lds	r24, 0x05D6	; 0x8005d6 <Traffic_Sem>
    2728:	90 91 d7 05 	lds	r25, 0x05D7	; 0x8005d7 <Traffic_Sem+0x1>
    272c:	0e 94 7d 09 	call	0x12fa	; 0x12fa <xQueueGenericReceive>
    2730:	88 23       	and	r24, r24
    2732:	b9 f1       	breq	.+110    	; 0x27a2 <Traffic_State+0x88>
		{
			if(CMD_Data =='V')
    2734:	80 91 b7 05 	lds	r24, 0x05B7	; 0x8005b7 <CMD_Data>
    2738:	86 35       	cpi	r24, 0x56	; 86
    273a:	39 f4       	brne	.+14     	; 0x274a <Traffic_State+0x30>
			{
				MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_3 , GPIO_PIN_SET) ;
    273c:	41 e0       	ldi	r20, 0x01	; 1
    273e:	68 e0       	ldi	r22, 0x08	; 8
    2740:	83 e3       	ldi	r24, 0x33	; 51
    2742:	90 e0       	ldi	r25, 0x00	; 0
    2744:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2748:	2c c0       	rjmp	.+88     	; 0x27a2 <Traffic_State+0x88>
			}
			else if(CMD_Data =='v')
    274a:	86 37       	cpi	r24, 0x76	; 118
    274c:	39 f4       	brne	.+14     	; 0x275c <Traffic_State+0x42>
			{
				MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_3 , GPIO_PIN_RESET) ;
    274e:	40 e0       	ldi	r20, 0x00	; 0
    2750:	68 e0       	ldi	r22, 0x08	; 8
    2752:	83 e3       	ldi	r24, 0x33	; 51
    2754:	90 e0       	ldi	r25, 0x00	; 0
    2756:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    275a:	23 c0       	rjmp	.+70     	; 0x27a2 <Traffic_State+0x88>
			}
			else if(CMD_Data =='W')
    275c:	87 35       	cpi	r24, 0x57	; 87
    275e:	39 f4       	brne	.+14     	; 0x276e <Traffic_State+0x54>
			{
				MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_1 , GPIO_PIN_SET) ;
    2760:	41 e0       	ldi	r20, 0x01	; 1
    2762:	62 e0       	ldi	r22, 0x02	; 2
    2764:	83 e3       	ldi	r24, 0x33	; 51
    2766:	90 e0       	ldi	r25, 0x00	; 0
    2768:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    276c:	1a c0       	rjmp	.+52     	; 0x27a2 <Traffic_State+0x88>
			}
			else if(CMD_Data =='w')
    276e:	87 37       	cpi	r24, 0x77	; 119
    2770:	39 f4       	brne	.+14     	; 0x2780 <Traffic_State+0x66>
			{
				MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_1 , GPIO_PIN_RESET) ;
    2772:	40 e0       	ldi	r20, 0x00	; 0
    2774:	62 e0       	ldi	r22, 0x02	; 2
    2776:	83 e3       	ldi	r24, 0x33	; 51
    2778:	90 e0       	ldi	r25, 0x00	; 0
    277a:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    277e:	11 c0       	rjmp	.+34     	; 0x27a2 <Traffic_State+0x88>
			}
			else if(CMD_Data =='U')
    2780:	85 35       	cpi	r24, 0x55	; 85
    2782:	39 f4       	brne	.+14     	; 0x2792 <Traffic_State+0x78>
			{
				MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_2 , GPIO_PIN_SET) ;
    2784:	41 e0       	ldi	r20, 0x01	; 1
    2786:	64 e0       	ldi	r22, 0x04	; 4
    2788:	83 e3       	ldi	r24, 0x33	; 51
    278a:	90 e0       	ldi	r25, 0x00	; 0
    278c:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
    2790:	08 c0       	rjmp	.+16     	; 0x27a2 <Traffic_State+0x88>
			}
			else if(CMD_Data =='u')
    2792:	85 37       	cpi	r24, 0x75	; 117
    2794:	31 f4       	brne	.+12     	; 0x27a2 <Traffic_State+0x88>
			{
				MCAL_GPIO_WritePin(GPIOC , GPIO_PIN_2 , GPIO_PIN_RESET) ;
    2796:	40 e0       	ldi	r20, 0x00	; 0
    2798:	64 e0       	ldi	r22, 0x04	; 4
    279a:	83 e3       	ldi	r24, 0x33	; 51
    279c:	90 e0       	ldi	r25, 0x00	; 0
    279e:	0e 94 2f 01 	call	0x25e	; 0x25e <MCAL_GPIO_WritePin>
			else
			{
				//
			}
		}
		vTaskPrioritySet(Traffic_State_Handle,1);
    27a2:	61 e0       	ldi	r22, 0x01	; 1
    27a4:	80 91 ad 05 	lds	r24, 0x05AD	; 0x8005ad <Traffic_State_Handle>
    27a8:	90 91 ae 05 	lds	r25, 0x05AE	; 0x8005ae <Traffic_State_Handle+0x1>
    27ac:	0e 94 14 0c 	call	0x1828	; 0x1828 <vTaskPrioritySet>
		vTaskDelay(5);
    27b0:	85 e0       	ldi	r24, 0x05	; 5
    27b2:	90 e0       	ldi	r25, 0x00	; 0
    27b4:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <vTaskDelay>
	}
    27b8:	b0 cf       	rjmp	.-160    	; 0x271a <Traffic_State>

000027ba <Print_State>:
//print state car forward , back ....
void Print_State(void *pvparam)
{
	while(1)
	{
		if (xSemaphoreTake(LCD_Sem,0))
    27ba:	20 e0       	ldi	r18, 0x00	; 0
    27bc:	40 e0       	ldi	r20, 0x00	; 0
    27be:	50 e0       	ldi	r21, 0x00	; 0
    27c0:	60 e0       	ldi	r22, 0x00	; 0
    27c2:	70 e0       	ldi	r23, 0x00	; 0
    27c4:	80 91 d0 05 	lds	r24, 0x05D0	; 0x8005d0 <LCD_Sem>
    27c8:	90 91 d1 05 	lds	r25, 0x05D1	; 0x8005d1 <LCD_Sem+0x1>
    27cc:	0e 94 7d 09 	call	0x12fa	; 0x12fa <xQueueGenericReceive>
    27d0:	88 23       	and	r24, r24
    27d2:	71 f1       	breq	.+92     	; 0x2830 <Print_State+0x76>
		{
			if(CMD_Data =='B')
    27d4:	80 91 b7 05 	lds	r24, 0x05B7	; 0x8005b7 <CMD_Data>
    27d8:	82 34       	cpi	r24, 0x42	; 66
    27da:	39 f4       	brne	.+14     	; 0x27ea <Print_State+0x30>
			{
				lcd_Clear();
    27dc:	0e 94 1a 12 	call	0x2434	; 0x2434 <lcd_Clear>
				LCD_String("BACK");
    27e0:	82 e7       	ldi	r24, 0x72	; 114
    27e2:	90 e0       	ldi	r25, 0x00	; 0
    27e4:	0e 94 8f 12 	call	0x251e	; 0x251e <LCD_String>
    27e8:	23 c0       	rjmp	.+70     	; 0x2830 <Print_State+0x76>
			}
			else if(CMD_Data =='F')
    27ea:	86 34       	cpi	r24, 0x46	; 70
    27ec:	39 f4       	brne	.+14     	; 0x27fc <Print_State+0x42>
			{
				lcd_Clear();
    27ee:	0e 94 1a 12 	call	0x2434	; 0x2434 <lcd_Clear>
				LCD_String("FORWARD");
    27f2:	87 e7       	ldi	r24, 0x77	; 119
    27f4:	90 e0       	ldi	r25, 0x00	; 0
    27f6:	0e 94 8f 12 	call	0x251e	; 0x251e <LCD_String>
    27fa:	1a c0       	rjmp	.+52     	; 0x2830 <Print_State+0x76>
			}
			else if(CMD_Data =='R')
    27fc:	82 35       	cpi	r24, 0x52	; 82
    27fe:	39 f4       	brne	.+14     	; 0x280e <Print_State+0x54>
			{
				lcd_Clear();
    2800:	0e 94 1a 12 	call	0x2434	; 0x2434 <lcd_Clear>
				LCD_String("RIGHT");
    2804:	8f e7       	ldi	r24, 0x7F	; 127
    2806:	90 e0       	ldi	r25, 0x00	; 0
    2808:	0e 94 8f 12 	call	0x251e	; 0x251e <LCD_String>
    280c:	11 c0       	rjmp	.+34     	; 0x2830 <Print_State+0x76>
			}
			else if(CMD_Data =='L')
    280e:	8c 34       	cpi	r24, 0x4C	; 76
    2810:	39 f4       	brne	.+14     	; 0x2820 <Print_State+0x66>
			{
				lcd_Clear();
    2812:	0e 94 1a 12 	call	0x2434	; 0x2434 <lcd_Clear>
				LCD_String("LIFT");
    2816:	85 e8       	ldi	r24, 0x85	; 133
    2818:	90 e0       	ldi	r25, 0x00	; 0
    281a:	0e 94 8f 12 	call	0x251e	; 0x251e <LCD_String>
    281e:	08 c0       	rjmp	.+16     	; 0x2830 <Print_State+0x76>
			}
			else if(CMD_Data =='S')
    2820:	83 35       	cpi	r24, 0x53	; 83
    2822:	31 f4       	brne	.+12     	; 0x2830 <Print_State+0x76>
			{
				lcd_Clear();
    2824:	0e 94 1a 12 	call	0x2434	; 0x2434 <lcd_Clear>
				LCD_String("STOP");
    2828:	8a e8       	ldi	r24, 0x8A	; 138
    282a:	90 e0       	ldi	r25, 0x00	; 0
    282c:	0e 94 8f 12 	call	0x251e	; 0x251e <LCD_String>
			}
		}
		vTaskPrioritySet(Print_State_Handle,1);
    2830:	61 e0       	ldi	r22, 0x01	; 1
    2832:	80 91 af 05 	lds	r24, 0x05AF	; 0x8005af <Print_State_Handle>
    2836:	90 91 b0 05 	lds	r25, 0x05B0	; 0x8005b0 <Print_State_Handle+0x1>
    283a:	0e 94 14 0c 	call	0x1828	; 0x1828 <vTaskPrioritySet>
		vTaskDelay(5);
    283e:	85 e0       	ldi	r24, 0x05	; 5
    2840:	90 e0       	ldi	r25, 0x00	; 0
    2842:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <vTaskDelay>
	}
    2846:	b9 cf       	rjmp	.-142    	; 0x27ba <Print_State>

00002848 <Set_Speed>:
void Set_Speed(void *pvparam)
{
	uint8_t speed;
	while(1)
	{
		speed=CMD_Data-'0';
    2848:	80 91 b7 05 	lds	r24, 0x05B7	; 0x8005b7 <CMD_Data>
    284c:	c0 ed       	ldi	r28, 0xD0	; 208
    284e:	c8 0f       	add	r28, r24
		if (xSemaphoreTake(Speed_Sem,0))
    2850:	20 e0       	ldi	r18, 0x00	; 0
    2852:	40 e0       	ldi	r20, 0x00	; 0
    2854:	50 e0       	ldi	r21, 0x00	; 0
    2856:	60 e0       	ldi	r22, 0x00	; 0
    2858:	70 e0       	ldi	r23, 0x00	; 0
    285a:	80 91 d4 05 	lds	r24, 0x05D4	; 0x8005d4 <Speed_Sem>
    285e:	90 91 d5 05 	lds	r25, 0x05D5	; 0x8005d5 <Speed_Sem+0x1>
    2862:	0e 94 7d 09 	call	0x12fa	; 0x12fa <xQueueGenericReceive>
    2866:	88 23       	and	r24, r24
    2868:	39 f0       	breq	.+14     	; 0x2878 <Set_Speed+0x30>
		{
			SEG_Display(speed);
    286a:	8c 2f       	mov	r24, r28
    286c:	90 e0       	ldi	r25, 0x00	; 0
    286e:	0e 94 32 10 	call	0x2064	; 0x2064 <SEG_Display>
			MOTOR_Speed(speed);
    2872:	8c 2f       	mov	r24, r28
    2874:	0e 94 70 10 	call	0x20e0	; 0x20e0 <MOTOR_Speed>
		}
		vTaskPrioritySet(Set_Speed_Handle,1);
    2878:	61 e0       	ldi	r22, 0x01	; 1
    287a:	80 91 b1 05 	lds	r24, 0x05B1	; 0x8005b1 <Set_Speed_Handle>
    287e:	90 91 b2 05 	lds	r25, 0x05B2	; 0x8005b2 <Set_Speed_Handle+0x1>
    2882:	0e 94 14 0c 	call	0x1828	; 0x1828 <vTaskPrioritySet>
		vTaskDelay(7);
    2886:	87 e0       	ldi	r24, 0x07	; 7
    2888:	90 e0       	ldi	r25, 0x00	; 0
    288a:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <vTaskDelay>
	}
    288e:	dc cf       	rjmp	.-72     	; 0x2848 <Set_Speed>

00002890 <Moter_State>:
//Set the direction of a car
void Moter_State(void *pvparam)
{
	while(1)
	{
		if (xSemaphoreTake(MOTOR_Sem,0))
    2890:	20 e0       	ldi	r18, 0x00	; 0
    2892:	40 e0       	ldi	r20, 0x00	; 0
    2894:	50 e0       	ldi	r21, 0x00	; 0
    2896:	60 e0       	ldi	r22, 0x00	; 0
    2898:	70 e0       	ldi	r23, 0x00	; 0
    289a:	80 91 ce 05 	lds	r24, 0x05CE	; 0x8005ce <MOTOR_Sem>
    289e:	90 91 cf 05 	lds	r25, 0x05CF	; 0x8005cf <MOTOR_Sem+0x1>
    28a2:	0e 94 7d 09 	call	0x12fa	; 0x12fa <xQueueGenericReceive>
    28a6:	88 23       	and	r24, r24
    28a8:	79 f1       	breq	.+94     	; 0x2908 <Moter_State+0x78>
		{
			if(CMD_Data =='B')
    28aa:	80 91 b7 05 	lds	r24, 0x05B7	; 0x8005b7 <CMD_Data>
    28ae:	82 34       	cpi	r24, 0x42	; 66
    28b0:	19 f4       	brne	.+6      	; 0x28b8 <Moter_State+0x28>
			{
				MOTOR_Back();
    28b2:	0e 94 e0 10 	call	0x21c0	; 0x21c0 <MOTOR_Back>
    28b6:	28 c0       	rjmp	.+80     	; 0x2908 <Moter_State+0x78>
			}
			else if(CMD_Data =='F')
    28b8:	86 34       	cpi	r24, 0x46	; 70
    28ba:	19 f4       	brne	.+6      	; 0x28c2 <Moter_State+0x32>
			{
				MOTOR_Forward();
    28bc:	0e 94 c7 10 	call	0x218e	; 0x218e <MOTOR_Forward>
    28c0:	23 c0       	rjmp	.+70     	; 0x2908 <Moter_State+0x78>
			}
			else if(CMD_Data =='R')
    28c2:	82 35       	cpi	r24, 0x52	; 82
    28c4:	51 f4       	brne	.+20     	; 0x28da <Moter_State+0x4a>
			{
				MOTOR_Speed(1);
    28c6:	81 e0       	ldi	r24, 0x01	; 1
    28c8:	0e 94 70 10 	call	0x20e0	; 0x20e0 <MOTOR_Speed>
				SEG_Display(1);
    28cc:	81 e0       	ldi	r24, 0x01	; 1
    28ce:	90 e0       	ldi	r25, 0x00	; 0
    28d0:	0e 94 32 10 	call	0x2064	; 0x2064 <SEG_Display>
				MOTOR_Right();
    28d4:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <MOTOR_Right>
    28d8:	17 c0       	rjmp	.+46     	; 0x2908 <Moter_State+0x78>
			}
			else if(CMD_Data =='L')
    28da:	8c 34       	cpi	r24, 0x4C	; 76
    28dc:	51 f4       	brne	.+20     	; 0x28f2 <Moter_State+0x62>
			{
				MOTOR_Speed(1);
    28de:	81 e0       	ldi	r24, 0x01	; 1
    28e0:	0e 94 70 10 	call	0x20e0	; 0x20e0 <MOTOR_Speed>
				SEG_Display(1);
    28e4:	81 e0       	ldi	r24, 0x01	; 1
    28e6:	90 e0       	ldi	r25, 0x00	; 0
    28e8:	0e 94 32 10 	call	0x2064	; 0x2064 <SEG_Display>
				MOTOR_Left();
    28ec:	0e 94 95 10 	call	0x212a	; 0x212a <MOTOR_Left>
    28f0:	0b c0       	rjmp	.+22     	; 0x2908 <Moter_State+0x78>
			}
			else if(CMD_Data =='S')
    28f2:	83 35       	cpi	r24, 0x53	; 83
    28f4:	49 f4       	brne	.+18     	; 0x2908 <Moter_State+0x78>
			{
				MOTOR_Speed(0);
    28f6:	80 e0       	ldi	r24, 0x00	; 0
    28f8:	0e 94 70 10 	call	0x20e0	; 0x20e0 <MOTOR_Speed>
				SEG_Display(0);
    28fc:	80 e0       	ldi	r24, 0x00	; 0
    28fe:	90 e0       	ldi	r25, 0x00	; 0
    2900:	0e 94 32 10 	call	0x2064	; 0x2064 <SEG_Display>
				MOTOR_Stop();
    2904:	0e 94 ae 10 	call	0x215c	; 0x215c <MOTOR_Stop>
			}
		}
		vTaskPrioritySet(MOTOR_State_Handle,1);
    2908:	61 e0       	ldi	r22, 0x01	; 1
    290a:	80 91 b3 05 	lds	r24, 0x05B3	; 0x8005b3 <MOTOR_State_Handle>
    290e:	90 91 b4 05 	lds	r25, 0x05B4	; 0x8005b4 <MOTOR_State_Handle+0x1>
    2912:	0e 94 14 0c 	call	0x1828	; 0x1828 <vTaskPrioritySet>
		vTaskDelay(5);
    2916:	85 e0       	ldi	r24, 0x05	; 5
    2918:	90 e0       	ldi	r25, 0x00	; 0
    291a:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <vTaskDelay>
	}
    291e:	b8 cf       	rjmp	.-144    	; 0x2890 <Moter_State>

00002920 <GPIO_Init>:
TaskHandle_t Turn_Signal_Handle=NULL;
/*********************************************************************************
***********************************service functions******************************
*********************************************************************************/
void GPIO_Init(void)
{
    2920:	0f 93       	push	r16
    2922:	1f 93       	push	r17
    2924:	cf 93       	push	r28
    2926:	df 93       	push	r29
    2928:	00 d0       	rcall	.+0      	; 0x292a <GPIO_Init+0xa>
    292a:	cd b7       	in	r28, 0x3d	; 61
    292c:	de b7       	in	r29, 0x3e	; 62
	GPIO_Pinconfig_t GPIO_Conf ;
	//Front Light Pin
	GPIO_Conf.pinNumber = GPIO_PIN_1 ;
    292e:	82 e0       	ldi	r24, 0x02	; 2
    2930:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    2932:	13 e0       	ldi	r17, 0x03	; 3
    2934:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;
    2936:	be 01       	movw	r22, r28
    2938:	6f 5f       	subi	r22, 0xFF	; 255
    293a:	7f 4f       	sbci	r23, 0xFF	; 255
    293c:	83 e3       	ldi	r24, 0x33	; 51
    293e:	90 e0       	ldi	r25, 0x00	; 0
    2940:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
	//Back Light Pin
	GPIO_Conf.pinNumber = GPIO_PIN_2 ;
    2944:	84 e0       	ldi	r24, 0x04	; 4
    2946:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    2948:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;
    294a:	be 01       	movw	r22, r28
    294c:	6f 5f       	subi	r22, 0xFF	; 255
    294e:	7f 4f       	sbci	r23, 0xFF	; 255
    2950:	83 e3       	ldi	r24, 0x33	; 51
    2952:	90 e0       	ldi	r25, 0x00	; 0
    2954:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
	//Buzzer Pin
	GPIO_Conf.pinNumber = GPIO_PIN_3 ;
    2958:	88 e0       	ldi	r24, 0x08	; 8
    295a:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    295c:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;
    295e:	be 01       	movw	r22, r28
    2960:	6f 5f       	subi	r22, 0xFF	; 255
    2962:	7f 4f       	sbci	r23, 0xFF	; 255
    2964:	83 e3       	ldi	r24, 0x33	; 51
    2966:	90 e0       	ldi	r25, 0x00	; 0
    2968:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
	//L298 MOTOR DRIVER Pin
	GPIO_Conf.pinNumber = GPIO_PIN_4 ;
    296c:	00 e1       	ldi	r16, 0x10	; 16
    296e:	09 83       	std	Y+1, r16	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    2970:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;
    2972:	be 01       	movw	r22, r28
    2974:	6f 5f       	subi	r22, 0xFF	; 255
    2976:	7f 4f       	sbci	r23, 0xFF	; 255
    2978:	83 e3       	ldi	r24, 0x33	; 51
    297a:	90 e0       	ldi	r25, 0x00	; 0
    297c:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_5 ;
    2980:	80 e2       	ldi	r24, 0x20	; 32
    2982:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    2984:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;
    2986:	be 01       	movw	r22, r28
    2988:	6f 5f       	subi	r22, 0xFF	; 255
    298a:	7f 4f       	sbci	r23, 0xFF	; 255
    298c:	83 e3       	ldi	r24, 0x33	; 51
    298e:	90 e0       	ldi	r25, 0x00	; 0
    2990:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_6 ;
    2994:	80 e4       	ldi	r24, 0x40	; 64
    2996:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    2998:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;
    299a:	be 01       	movw	r22, r28
    299c:	6f 5f       	subi	r22, 0xFF	; 255
    299e:	7f 4f       	sbci	r23, 0xFF	; 255
    29a0:	83 e3       	ldi	r24, 0x33	; 51
    29a2:	90 e0       	ldi	r25, 0x00	; 0
    29a4:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
	
	GPIO_Conf.pinNumber = GPIO_PIN_7 ;
    29a8:	80 e8       	ldi	r24, 0x80	; 128
    29aa:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Conf.GPIO_MODE =  GPIO_MODE_OUTPUT ;
    29ac:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOC , &GPIO_Conf ) ;
    29ae:	be 01       	movw	r22, r28
    29b0:	6f 5f       	subi	r22, 0xFF	; 255
    29b2:	7f 4f       	sbci	r23, 0xFF	; 255
    29b4:	83 e3       	ldi	r24, 0x33	; 51
    29b6:	90 e0       	ldi	r25, 0x00	; 0
    29b8:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
	//PWM Pin For DC Motor
	GPIO_Conf.pinNumber = GPIO_PIN_4 ;
    29bc:	09 83       	std	Y+1, r16	; 0x01
	GPIO_Conf.GPIO_MODE = GPIO_MODE_OUTPUT ;
    29be:	1a 83       	std	Y+2, r17	; 0x02
	MCAL_GPIO_Init(GPIOD , &GPIO_Conf ) ;
    29c0:	be 01       	movw	r22, r28
    29c2:	6f 5f       	subi	r22, 0xFF	; 255
    29c4:	7f 4f       	sbci	r23, 0xFF	; 255
    29c6:	80 e3       	ldi	r24, 0x30	; 48
    29c8:	90 e0       	ldi	r25, 0x00	; 0
    29ca:	0e 94 07 01 	call	0x20e	; 0x20e <MCAL_GPIO_Init>
}
    29ce:	0f 90       	pop	r0
    29d0:	0f 90       	pop	r0
    29d2:	df 91       	pop	r29
    29d4:	cf 91       	pop	r28
    29d6:	1f 91       	pop	r17
    29d8:	0f 91       	pop	r16
    29da:	08 95       	ret

000029dc <Timer0_init>:
//init Timer zero to Turn_Signal
void Timer0_init(void)
{
    29dc:	cf 93       	push	r28
    29de:	df 93       	push	r29
    29e0:	cd b7       	in	r28, 0x3d	; 61
    29e2:	de b7       	in	r29, 0x3e	; 62
    29e4:	2a 97       	sbiw	r28, 0x0a	; 10
    29e6:	0f b6       	in	r0, 0x3f	; 63
    29e8:	f8 94       	cli
    29ea:	de bf       	out	0x3e, r29	; 62
    29ec:	0f be       	out	0x3f, r0	; 63
    29ee:	cd bf       	out	0x3d, r28	; 61
	TIMER0_config_t conf;
	conf.Timer0_Mode=TIMER0_MODE_CTC;
    29f0:	80 e4       	ldi	r24, 0x40	; 64
    29f2:	89 83       	std	Y+1, r24	; 0x01
	conf.TOIE0_EN=TIMER0_TOIE0_ENABLE_Disable;
    29f4:	1d 82       	std	Y+5, r1	; 0x05
	conf.OCIE0_EN=TIMER0_OCIE0_ENABLE_Disable;
    29f6:	1c 82       	std	Y+4, r1	; 0x04
	conf.P_TOIE0_CALL=NULL;
    29f8:	18 86       	std	Y+8, r1	; 0x08
    29fa:	1f 82       	std	Y+7, r1	; 0x07
	conf.P_OCIE0_CALL=NULL;
    29fc:	1a 86       	std	Y+10, r1	; 0x0a
    29fe:	19 86       	std	Y+9, r1	; 0x09
	conf.Output_Compare_pin=TIMER0_Output_Compare_pin_Toggle;
    2a00:	80 e1       	ldi	r24, 0x10	; 16
    2a02:	8a 83       	std	Y+2, r24	; 0x02
	conf.Compare_Value=255;
    2a04:	8f ef       	ldi	r24, 0xFF	; 255
    2a06:	8e 83       	std	Y+6, r24	; 0x06
	conf.Clock_Source=TIMER0_Clock_Source_clk_1024;
    2a08:	85 e0       	ldi	r24, 0x05	; 5
    2a0a:	8b 83       	std	Y+3, r24	; 0x03
	MCAL_TIMER0_Init(&conf);
    2a0c:	ce 01       	movw	r24, r28
    2a0e:	01 96       	adiw	r24, 0x01	; 1
    2a10:	0e 94 42 02 	call	0x484	; 0x484 <MCAL_TIMER0_Init>
	MCAL_TIMER0_Stop();
    2a14:	0e 94 97 02 	call	0x52e	; 0x52e <MCAL_TIMER0_Stop>
}
    2a18:	2a 96       	adiw	r28, 0x0a	; 10
    2a1a:	0f b6       	in	r0, 0x3f	; 63
    2a1c:	f8 94       	cli
    2a1e:	de bf       	out	0x3e, r29	; 62
    2a20:	0f be       	out	0x3f, r0	; 63
    2a22:	cd bf       	out	0x3d, r28	; 61
    2a24:	df 91       	pop	r29
    2a26:	cf 91       	pop	r28
    2a28:	08 95       	ret

00002a2a <Task_init>:
//Create  all the Tasks and semaphore 
void Task_init(void)
{
    2a2a:	ef 92       	push	r14
    2a2c:	ff 92       	push	r15
    2a2e:	0f 93       	push	r16
	//init pins
	GPIO_Init();
    2a30:	0e 94 90 14 	call	0x2920	; 0x2920 <GPIO_Init>
	//timer0 init to Traffic signal lights
	Timer0_init();
    2a34:	0e 94 ee 14 	call	0x29dc	; 0x29dc <Timer0_init>
	//init 7 segment
	SEG_Init();
    2a38:	0e 94 df 0f 	call	0x1fbe	; 0x1fbe <SEG_Init>
	//lcd init
	LCD_init();
    2a3c:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <LCD_init>
	//DC MOTOR Init
	MOTOR_Init();
    2a40:	0e 94 3c 10 	call	0x2078	; 0x2078 <MOTOR_Init>
	//Set speed 1
	MOTOR_Speed(1);
    2a44:	81 e0       	ldi	r24, 0x01	; 1
    2a46:	0e 94 70 10 	call	0x20e0	; 0x20e0 <MOTOR_Speed>
	//Bluetooth module init
	Bluetooth_Init( INT_Disable);
    2a4a:	81 e0       	ldi	r24, 0x01	; 1
    2a4c:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <Bluetooth_Init>
	//Create Tasks
	xTaskCreate(CMD_RX,"CMD RX FROM Bluetooth Module",64,NULL,2,Bluetooth_RX_Handle);
    2a50:	e0 90 b5 05 	lds	r14, 0x05B5	; 0x8005b5 <Bluetooth_RX_Handle>
    2a54:	f0 90 b6 05 	lds	r15, 0x05B6	; 0x8005b6 <Bluetooth_RX_Handle+0x1>
    2a58:	02 e0       	ldi	r16, 0x02	; 2
    2a5a:	20 e0       	ldi	r18, 0x00	; 0
    2a5c:	30 e0       	ldi	r19, 0x00	; 0
    2a5e:	40 e4       	ldi	r20, 0x40	; 64
    2a60:	50 e0       	ldi	r21, 0x00	; 0
    2a62:	6f e8       	ldi	r22, 0x8F	; 143
    2a64:	70 e0       	ldi	r23, 0x00	; 0
    2a66:	8b ee       	ldi	r24, 0xEB	; 235
    2a68:	92 e1       	ldi	r25, 0x12	; 18
    2a6a:	0e 94 c0 0b 	call	0x1780	; 0x1780 <xTaskCreate>
	xTaskCreate(Moter_State,"Moter_States",64,NULL,1,MOTOR_State_Handle);
    2a6e:	e0 90 b3 05 	lds	r14, 0x05B3	; 0x8005b3 <MOTOR_State_Handle>
    2a72:	f0 90 b4 05 	lds	r15, 0x05B4	; 0x8005b4 <MOTOR_State_Handle+0x1>
    2a76:	01 e0       	ldi	r16, 0x01	; 1
    2a78:	20 e0       	ldi	r18, 0x00	; 0
    2a7a:	30 e0       	ldi	r19, 0x00	; 0
    2a7c:	40 e4       	ldi	r20, 0x40	; 64
    2a7e:	50 e0       	ldi	r21, 0x00	; 0
    2a80:	6c ea       	ldi	r22, 0xAC	; 172
    2a82:	70 e0       	ldi	r23, 0x00	; 0
    2a84:	88 e4       	ldi	r24, 0x48	; 72
    2a86:	94 e1       	ldi	r25, 0x14	; 20
    2a88:	0e 94 c0 0b 	call	0x1780	; 0x1780 <xTaskCreate>
	xTaskCreate(Set_Speed,"Moter_Speed",64,NULL,1,Set_Speed_Handle);
    2a8c:	e0 90 b1 05 	lds	r14, 0x05B1	; 0x8005b1 <Set_Speed_Handle>
    2a90:	f0 90 b2 05 	lds	r15, 0x05B2	; 0x8005b2 <Set_Speed_Handle+0x1>
    2a94:	20 e0       	ldi	r18, 0x00	; 0
    2a96:	30 e0       	ldi	r19, 0x00	; 0
    2a98:	40 e4       	ldi	r20, 0x40	; 64
    2a9a:	50 e0       	ldi	r21, 0x00	; 0
    2a9c:	69 eb       	ldi	r22, 0xB9	; 185
    2a9e:	70 e0       	ldi	r23, 0x00	; 0
    2aa0:	84 e2       	ldi	r24, 0x24	; 36
    2aa2:	94 e1       	ldi	r25, 0x14	; 20
    2aa4:	0e 94 c0 0b 	call	0x1780	; 0x1780 <xTaskCreate>
	xTaskCreate(Print_State,"Print State on LCD",64,NULL,1,Print_State_Handle);
    2aa8:	e0 90 af 05 	lds	r14, 0x05AF	; 0x8005af <Print_State_Handle>
    2aac:	f0 90 b0 05 	lds	r15, 0x05B0	; 0x8005b0 <Print_State_Handle+0x1>
    2ab0:	20 e0       	ldi	r18, 0x00	; 0
    2ab2:	30 e0       	ldi	r19, 0x00	; 0
    2ab4:	40 e4       	ldi	r20, 0x40	; 64
    2ab6:	50 e0       	ldi	r21, 0x00	; 0
    2ab8:	65 ec       	ldi	r22, 0xC5	; 197
    2aba:	70 e0       	ldi	r23, 0x00	; 0
    2abc:	8d ed       	ldi	r24, 0xDD	; 221
    2abe:	93 e1       	ldi	r25, 0x13	; 19
    2ac0:	0e 94 c0 0b 	call	0x1780	; 0x1780 <xTaskCreate>
	xTaskCreate(Traffic_State,"Traffic_State Sound and lights",64,NULL,1,Traffic_State_Handle);
    2ac4:	e0 90 ad 05 	lds	r14, 0x05AD	; 0x8005ad <Traffic_State_Handle>
    2ac8:	f0 90 ae 05 	lds	r15, 0x05AE	; 0x8005ae <Traffic_State_Handle+0x1>
    2acc:	20 e0       	ldi	r18, 0x00	; 0
    2ace:	30 e0       	ldi	r19, 0x00	; 0
    2ad0:	40 e4       	ldi	r20, 0x40	; 64
    2ad2:	50 e0       	ldi	r21, 0x00	; 0
    2ad4:	68 ed       	ldi	r22, 0xD8	; 216
    2ad6:	70 e0       	ldi	r23, 0x00	; 0
    2ad8:	8d e8       	ldi	r24, 0x8D	; 141
    2ada:	93 e1       	ldi	r25, 0x13	; 19
    2adc:	0e 94 c0 0b 	call	0x1780	; 0x1780 <xTaskCreate>
	xTaskCreate(Turn_Signal_State,"Traffic signal lights",64,NULL,1,Turn_Signal_Handle);
    2ae0:	e0 90 ab 05 	lds	r14, 0x05AB	; 0x8005ab <Turn_Signal_Handle>
    2ae4:	f0 90 ac 05 	lds	r15, 0x05AC	; 0x8005ac <Turn_Signal_Handle+0x1>
    2ae8:	20 e0       	ldi	r18, 0x00	; 0
    2aea:	30 e0       	ldi	r19, 0x00	; 0
    2aec:	40 e4       	ldi	r20, 0x40	; 64
    2aee:	50 e0       	ldi	r21, 0x00	; 0
    2af0:	67 ef       	ldi	r22, 0xF7	; 247
    2af2:	70 e0       	ldi	r23, 0x00	; 0
    2af4:	89 e6       	ldi	r24, 0x69	; 105
    2af6:	93 e1       	ldi	r25, 0x13	; 19
    2af8:	0e 94 c0 0b 	call	0x1780	; 0x1780 <xTaskCreate>
	//Create Semaphore
	MOTOR_Sem=xSemaphoreCreateBinary();
    2afc:	43 e0       	ldi	r20, 0x03	; 3
    2afe:	60 e0       	ldi	r22, 0x00	; 0
    2b00:	81 e0       	ldi	r24, 0x01	; 1
    2b02:	0e 94 c1 08 	call	0x1182	; 0x1182 <xQueueGenericCreate>
    2b06:	90 93 cf 05 	sts	0x05CF, r25	; 0x8005cf <MOTOR_Sem+0x1>
    2b0a:	80 93 ce 05 	sts	0x05CE, r24	; 0x8005ce <MOTOR_Sem>
	Speed_Sem=xSemaphoreCreateBinary();
    2b0e:	43 e0       	ldi	r20, 0x03	; 3
    2b10:	60 e0       	ldi	r22, 0x00	; 0
    2b12:	81 e0       	ldi	r24, 0x01	; 1
    2b14:	0e 94 c1 08 	call	0x1182	; 0x1182 <xQueueGenericCreate>
    2b18:	90 93 d5 05 	sts	0x05D5, r25	; 0x8005d5 <Speed_Sem+0x1>
    2b1c:	80 93 d4 05 	sts	0x05D4, r24	; 0x8005d4 <Speed_Sem>
	LCD_Sem=xSemaphoreCreateBinary();
    2b20:	43 e0       	ldi	r20, 0x03	; 3
    2b22:	60 e0       	ldi	r22, 0x00	; 0
    2b24:	81 e0       	ldi	r24, 0x01	; 1
    2b26:	0e 94 c1 08 	call	0x1182	; 0x1182 <xQueueGenericCreate>
    2b2a:	90 93 d1 05 	sts	0x05D1, r25	; 0x8005d1 <LCD_Sem+0x1>
    2b2e:	80 93 d0 05 	sts	0x05D0, r24	; 0x8005d0 <LCD_Sem>
	Traffic_Sem=xSemaphoreCreateBinary();
    2b32:	43 e0       	ldi	r20, 0x03	; 3
    2b34:	60 e0       	ldi	r22, 0x00	; 0
    2b36:	81 e0       	ldi	r24, 0x01	; 1
    2b38:	0e 94 c1 08 	call	0x1182	; 0x1182 <xQueueGenericCreate>
    2b3c:	90 93 d7 05 	sts	0x05D7, r25	; 0x8005d7 <Traffic_Sem+0x1>
    2b40:	80 93 d6 05 	sts	0x05D6, r24	; 0x8005d6 <Traffic_Sem>
	Turn_Signal_Sem=xSemaphoreCreateBinary();
    2b44:	43 e0       	ldi	r20, 0x03	; 3
    2b46:	60 e0       	ldi	r22, 0x00	; 0
    2b48:	81 e0       	ldi	r24, 0x01	; 1
    2b4a:	0e 94 c1 08 	call	0x1182	; 0x1182 <xQueueGenericCreate>
    2b4e:	90 93 d3 05 	sts	0x05D3, r25	; 0x8005d3 <Turn_Signal_Sem+0x1>
    2b52:	80 93 d2 05 	sts	0x05D2, r24	; 0x8005d2 <Turn_Signal_Sem>
}
    2b56:	0f 91       	pop	r16
    2b58:	ff 90       	pop	r15
    2b5a:	ef 90       	pop	r14
    2b5c:	08 95       	ret

00002b5e <__subsf3>:
    2b5e:	50 58       	subi	r21, 0x80	; 128

00002b60 <__addsf3>:
    2b60:	bb 27       	eor	r27, r27
    2b62:	aa 27       	eor	r26, r26
    2b64:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__addsf3x>
    2b68:	0c 94 11 17 	jmp	0x2e22	; 0x2e22 <__fp_round>
    2b6c:	0e 94 03 17 	call	0x2e06	; 0x2e06 <__fp_pscA>
    2b70:	38 f0       	brcs	.+14     	; 0x2b80 <__addsf3+0x20>
    2b72:	0e 94 0a 17 	call	0x2e14	; 0x2e14 <__fp_pscB>
    2b76:	20 f0       	brcs	.+8      	; 0x2b80 <__addsf3+0x20>
    2b78:	39 f4       	brne	.+14     	; 0x2b88 <__addsf3+0x28>
    2b7a:	9f 3f       	cpi	r25, 0xFF	; 255
    2b7c:	19 f4       	brne	.+6      	; 0x2b84 <__addsf3+0x24>
    2b7e:	26 f4       	brtc	.+8      	; 0x2b88 <__addsf3+0x28>
    2b80:	0c 94 00 17 	jmp	0x2e00	; 0x2e00 <__fp_nan>
    2b84:	0e f4       	brtc	.+2      	; 0x2b88 <__addsf3+0x28>
    2b86:	e0 95       	com	r30
    2b88:	e7 fb       	bst	r30, 7
    2b8a:	0c 94 fa 16 	jmp	0x2df4	; 0x2df4 <__fp_inf>

00002b8e <__addsf3x>:
    2b8e:	e9 2f       	mov	r30, r25
    2b90:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__fp_split3>
    2b94:	58 f3       	brcs	.-42     	; 0x2b6c <__addsf3+0xc>
    2b96:	ba 17       	cp	r27, r26
    2b98:	62 07       	cpc	r22, r18
    2b9a:	73 07       	cpc	r23, r19
    2b9c:	84 07       	cpc	r24, r20
    2b9e:	95 07       	cpc	r25, r21
    2ba0:	20 f0       	brcs	.+8      	; 0x2baa <__addsf3x+0x1c>
    2ba2:	79 f4       	brne	.+30     	; 0x2bc2 <__addsf3x+0x34>
    2ba4:	a6 f5       	brtc	.+104    	; 0x2c0e <__addsf3x+0x80>
    2ba6:	0c 94 44 17 	jmp	0x2e88	; 0x2e88 <__fp_zero>
    2baa:	0e f4       	brtc	.+2      	; 0x2bae <__addsf3x+0x20>
    2bac:	e0 95       	com	r30
    2bae:	0b 2e       	mov	r0, r27
    2bb0:	ba 2f       	mov	r27, r26
    2bb2:	a0 2d       	mov	r26, r0
    2bb4:	0b 01       	movw	r0, r22
    2bb6:	b9 01       	movw	r22, r18
    2bb8:	90 01       	movw	r18, r0
    2bba:	0c 01       	movw	r0, r24
    2bbc:	ca 01       	movw	r24, r20
    2bbe:	a0 01       	movw	r20, r0
    2bc0:	11 24       	eor	r1, r1
    2bc2:	ff 27       	eor	r31, r31
    2bc4:	59 1b       	sub	r21, r25
    2bc6:	99 f0       	breq	.+38     	; 0x2bee <__addsf3x+0x60>
    2bc8:	59 3f       	cpi	r21, 0xF9	; 249
    2bca:	50 f4       	brcc	.+20     	; 0x2be0 <__addsf3x+0x52>
    2bcc:	50 3e       	cpi	r21, 0xE0	; 224
    2bce:	68 f1       	brcs	.+90     	; 0x2c2a <__addsf3x+0x9c>
    2bd0:	1a 16       	cp	r1, r26
    2bd2:	f0 40       	sbci	r31, 0x00	; 0
    2bd4:	a2 2f       	mov	r26, r18
    2bd6:	23 2f       	mov	r18, r19
    2bd8:	34 2f       	mov	r19, r20
    2bda:	44 27       	eor	r20, r20
    2bdc:	58 5f       	subi	r21, 0xF8	; 248
    2bde:	f3 cf       	rjmp	.-26     	; 0x2bc6 <__addsf3x+0x38>
    2be0:	46 95       	lsr	r20
    2be2:	37 95       	ror	r19
    2be4:	27 95       	ror	r18
    2be6:	a7 95       	ror	r26
    2be8:	f0 40       	sbci	r31, 0x00	; 0
    2bea:	53 95       	inc	r21
    2bec:	c9 f7       	brne	.-14     	; 0x2be0 <__addsf3x+0x52>
    2bee:	7e f4       	brtc	.+30     	; 0x2c0e <__addsf3x+0x80>
    2bf0:	1f 16       	cp	r1, r31
    2bf2:	ba 0b       	sbc	r27, r26
    2bf4:	62 0b       	sbc	r22, r18
    2bf6:	73 0b       	sbc	r23, r19
    2bf8:	84 0b       	sbc	r24, r20
    2bfa:	ba f0       	brmi	.+46     	; 0x2c2a <__addsf3x+0x9c>
    2bfc:	91 50       	subi	r25, 0x01	; 1
    2bfe:	a1 f0       	breq	.+40     	; 0x2c28 <__addsf3x+0x9a>
    2c00:	ff 0f       	add	r31, r31
    2c02:	bb 1f       	adc	r27, r27
    2c04:	66 1f       	adc	r22, r22
    2c06:	77 1f       	adc	r23, r23
    2c08:	88 1f       	adc	r24, r24
    2c0a:	c2 f7       	brpl	.-16     	; 0x2bfc <__addsf3x+0x6e>
    2c0c:	0e c0       	rjmp	.+28     	; 0x2c2a <__addsf3x+0x9c>
    2c0e:	ba 0f       	add	r27, r26
    2c10:	62 1f       	adc	r22, r18
    2c12:	73 1f       	adc	r23, r19
    2c14:	84 1f       	adc	r24, r20
    2c16:	48 f4       	brcc	.+18     	; 0x2c2a <__addsf3x+0x9c>
    2c18:	87 95       	ror	r24
    2c1a:	77 95       	ror	r23
    2c1c:	67 95       	ror	r22
    2c1e:	b7 95       	ror	r27
    2c20:	f7 95       	ror	r31
    2c22:	9e 3f       	cpi	r25, 0xFE	; 254
    2c24:	08 f0       	brcs	.+2      	; 0x2c28 <__addsf3x+0x9a>
    2c26:	b0 cf       	rjmp	.-160    	; 0x2b88 <__addsf3+0x28>
    2c28:	93 95       	inc	r25
    2c2a:	88 0f       	add	r24, r24
    2c2c:	08 f0       	brcs	.+2      	; 0x2c30 <__addsf3x+0xa2>
    2c2e:	99 27       	eor	r25, r25
    2c30:	ee 0f       	add	r30, r30
    2c32:	97 95       	ror	r25
    2c34:	87 95       	ror	r24
    2c36:	08 95       	ret

00002c38 <__divsf3>:
    2c38:	0e 94 30 16 	call	0x2c60	; 0x2c60 <__divsf3x>
    2c3c:	0c 94 11 17 	jmp	0x2e22	; 0x2e22 <__fp_round>
    2c40:	0e 94 0a 17 	call	0x2e14	; 0x2e14 <__fp_pscB>
    2c44:	58 f0       	brcs	.+22     	; 0x2c5c <__divsf3+0x24>
    2c46:	0e 94 03 17 	call	0x2e06	; 0x2e06 <__fp_pscA>
    2c4a:	40 f0       	brcs	.+16     	; 0x2c5c <__divsf3+0x24>
    2c4c:	29 f4       	brne	.+10     	; 0x2c58 <__divsf3+0x20>
    2c4e:	5f 3f       	cpi	r21, 0xFF	; 255
    2c50:	29 f0       	breq	.+10     	; 0x2c5c <__divsf3+0x24>
    2c52:	0c 94 fa 16 	jmp	0x2df4	; 0x2df4 <__fp_inf>
    2c56:	51 11       	cpse	r21, r1
    2c58:	0c 94 45 17 	jmp	0x2e8a	; 0x2e8a <__fp_szero>
    2c5c:	0c 94 00 17 	jmp	0x2e00	; 0x2e00 <__fp_nan>

00002c60 <__divsf3x>:
    2c60:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__fp_split3>
    2c64:	68 f3       	brcs	.-38     	; 0x2c40 <__divsf3+0x8>

00002c66 <__divsf3_pse>:
    2c66:	99 23       	and	r25, r25
    2c68:	b1 f3       	breq	.-20     	; 0x2c56 <__divsf3+0x1e>
    2c6a:	55 23       	and	r21, r21
    2c6c:	91 f3       	breq	.-28     	; 0x2c52 <__divsf3+0x1a>
    2c6e:	95 1b       	sub	r25, r21
    2c70:	55 0b       	sbc	r21, r21
    2c72:	bb 27       	eor	r27, r27
    2c74:	aa 27       	eor	r26, r26
    2c76:	62 17       	cp	r22, r18
    2c78:	73 07       	cpc	r23, r19
    2c7a:	84 07       	cpc	r24, r20
    2c7c:	38 f0       	brcs	.+14     	; 0x2c8c <__divsf3_pse+0x26>
    2c7e:	9f 5f       	subi	r25, 0xFF	; 255
    2c80:	5f 4f       	sbci	r21, 0xFF	; 255
    2c82:	22 0f       	add	r18, r18
    2c84:	33 1f       	adc	r19, r19
    2c86:	44 1f       	adc	r20, r20
    2c88:	aa 1f       	adc	r26, r26
    2c8a:	a9 f3       	breq	.-22     	; 0x2c76 <__divsf3_pse+0x10>
    2c8c:	35 d0       	rcall	.+106    	; 0x2cf8 <__divsf3_pse+0x92>
    2c8e:	0e 2e       	mov	r0, r30
    2c90:	3a f0       	brmi	.+14     	; 0x2ca0 <__divsf3_pse+0x3a>
    2c92:	e0 e8       	ldi	r30, 0x80	; 128
    2c94:	32 d0       	rcall	.+100    	; 0x2cfa <__divsf3_pse+0x94>
    2c96:	91 50       	subi	r25, 0x01	; 1
    2c98:	50 40       	sbci	r21, 0x00	; 0
    2c9a:	e6 95       	lsr	r30
    2c9c:	00 1c       	adc	r0, r0
    2c9e:	ca f7       	brpl	.-14     	; 0x2c92 <__divsf3_pse+0x2c>
    2ca0:	2b d0       	rcall	.+86     	; 0x2cf8 <__divsf3_pse+0x92>
    2ca2:	fe 2f       	mov	r31, r30
    2ca4:	29 d0       	rcall	.+82     	; 0x2cf8 <__divsf3_pse+0x92>
    2ca6:	66 0f       	add	r22, r22
    2ca8:	77 1f       	adc	r23, r23
    2caa:	88 1f       	adc	r24, r24
    2cac:	bb 1f       	adc	r27, r27
    2cae:	26 17       	cp	r18, r22
    2cb0:	37 07       	cpc	r19, r23
    2cb2:	48 07       	cpc	r20, r24
    2cb4:	ab 07       	cpc	r26, r27
    2cb6:	b0 e8       	ldi	r27, 0x80	; 128
    2cb8:	09 f0       	breq	.+2      	; 0x2cbc <__divsf3_pse+0x56>
    2cba:	bb 0b       	sbc	r27, r27
    2cbc:	80 2d       	mov	r24, r0
    2cbe:	bf 01       	movw	r22, r30
    2cc0:	ff 27       	eor	r31, r31
    2cc2:	93 58       	subi	r25, 0x83	; 131
    2cc4:	5f 4f       	sbci	r21, 0xFF	; 255
    2cc6:	3a f0       	brmi	.+14     	; 0x2cd6 <__divsf3_pse+0x70>
    2cc8:	9e 3f       	cpi	r25, 0xFE	; 254
    2cca:	51 05       	cpc	r21, r1
    2ccc:	78 f0       	brcs	.+30     	; 0x2cec <__divsf3_pse+0x86>
    2cce:	0c 94 fa 16 	jmp	0x2df4	; 0x2df4 <__fp_inf>
    2cd2:	0c 94 45 17 	jmp	0x2e8a	; 0x2e8a <__fp_szero>
    2cd6:	5f 3f       	cpi	r21, 0xFF	; 255
    2cd8:	e4 f3       	brlt	.-8      	; 0x2cd2 <__divsf3_pse+0x6c>
    2cda:	98 3e       	cpi	r25, 0xE8	; 232
    2cdc:	d4 f3       	brlt	.-12     	; 0x2cd2 <__divsf3_pse+0x6c>
    2cde:	86 95       	lsr	r24
    2ce0:	77 95       	ror	r23
    2ce2:	67 95       	ror	r22
    2ce4:	b7 95       	ror	r27
    2ce6:	f7 95       	ror	r31
    2ce8:	9f 5f       	subi	r25, 0xFF	; 255
    2cea:	c9 f7       	brne	.-14     	; 0x2cde <__divsf3_pse+0x78>
    2cec:	88 0f       	add	r24, r24
    2cee:	91 1d       	adc	r25, r1
    2cf0:	96 95       	lsr	r25
    2cf2:	87 95       	ror	r24
    2cf4:	97 f9       	bld	r25, 7
    2cf6:	08 95       	ret
    2cf8:	e1 e0       	ldi	r30, 0x01	; 1
    2cfa:	66 0f       	add	r22, r22
    2cfc:	77 1f       	adc	r23, r23
    2cfe:	88 1f       	adc	r24, r24
    2d00:	bb 1f       	adc	r27, r27
    2d02:	62 17       	cp	r22, r18
    2d04:	73 07       	cpc	r23, r19
    2d06:	84 07       	cpc	r24, r20
    2d08:	ba 07       	cpc	r27, r26
    2d0a:	20 f0       	brcs	.+8      	; 0x2d14 <__divsf3_pse+0xae>
    2d0c:	62 1b       	sub	r22, r18
    2d0e:	73 0b       	sbc	r23, r19
    2d10:	84 0b       	sbc	r24, r20
    2d12:	ba 0b       	sbc	r27, r26
    2d14:	ee 1f       	adc	r30, r30
    2d16:	88 f7       	brcc	.-30     	; 0x2cfa <__divsf3_pse+0x94>
    2d18:	e0 95       	com	r30
    2d1a:	08 95       	ret

00002d1c <__fixunssfsi>:
    2d1c:	0e 94 2a 17 	call	0x2e54	; 0x2e54 <__fp_splitA>
    2d20:	88 f0       	brcs	.+34     	; 0x2d44 <__fixunssfsi+0x28>
    2d22:	9f 57       	subi	r25, 0x7F	; 127
    2d24:	98 f0       	brcs	.+38     	; 0x2d4c <__fixunssfsi+0x30>
    2d26:	b9 2f       	mov	r27, r25
    2d28:	99 27       	eor	r25, r25
    2d2a:	b7 51       	subi	r27, 0x17	; 23
    2d2c:	b0 f0       	brcs	.+44     	; 0x2d5a <__fixunssfsi+0x3e>
    2d2e:	e1 f0       	breq	.+56     	; 0x2d68 <__fixunssfsi+0x4c>
    2d30:	66 0f       	add	r22, r22
    2d32:	77 1f       	adc	r23, r23
    2d34:	88 1f       	adc	r24, r24
    2d36:	99 1f       	adc	r25, r25
    2d38:	1a f0       	brmi	.+6      	; 0x2d40 <__fixunssfsi+0x24>
    2d3a:	ba 95       	dec	r27
    2d3c:	c9 f7       	brne	.-14     	; 0x2d30 <__fixunssfsi+0x14>
    2d3e:	14 c0       	rjmp	.+40     	; 0x2d68 <__fixunssfsi+0x4c>
    2d40:	b1 30       	cpi	r27, 0x01	; 1
    2d42:	91 f0       	breq	.+36     	; 0x2d68 <__fixunssfsi+0x4c>
    2d44:	0e 94 44 17 	call	0x2e88	; 0x2e88 <__fp_zero>
    2d48:	b1 e0       	ldi	r27, 0x01	; 1
    2d4a:	08 95       	ret
    2d4c:	0c 94 44 17 	jmp	0x2e88	; 0x2e88 <__fp_zero>
    2d50:	67 2f       	mov	r22, r23
    2d52:	78 2f       	mov	r23, r24
    2d54:	88 27       	eor	r24, r24
    2d56:	b8 5f       	subi	r27, 0xF8	; 248
    2d58:	39 f0       	breq	.+14     	; 0x2d68 <__fixunssfsi+0x4c>
    2d5a:	b9 3f       	cpi	r27, 0xF9	; 249
    2d5c:	cc f3       	brlt	.-14     	; 0x2d50 <__fixunssfsi+0x34>
    2d5e:	86 95       	lsr	r24
    2d60:	77 95       	ror	r23
    2d62:	67 95       	ror	r22
    2d64:	b3 95       	inc	r27
    2d66:	d9 f7       	brne	.-10     	; 0x2d5e <__fixunssfsi+0x42>
    2d68:	3e f4       	brtc	.+14     	; 0x2d78 <__fixunssfsi+0x5c>
    2d6a:	90 95       	com	r25
    2d6c:	80 95       	com	r24
    2d6e:	70 95       	com	r23
    2d70:	61 95       	neg	r22
    2d72:	7f 4f       	sbci	r23, 0xFF	; 255
    2d74:	8f 4f       	sbci	r24, 0xFF	; 255
    2d76:	9f 4f       	sbci	r25, 0xFF	; 255
    2d78:	08 95       	ret

00002d7a <__floatunsisf>:
    2d7a:	e8 94       	clt
    2d7c:	09 c0       	rjmp	.+18     	; 0x2d90 <__floatsisf+0x12>

00002d7e <__floatsisf>:
    2d7e:	97 fb       	bst	r25, 7
    2d80:	3e f4       	brtc	.+14     	; 0x2d90 <__floatsisf+0x12>
    2d82:	90 95       	com	r25
    2d84:	80 95       	com	r24
    2d86:	70 95       	com	r23
    2d88:	61 95       	neg	r22
    2d8a:	7f 4f       	sbci	r23, 0xFF	; 255
    2d8c:	8f 4f       	sbci	r24, 0xFF	; 255
    2d8e:	9f 4f       	sbci	r25, 0xFF	; 255
    2d90:	99 23       	and	r25, r25
    2d92:	a9 f0       	breq	.+42     	; 0x2dbe <__floatsisf+0x40>
    2d94:	f9 2f       	mov	r31, r25
    2d96:	96 e9       	ldi	r25, 0x96	; 150
    2d98:	bb 27       	eor	r27, r27
    2d9a:	93 95       	inc	r25
    2d9c:	f6 95       	lsr	r31
    2d9e:	87 95       	ror	r24
    2da0:	77 95       	ror	r23
    2da2:	67 95       	ror	r22
    2da4:	b7 95       	ror	r27
    2da6:	f1 11       	cpse	r31, r1
    2da8:	f8 cf       	rjmp	.-16     	; 0x2d9a <__floatsisf+0x1c>
    2daa:	fa f4       	brpl	.+62     	; 0x2dea <__floatsisf+0x6c>
    2dac:	bb 0f       	add	r27, r27
    2dae:	11 f4       	brne	.+4      	; 0x2db4 <__floatsisf+0x36>
    2db0:	60 ff       	sbrs	r22, 0
    2db2:	1b c0       	rjmp	.+54     	; 0x2dea <__floatsisf+0x6c>
    2db4:	6f 5f       	subi	r22, 0xFF	; 255
    2db6:	7f 4f       	sbci	r23, 0xFF	; 255
    2db8:	8f 4f       	sbci	r24, 0xFF	; 255
    2dba:	9f 4f       	sbci	r25, 0xFF	; 255
    2dbc:	16 c0       	rjmp	.+44     	; 0x2dea <__floatsisf+0x6c>
    2dbe:	88 23       	and	r24, r24
    2dc0:	11 f0       	breq	.+4      	; 0x2dc6 <__floatsisf+0x48>
    2dc2:	96 e9       	ldi	r25, 0x96	; 150
    2dc4:	11 c0       	rjmp	.+34     	; 0x2de8 <__floatsisf+0x6a>
    2dc6:	77 23       	and	r23, r23
    2dc8:	21 f0       	breq	.+8      	; 0x2dd2 <__floatsisf+0x54>
    2dca:	9e e8       	ldi	r25, 0x8E	; 142
    2dcc:	87 2f       	mov	r24, r23
    2dce:	76 2f       	mov	r23, r22
    2dd0:	05 c0       	rjmp	.+10     	; 0x2ddc <__floatsisf+0x5e>
    2dd2:	66 23       	and	r22, r22
    2dd4:	71 f0       	breq	.+28     	; 0x2df2 <__floatsisf+0x74>
    2dd6:	96 e8       	ldi	r25, 0x86	; 134
    2dd8:	86 2f       	mov	r24, r22
    2dda:	70 e0       	ldi	r23, 0x00	; 0
    2ddc:	60 e0       	ldi	r22, 0x00	; 0
    2dde:	2a f0       	brmi	.+10     	; 0x2dea <__floatsisf+0x6c>
    2de0:	9a 95       	dec	r25
    2de2:	66 0f       	add	r22, r22
    2de4:	77 1f       	adc	r23, r23
    2de6:	88 1f       	adc	r24, r24
    2de8:	da f7       	brpl	.-10     	; 0x2de0 <__floatsisf+0x62>
    2dea:	88 0f       	add	r24, r24
    2dec:	96 95       	lsr	r25
    2dee:	87 95       	ror	r24
    2df0:	97 f9       	bld	r25, 7
    2df2:	08 95       	ret

00002df4 <__fp_inf>:
    2df4:	97 f9       	bld	r25, 7
    2df6:	9f 67       	ori	r25, 0x7F	; 127
    2df8:	80 e8       	ldi	r24, 0x80	; 128
    2dfa:	70 e0       	ldi	r23, 0x00	; 0
    2dfc:	60 e0       	ldi	r22, 0x00	; 0
    2dfe:	08 95       	ret

00002e00 <__fp_nan>:
    2e00:	9f ef       	ldi	r25, 0xFF	; 255
    2e02:	80 ec       	ldi	r24, 0xC0	; 192
    2e04:	08 95       	ret

00002e06 <__fp_pscA>:
    2e06:	00 24       	eor	r0, r0
    2e08:	0a 94       	dec	r0
    2e0a:	16 16       	cp	r1, r22
    2e0c:	17 06       	cpc	r1, r23
    2e0e:	18 06       	cpc	r1, r24
    2e10:	09 06       	cpc	r0, r25
    2e12:	08 95       	ret

00002e14 <__fp_pscB>:
    2e14:	00 24       	eor	r0, r0
    2e16:	0a 94       	dec	r0
    2e18:	12 16       	cp	r1, r18
    2e1a:	13 06       	cpc	r1, r19
    2e1c:	14 06       	cpc	r1, r20
    2e1e:	05 06       	cpc	r0, r21
    2e20:	08 95       	ret

00002e22 <__fp_round>:
    2e22:	09 2e       	mov	r0, r25
    2e24:	03 94       	inc	r0
    2e26:	00 0c       	add	r0, r0
    2e28:	11 f4       	brne	.+4      	; 0x2e2e <__fp_round+0xc>
    2e2a:	88 23       	and	r24, r24
    2e2c:	52 f0       	brmi	.+20     	; 0x2e42 <__fp_round+0x20>
    2e2e:	bb 0f       	add	r27, r27
    2e30:	40 f4       	brcc	.+16     	; 0x2e42 <__fp_round+0x20>
    2e32:	bf 2b       	or	r27, r31
    2e34:	11 f4       	brne	.+4      	; 0x2e3a <__fp_round+0x18>
    2e36:	60 ff       	sbrs	r22, 0
    2e38:	04 c0       	rjmp	.+8      	; 0x2e42 <__fp_round+0x20>
    2e3a:	6f 5f       	subi	r22, 0xFF	; 255
    2e3c:	7f 4f       	sbci	r23, 0xFF	; 255
    2e3e:	8f 4f       	sbci	r24, 0xFF	; 255
    2e40:	9f 4f       	sbci	r25, 0xFF	; 255
    2e42:	08 95       	ret

00002e44 <__fp_split3>:
    2e44:	57 fd       	sbrc	r21, 7
    2e46:	90 58       	subi	r25, 0x80	; 128
    2e48:	44 0f       	add	r20, r20
    2e4a:	55 1f       	adc	r21, r21
    2e4c:	59 f0       	breq	.+22     	; 0x2e64 <__fp_splitA+0x10>
    2e4e:	5f 3f       	cpi	r21, 0xFF	; 255
    2e50:	71 f0       	breq	.+28     	; 0x2e6e <__fp_splitA+0x1a>
    2e52:	47 95       	ror	r20

00002e54 <__fp_splitA>:
    2e54:	88 0f       	add	r24, r24
    2e56:	97 fb       	bst	r25, 7
    2e58:	99 1f       	adc	r25, r25
    2e5a:	61 f0       	breq	.+24     	; 0x2e74 <__fp_splitA+0x20>
    2e5c:	9f 3f       	cpi	r25, 0xFF	; 255
    2e5e:	79 f0       	breq	.+30     	; 0x2e7e <__fp_splitA+0x2a>
    2e60:	87 95       	ror	r24
    2e62:	08 95       	ret
    2e64:	12 16       	cp	r1, r18
    2e66:	13 06       	cpc	r1, r19
    2e68:	14 06       	cpc	r1, r20
    2e6a:	55 1f       	adc	r21, r21
    2e6c:	f2 cf       	rjmp	.-28     	; 0x2e52 <__fp_split3+0xe>
    2e6e:	46 95       	lsr	r20
    2e70:	f1 df       	rcall	.-30     	; 0x2e54 <__fp_splitA>
    2e72:	08 c0       	rjmp	.+16     	; 0x2e84 <__fp_splitA+0x30>
    2e74:	16 16       	cp	r1, r22
    2e76:	17 06       	cpc	r1, r23
    2e78:	18 06       	cpc	r1, r24
    2e7a:	99 1f       	adc	r25, r25
    2e7c:	f1 cf       	rjmp	.-30     	; 0x2e60 <__fp_splitA+0xc>
    2e7e:	86 95       	lsr	r24
    2e80:	71 05       	cpc	r23, r1
    2e82:	61 05       	cpc	r22, r1
    2e84:	08 94       	sec
    2e86:	08 95       	ret

00002e88 <__fp_zero>:
    2e88:	e8 94       	clt

00002e8a <__fp_szero>:
    2e8a:	bb 27       	eor	r27, r27
    2e8c:	66 27       	eor	r22, r22
    2e8e:	77 27       	eor	r23, r23
    2e90:	cb 01       	movw	r24, r22
    2e92:	97 f9       	bld	r25, 7
    2e94:	08 95       	ret

00002e96 <__mulsf3>:
    2e96:	0e 94 5e 17 	call	0x2ebc	; 0x2ebc <__mulsf3x>
    2e9a:	0c 94 11 17 	jmp	0x2e22	; 0x2e22 <__fp_round>
    2e9e:	0e 94 03 17 	call	0x2e06	; 0x2e06 <__fp_pscA>
    2ea2:	38 f0       	brcs	.+14     	; 0x2eb2 <__mulsf3+0x1c>
    2ea4:	0e 94 0a 17 	call	0x2e14	; 0x2e14 <__fp_pscB>
    2ea8:	20 f0       	brcs	.+8      	; 0x2eb2 <__mulsf3+0x1c>
    2eaa:	95 23       	and	r25, r21
    2eac:	11 f0       	breq	.+4      	; 0x2eb2 <__mulsf3+0x1c>
    2eae:	0c 94 fa 16 	jmp	0x2df4	; 0x2df4 <__fp_inf>
    2eb2:	0c 94 00 17 	jmp	0x2e00	; 0x2e00 <__fp_nan>
    2eb6:	11 24       	eor	r1, r1
    2eb8:	0c 94 45 17 	jmp	0x2e8a	; 0x2e8a <__fp_szero>

00002ebc <__mulsf3x>:
    2ebc:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__fp_split3>
    2ec0:	70 f3       	brcs	.-36     	; 0x2e9e <__mulsf3+0x8>

00002ec2 <__mulsf3_pse>:
    2ec2:	95 9f       	mul	r25, r21
    2ec4:	c1 f3       	breq	.-16     	; 0x2eb6 <__mulsf3+0x20>
    2ec6:	95 0f       	add	r25, r21
    2ec8:	50 e0       	ldi	r21, 0x00	; 0
    2eca:	55 1f       	adc	r21, r21
    2ecc:	62 9f       	mul	r22, r18
    2ece:	f0 01       	movw	r30, r0
    2ed0:	72 9f       	mul	r23, r18
    2ed2:	bb 27       	eor	r27, r27
    2ed4:	f0 0d       	add	r31, r0
    2ed6:	b1 1d       	adc	r27, r1
    2ed8:	63 9f       	mul	r22, r19
    2eda:	aa 27       	eor	r26, r26
    2edc:	f0 0d       	add	r31, r0
    2ede:	b1 1d       	adc	r27, r1
    2ee0:	aa 1f       	adc	r26, r26
    2ee2:	64 9f       	mul	r22, r20
    2ee4:	66 27       	eor	r22, r22
    2ee6:	b0 0d       	add	r27, r0
    2ee8:	a1 1d       	adc	r26, r1
    2eea:	66 1f       	adc	r22, r22
    2eec:	82 9f       	mul	r24, r18
    2eee:	22 27       	eor	r18, r18
    2ef0:	b0 0d       	add	r27, r0
    2ef2:	a1 1d       	adc	r26, r1
    2ef4:	62 1f       	adc	r22, r18
    2ef6:	73 9f       	mul	r23, r19
    2ef8:	b0 0d       	add	r27, r0
    2efa:	a1 1d       	adc	r26, r1
    2efc:	62 1f       	adc	r22, r18
    2efe:	83 9f       	mul	r24, r19
    2f00:	a0 0d       	add	r26, r0
    2f02:	61 1d       	adc	r22, r1
    2f04:	22 1f       	adc	r18, r18
    2f06:	74 9f       	mul	r23, r20
    2f08:	33 27       	eor	r19, r19
    2f0a:	a0 0d       	add	r26, r0
    2f0c:	61 1d       	adc	r22, r1
    2f0e:	23 1f       	adc	r18, r19
    2f10:	84 9f       	mul	r24, r20
    2f12:	60 0d       	add	r22, r0
    2f14:	21 1d       	adc	r18, r1
    2f16:	82 2f       	mov	r24, r18
    2f18:	76 2f       	mov	r23, r22
    2f1a:	6a 2f       	mov	r22, r26
    2f1c:	11 24       	eor	r1, r1
    2f1e:	9f 57       	subi	r25, 0x7F	; 127
    2f20:	50 40       	sbci	r21, 0x00	; 0
    2f22:	9a f0       	brmi	.+38     	; 0x2f4a <__mulsf3_pse+0x88>
    2f24:	f1 f0       	breq	.+60     	; 0x2f62 <__mulsf3_pse+0xa0>
    2f26:	88 23       	and	r24, r24
    2f28:	4a f0       	brmi	.+18     	; 0x2f3c <__mulsf3_pse+0x7a>
    2f2a:	ee 0f       	add	r30, r30
    2f2c:	ff 1f       	adc	r31, r31
    2f2e:	bb 1f       	adc	r27, r27
    2f30:	66 1f       	adc	r22, r22
    2f32:	77 1f       	adc	r23, r23
    2f34:	88 1f       	adc	r24, r24
    2f36:	91 50       	subi	r25, 0x01	; 1
    2f38:	50 40       	sbci	r21, 0x00	; 0
    2f3a:	a9 f7       	brne	.-22     	; 0x2f26 <__mulsf3_pse+0x64>
    2f3c:	9e 3f       	cpi	r25, 0xFE	; 254
    2f3e:	51 05       	cpc	r21, r1
    2f40:	80 f0       	brcs	.+32     	; 0x2f62 <__mulsf3_pse+0xa0>
    2f42:	0c 94 fa 16 	jmp	0x2df4	; 0x2df4 <__fp_inf>
    2f46:	0c 94 45 17 	jmp	0x2e8a	; 0x2e8a <__fp_szero>
    2f4a:	5f 3f       	cpi	r21, 0xFF	; 255
    2f4c:	e4 f3       	brlt	.-8      	; 0x2f46 <__mulsf3_pse+0x84>
    2f4e:	98 3e       	cpi	r25, 0xE8	; 232
    2f50:	d4 f3       	brlt	.-12     	; 0x2f46 <__mulsf3_pse+0x84>
    2f52:	86 95       	lsr	r24
    2f54:	77 95       	ror	r23
    2f56:	67 95       	ror	r22
    2f58:	b7 95       	ror	r27
    2f5a:	f7 95       	ror	r31
    2f5c:	e7 95       	ror	r30
    2f5e:	9f 5f       	subi	r25, 0xFF	; 255
    2f60:	c1 f7       	brne	.-16     	; 0x2f52 <__mulsf3_pse+0x90>
    2f62:	fe 2b       	or	r31, r30
    2f64:	88 0f       	add	r24, r24
    2f66:	91 1d       	adc	r25, r1
    2f68:	96 95       	lsr	r25
    2f6a:	87 95       	ror	r24
    2f6c:	97 f9       	bld	r25, 7
    2f6e:	08 95       	ret

00002f70 <__tablejump2__>:
    2f70:	ee 0f       	add	r30, r30
    2f72:	ff 1f       	adc	r31, r31
    2f74:	05 90       	lpm	r0, Z+
    2f76:	f4 91       	lpm	r31, Z
    2f78:	e0 2d       	mov	r30, r0
    2f7a:	09 94       	ijmp

00002f7c <memcpy>:
    2f7c:	fb 01       	movw	r30, r22
    2f7e:	dc 01       	movw	r26, r24
    2f80:	02 c0       	rjmp	.+4      	; 0x2f86 <memcpy+0xa>
    2f82:	01 90       	ld	r0, Z+
    2f84:	0d 92       	st	X+, r0
    2f86:	41 50       	subi	r20, 0x01	; 1
    2f88:	50 40       	sbci	r21, 0x00	; 0
    2f8a:	d8 f7       	brcc	.-10     	; 0x2f82 <memcpy+0x6>
    2f8c:	08 95       	ret

00002f8e <_exit>:
    2f8e:	f8 94       	cli

00002f90 <__stop_program>:
    2f90:	ff cf       	rjmp	.-2      	; 0x2f90 <__stop_program>
